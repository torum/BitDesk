<fw:AcrylicWindow x:Class="BitDesk.MainWindow"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:local="clr-namespace:BitDesk"
                  xmlns:vms="clr-namespace:BitDesk.ViewModels"
                  xmlns:helpers="clr-namespace:BitDesk.Helpers"
                  xmlns:common="clr-namespace:BitDesk.Common"
                  xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf" 
                  xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
                  mc:Ignorable="d"
                  
                  Title="{Binding AppTitle}" 
                  
                  Height="450" Width="800"
                  MinWidth="430" MinHeight="474"
        
                  Background="Transparent"
                  BorderThickness="0.1"
        
                  fw:AcrylicWindow.Enabled="True"
                  fw:AcrylicWindow.AcrylicWindowStyle="None"
                  fw:AcrylicWindow.ExtendViewIntoTitleBar="False"
                  fw:AcrylicWindow.TintOpacity="0.5"
                  fw:AcrylicWindow.TintColor="{DynamicResource WindowTintColor}"
                  fw:AcrylicWindow.FallbackColor="{DynamicResource WindowFallbackColor}"
        
                  helpers:MaximizeDoubleClickHelper.MaximizeDoubleClick="True" 
                  
                  SizeChanged="Window_SizeChanged"
                  StateChanged="Window_StateChanged"
                  
                  TextOptions.TextFormattingMode="Ideal"
                  TextOptions.TextRenderingMode="Aliased"
                  UseLayoutRounding="true"
                  
                  FocusVisualStyle="{x:Null}"

                  DataContext="{StaticResource MainViewModel}">

    <!-- MinWidth="423" MinHeight="554" Width="1636" Height="848" Width="1536" Height="848",  Width="1420" Height="765", Width="1165" Height="690",-->

    <Window.InputBindings>
        <KeyBinding Command="{Binding Path=ShowSettingsCommand}" Key="S" Modifiers="Control"/>
        <KeyBinding Command="{Binding Path=EscCommand}" Key="ESC"/>
        <KeyBinding Command="{Binding Path=ShowLogInCommand}" Key="U" Modifiers="Control"/>
        <KeyBinding Command="{Binding Path=LogOutCommand}" Key="L" Modifiers="Control"/>
    </Window.InputBindings>

    <Grid x:Name="BackgroundGrid" Background="Transparent">
        <Rectangle x:Name="AcrylicBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{DynamicResource WindowBackgroundBaseColorBrush}" Opacity="{Binding WindowOpacity, Mode=OneWay}" helpers:EnableDragHelper.EnableDrag="True"></Rectangle>

        <!-- アプリタイトルバー -->
        <Grid>
            <Grid.RowDefinitions>
                <!-- Top -->
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <Border x:Name="AppTitleBar" Grid.Row="0" Grid.Column="0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- アプリアイコン -->
                    <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left">

                        <Viewbox Margin="9 6 3 3" Panel.ZIndex="1" HorizontalAlignment="Left" VerticalAlignment="Center" Stretch="Uniform" Width="12" Height="12" Focusable="True" FocusVisualStyle="{x:Null}" ToolTip="{Binding AppTitle, Mode=OneWay}" ToolTipService.ToolTip="{Binding AppTitle, Mode=OneWay}">
                            <Canvas Opacity="1" Width="12" Height="12" HorizontalAlignment="Center" VerticalAlignment="Center">

                                <Path Width="12" Height="12" Stretch="Uniform" Fill="{DynamicResource WindowBackgroundBaseColorBrush}" StrokeThickness="0.8" Stroke="#FF545454" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Data="m 4 14 h 8 V 43 H 4 Z m 16 7 h 8 V 43 H 20 Z M 36 5 h 8 V 43 H 36 Z M 7.9830518 4.7966104 v 7.9999986 m 15.8644042 0.0339 v 7.999998"/>

                            </Canvas>
                        </Viewbox>
<!--
                        <TextBlock Text="{Binding AppTitle}" Style="{DynamicResource DefaultTextBlockStyle}" VerticalAlignment="Center" Padding="12 0 0 0"/>
-->
                        <!-- 自動取引の情報　表示 
                        <Border Visibility="{Binding ExperimentalMode, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="24 6 3 3" Visibility="{Binding ActivePair.AutoTradeStart, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">

                                <TextBlock Style="{DynamicResource DefaultTextBlockStyle}" VerticalAlignment="Center">
                                        <Run Text="["></Run>
                                        <Run Text="{Binding ActivePair.AutoTradeBuyOrders,Mode=OneWay}"></Run>
                                        <Run Text=" "></Run>
                                        <Run Text="{Binding ActivePair.AutoTradeSellOrders,Mode=OneWay}"></Run>
                                        <Run Text=" "></Run>
                                        <Run Text="{Binding ActivePair.AutoTradeErrOrders,Mode=OneWay}"></Run>

                                        <Run Text="]"></Run>
                                </TextBlock>
                                <Label Content=" 損益：" Margin="6 0 0 0" Style="{DynamicResource DefaultLabelStyle}" VerticalAlignment="Center"></Label>
                                <TextBlock Text="{Binding ActivePair.AutoTradeProfit, Mode=OneWay, StringFormat=0.#############################}" Style="{DynamicResource DefaultTextBlockStyle}" VerticalAlignment="Center"></TextBlock>

                            </StackPanel>
                        </Border>
-->
                    </StackPanel>

                    <!-- システムメニュー -->
                    <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="3 0 3 3">

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0" Visibility="{Binding ShowAllCharts, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">

                            <ComboBox x:Name="CandleTypesComboBox" ItemsSource="{Binding CandleTypesDictionary}" SelectedValue="{Binding SelectedCandleType}" SelectedValuePath="Key" VerticalAlignment="Center" Margin="3 0 3 0" Padding="0 0 0 0" Background="Transparent" Style="{DynamicResource ComboBoxFlatStyle}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Viewbox Margin="3 0 3 0" HorizontalAlignment="Left" VerticalAlignment="Center" Stretch="Uniform" Width="12" Height="12" ToolTip="ロウソク足単位">
                                                <Canvas Opacity="0.5" Width="12" Height="12" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                    <Path x:Name="CandleIcon" Stretch="Uniform" Width="12" Height="12" StrokeThickness="1" Fill="Transparent" Stroke="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=Foreground}" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Data="m 23.847456 4.830509 v 7.999998 m 0.243249 22.599407 v 7.999999 M 20 13 h 8 v 22 h -8 z"/>
                                                </Canvas>
                                            </Viewbox>
                                            <TextBlock x:Name="SelectedCandleTypesComboBoxItem" Text="{Binding Path=Value}" Foreground="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=Foreground}"></TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>

                            <ComboBox x:Name="ChartSpansComboBox" ItemsSource="{Binding ChartSpansDictionary}" SelectedValue="{Binding SelectedChartSpan}" SelectedValuePath="Key" VerticalAlignment="Center" Margin="3 0 12 0" Padding="0 0 0 0" Background="Transparent" Style="{DynamicResource ComboBoxFlatStyle}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Viewbox Margin="3 0 4 0" HorizontalAlignment="Left" VerticalAlignment="Center" Stretch="Uniform" Width="10" Height="10" ToolTip="チャート表示期間">
                                                <Canvas Opacity="0.5" Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                    <Path x:Name="ChartSpanIcon" Stretch="Uniform" Width="10" Height="10" StrokeThickness="1" Fill="Transparent" Stroke="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=Foreground}" StrokeMiterLimit="4" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Data="m 11.037903 40.507879 v 3.397486 H 36.997419 V 40.633712 M 5.1774598 4.2792283 5.4650965 44.116905 H 42.13877"/>
                                                </Canvas>
                                            </Viewbox>
                                            <TextBlock x:Name="SelectedChartSpanComboBoxItem" Text="{Binding Path=Value}" Foreground="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=Foreground}"></TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>

                        </StackPanel>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0" Visibility="{Binding NotMinMode, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                            <!-- 透明度変更 -->
                            <Slider x:Name="SliderSeek" Width="60" Opacity="0.7" Minimum="0.1" Maximum="1" Value="{Binding Mode=TwoWay, Path=WindowOpacity}" ToolTip="画面の透過率" VerticalAlignment="Center"  Margin="3" Foreground="{DynamicResource ControlForegroundColorBrush}" Background="Transparent" IsMoveToPointEnabled="True" Style="{DynamicResource CustomSliderStyle}"></Slider>

                            <!-- テーマ切替 -->
                            <ComboBox x:Name="ThemeComboBox" ItemsSource="{Binding Themes}" SelectedItem="{Binding CurrentTheme}" ToolTip="テーマの切替" Foreground="{DynamicResource ControlForegroundColorBrush}" VerticalAlignment="Center" Margin="3 0 6 0" Padding="0 0 0 0" Background="Transparent" Style="{DynamicResource ComboBoxFlatStyle}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Canvas Background="Transparent" Width="12" Height="12" ToolTip="{Binding Path=Label, Mode=OneWay}">
                                                <Path Fill="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=Foreground, Mode=OneWay}" Width="12" Height="12" Stretch="Uniform" Data="{Binding Path=IconData, Mode=OneWay}" />
                                            </Canvas>
                                            <!--
                                            <TextBlock Text="{Binding Path=Label}" Style="{DynamicResource DefaultTextBlockStyle}" Margin="6 0 0 0"></TextBlock>
                                            -->
                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            
                        </StackPanel>

                        <!-- 設定画面表示 -->
                        <Button x:Name="SettingsButton" Style="{DynamicResource PathButton}" Width="18" Height="18" Margin="3" Opacity="0.7" Command="{Binding ShowSettingsCommand}" ToolTip="設定(Ctrl+S)"
                                Content="M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,
8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,
11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,
4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,
2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,
5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,
12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,
18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,
21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,
18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z">
                        </Button>
                        <!-- アカウント ログイン -->
                        <Button x:Name="LogInButton" Command="{Binding ShowLogInCommand}" Style="{DynamicResource PathButton}" ToolTip="ロック解除(Ctrl+U)" ToolTipService.ToolTip="ロック解除(Ctrl+U)" Height="18" Width="18" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="3" Visibility="{Binding PublicApiOnlyMode, Mode=OneWay, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                            M18,20V10H6V20H18M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6C4.89,22 4,21.1 4,20V10A2,2 0 0,1 6,8H15V6A3,3 0 0,0 12,3A3,3 0 0,0 9,6H7A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18M12,17A2,2 0 0,1 10,15A2,2 0 0,1 12,13A2,2 0 0,1 14,15A2,2 0 0,1 12,17Z
                        </Button>
                        <!-- アカウント ログアウト -->
                        <Button x:Name="LogOutButton" Command="{Binding LogOutCommand}" Style="{DynamicResource PathButton}" ToolTip="ロック(Ctrl+L)" ToolTipService.ToolTip="ロック(Ctrl+L)" Height="18" Width="18" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="3" Visibility="{Binding LoggedInMode, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                            M12,17A2,2 0 0,0 14,15C14,13.89 13.1,13 12,13A2,2 0 0,0 10,15A2,2 0 0,0 12,17M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6A2,2 0 0,1 4,20V10C4,8.89 4.9,8 6,8H7V6A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18M12,3A3,3 0 0,0 9,6V8H15V6A3,3 0 0,0 12,3Z
                        </Button>

                        <!-- Pin留め -->
                        <Button x:Name="TopMenuPinButton" Click="TopMenuPinButton_Click" Opacity="0.7" Style="{DynamicResource PathButton}" ToolTip="最前面にピン止め" ToolTipService.ToolTip="最前面にピン止め" Height="18" Width="18" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="3">
                            M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12M8.8,14L10,12.8V4H14V12.8L15.2,14H8.8Z
                        </Button>
                        <!-- Pin留め解除 -->
                        <Button x:Name="TopMenuUnPinButton" Click="TopMenuUnPinButton_Click" Opacity="0.7" Style="{DynamicResource PathButton}" ToolTip="最前面のピン止め解除" ToolTipService.ToolTip="最前面のピン止め解除" Height="18" Width="18" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="3">
                            M8,6.2V4H7V2H17V4H16V12L18,14V16H17.8L14,12.2V4H10V8.2L8,6.2M20,20.7L18.7,22L12.8,16.1V22H11.2V16H6V14L8,12V11.3L2,5.3L3.3,4L20,20.7M8.8,14H10.6L9.7,13.1L8.8,14Z
                        </Button>
                        <!-- エコモード -->
                        <Button x:Name="TopMenuMinimumButton" Command="{Binding ViewMinimumCommand}" Click="TopMenuMinimumButton_Click" Visibility="{Binding NotMinMode,Converter={StaticResource BoolToVisibilityCollapsedConverter}}" Style="{DynamicResource PathButton}" ToolTip="ミニマム省エネモード" ToolTipService.ToolTip="ミニマム表示：省エネモード" Height="18" Width="18" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="6 0 6 0">
                            M19.5,3.09L20.91,4.5L16.41,9H20V11H13V4H15V7.59L19.5,3.09M20.91,19.5L19.5,20.91L15,16.41V20H13V13H20V15H16.41L20.91,19.5M4.5,3.09L9,7.59V4H11V11H4V9H7.59L3.09,4.5L4.5,3.09M3.09,19.5L7.59,15H4V13H11V20H9V16.41L4.5,20.91L3.09,19.5Z
                        </Button>
                        <!-- エコモード解除 -->
                        <Button x:Name="TopMenuRestoreButton" Command="{Binding ViewRestoreCommand}" Click="TopMenuRestoreButton_Click" Visibility="{Binding MinMode,Converter={StaticResource BoolToVisibilityCollapsedConverter}}" Style="{DynamicResource PathButton}" ToolTip="通常モードへ戻す" ToolTipService.ToolTip="通常モードへ戻す" Height="18" Width="18" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="6 0 6 0">
                            M13,11H18L16.5,9.5L17.92,8.08L21.84,12L17.92,15.92L16.5,14.5L18,13H13V18L14.5,16.5L15.92,17.92L12,21.84L8.08,17.92L9.5,16.5L11,18V13H6L7.5,14.5L6.08,15.92L2.16,12L6.08,8.08L7.5,9.5L6,11H11V6L9.5,7.5L8.08,6.08L12,2.16L15.92,6.08L14.5,7.5L13,6V11Z
                        </Button>
                        <Button x:Name="MinButton" Style="{DynamicResource PathButton}" Width="18" Height="18" Margin="3" Opacity="0.7" Click="MinButton_Click" ToolTip="最小化(Alt+Space, S)">
                            M20,14H4V10H20
                        </Button>
                        <Button x:Name="RestoreButton" Style="{DynamicResource PathButton}" Width="18" Height="18" Margin="3" Opacity="0.7" Click="RestoreButton_Click" ToolTip="元のサイズに戻す(Alt+Space, R)">
                            M4,8H8V4H20V16H16V20H4V8M16,8V14H18V6H10V8H16M6,12V18H14V12H6Z
                        </Button>
                        <Button x:Name="MaxButton" Style="{DynamicResource PathButton}" Width="18" Height="18" Margin="3" Opacity="0.7" Click="MaxButton_Click" ToolTip="最大化(Alt+Space, X)">
                            M4,4H20V20H4V4M6,8V18H18V8H6Z
                        </Button>
                        <Button x:Name="CloseButton" Style="{DynamicResource PathButton}" Width="18" Height="18" Margin="3" Opacity="0.7" Click="CloseButton_Click" ToolTip="閉じる(Alt+Space, C)/(Alt+F4)">
                            M13.46,12L19,17.54V19H17.54L12,13.46L6.46,19H5V17.54L10.54,12L5,6.46V5H6.46L12,10.54L17.54,5H19V6.46L13.46,12Z
                        </Button>

                    </StackPanel>

                </Grid>
            </Border>

        </Grid>

        <!-- メインコンテンツ -->
        <Grid FocusVisualStyle="{x:Null}" Focusable="False" Visibility="{Binding ShowMainContents, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
            <Grid.RowDefinitions>
                <!-- Top -->
                <RowDefinition Height="30"/>
                <!-- Main 420 -->
                <RowDefinition Height="420" MaxHeight="428"/>
                <!-- Splitter -->
                <RowDefinition Height="8"/>
                <!--  -->
                <RowDefinition Height="1*"/>
                <!-- Bottom margin ::: doesn't work well with splitter and maxheight
                    <RowDefinition Height="6"/> -->
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <!-- Window left Margin -->
                <ColumnDefinition Width="1*"/>
                <!-- Left Menu 30 -->
                <ColumnDefinition Width="30" MaxWidth="42" x:Name="LeftMenuColum"/>
                <!-- Main1 width 383 with 3 margin left for shadow -->
                <ColumnDefinition Width="380"/>
                <!-- Main2 width 360 -->
                <ColumnDefinition Width="Auto" x:Name="Main2Colum"/>
                <!-- Main3 width 390 -->
                <ColumnDefinition Width="Auto" x:Name="Main3Colum"/>
                <!-- RightSide1Colum width 213 -->
                <ColumnDefinition Width="Auto" x:Name="RightSide1Colum"/>
                <!-- RightSide2Colum width 213 -->
                <ColumnDefinition Width="Auto" x:Name="RightSide2Colum"/>

                <ColumnDefinition Width="1*"/>
                <!-- Window Right Margin -->
                <ColumnDefinition Width="6"/>
            </Grid.ColumnDefinitions>

            <!-- 通貨ペア切替タブ -->
            <TabControl x:Name="SubNavTabControl" Grid.Row="1" Grid.Column="1" Grid.RowSpan="3" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0" Padding="0" BorderThickness="0" SelectedIndex="{Binding ActivePairIndex}" Style="{StaticResource SubNavTabControlStyle}" TabStripPlacement="Left">

                <TabItem x:Name="BTC_Tab" Width="30" Height="48" ToolTip="ビットコイン" IsSelected="True" Style="{StaticResource SubNavTabItemStyle}">
                    <TabItem.Header>
                        <Viewbox Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center" Stretch="Uniform" Width="18" Height="18">

                            <Canvas Opacity="1" Width="12" Height="12" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Path Fill="{Binding ElementName=BTC_Tab,Path=Foreground}" Stretch="Uniform" Width="12" Height="12" Data="M182.981 112.854c-7.3-5.498-17.699-7.697-17.699-7.697s8.8-5.102 12.396-10.199  c3.6-5.099 5.399-12.999 5.7-17.098c0.299-4.101 1-21.296-12.399-31.193c-10.364-7.658-22.241-10.698-38.19-11.687V0.278h-21.396  V34.57c-4.774 0-10.353 0-16.297 0V0.278H73.702V34.57c-21.841 0-42.092 0-42.092 0v22.219c0 0 8.998 0 12.372 0  c3.373 0 9.372 0.375 11.921 3.228c2.55 2.848 3 4.349 3 9.895c0 5.548 0.001 86.435 0.001 88.535c0 2.099-0.4 4.697-2.201 6.398  c-1.798 1.701-3.597 2.098-7.898 2.098c-4.3 0-12.796 0-12.796 0l-4.399 25.698c0 0 20.918 0 42.092 0v34.195h21.395v-34.195  c6.574 0 12.298 0 16.297 0v34.195h21.396v-34.759c5.531-0.323 10.688-0.742 13.696-1.136c6.1-0.798 19.896-2.398 32.796-11.397  c12.896-9 15.793-23.098 16.094-37.294C195.68 128.053 190.274 118.353 182.981 112.854z M95.096 58.766  c0 0 6.798-0.599 13.497-0.501c6.701 0.099 12.597 0.3 21.398 3c8.797 2.701 13.992 9.3 14.196 17.099  c0.199 7.799-3.204 12.996-9.2 16.296c-5.998 3.299-14.292 5.099-22.094 5.396c-7.797 0.301-17.797 0-17.797 0V58.766z   M142.986 161.045c-4.899 2.701-14.698 5.1-24.194 5.798c-9.499 0.701-23.696 0.401-23.696 0.401v-45.893c0 0 13.598-0.698 24.197 0  c10.597 0.703 19.495 3.4 23.492 5.403c3.999 1.998 11 6.396 11 16.896C153.785 154.146 147.882 158.346 142.986 161.045z"/>
                            </Canvas>

                        </Viewbox>
                    </TabItem.Header>

                    <!--
                    <lvc:CartesianChart x:Name="BtcChartTab" Width="120" Height="80" Series="{Binding ChartSeriesBtcJpy}" Hoverable="False" BorderThickness="0" Padding="0" Margin="0" Visibility="Collapsed">

                        <lvc:CartesianChart.AxisX>
                            <lvc:Axis ShowLabels="False">
                                <lvc:Axis.Separator>
                                    <lvc:Separator IsEnabled="False"></lvc:Separator>
                                </lvc:Axis.Separator>
                            </lvc:Axis>
                        </lvc:CartesianChart.AxisX>

                        <lvc:CartesianChart.AxisY>
                            <lvc:Axis Title="" ShowLabels="False" IsMerged="True" Position="LeftBottom">
                                <lvc:Axis.Separator>
                                    <lvc:Separator IsEnabled="True" StrokeThickness="0.1"></lvc:Separator>
                                </lvc:Axis.Separator>

                                <lvc:Axis.Sections>
                                    <lvc:AxisSection StrokeThickness="0.1" Stroke="#F9D648">
                                        <lvc:AxisSection.Fill>
                                            <SolidColorBrush Color="#A3A3FF" Opacity=".4"></SolidColorBrush>
                                        </lvc:AxisSection.Fill>
                                    </lvc:AxisSection>
                                </lvc:Axis.Sections>

                            </lvc:Axis>
                            <lvc:Axis Title="" ShowLabels="False">
                            </lvc:Axis>

                        </lvc:CartesianChart.AxisY>
                    </lvc:CartesianChart>
                    -->
                    
                </TabItem>

                <TabItem x:Name="XRP_Tab" Width="30" Height="48" ToolTip="リップル" Style="{StaticResource SubNavTabItemStyle}" Visibility="Visible">
                    <TabItem.Header>
                        <Viewbox Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center" Stretch="Uniform" Width="18" Height="18">

                            <Canvas Width="24" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="0" Y="0"/>
                                </Canvas.RenderTransform>
                                <Canvas.Resources/>
                                <Path Stretch="Uniform" Width="24" Height="24" Fill="{Binding ElementName=XRP_Tab,Path=Foreground}" StrokeThickness="1.33333337" Data="m 206.50993 282.299 c -29.91588 -5.41887 -53.23973 -26.38576 -73.405 -47.73643 -34.729052 -33.93093 -69.151379 -68.1744 -103.928335 -102.05643 19.508808 -0.0271 39.017615 -0.0542 58.526423 -0.0812 33.764842 32.80616 65.868012 67.41505 101.167792 98.58397 28.38976 20.95525 71.51565 15.62484 94.43907 -11.05722 30.15447 -28.56653 59.05699 -58.41093 88.67362 -87.52675 19.47323 0 38.94645 0 58.41968 0 -45.23857 43.98871 -89.00409 89.6145 -135.87027 131.85393 -25.17383 18.06313 -57.87011 23.24273 -88.02298 18.02017 z M 91.860778 403.32998 c 26.548432 -24.91558 50.365222 -53.19943 79.978462 -74.5714 43.36796 -26.37452 104.71748 -19.10952 139.08471 18.88854 40.44436 38.74782 79.77917 78.62776 119.58598 118.02467 -20.1795 -2.9511 -45.20151 5.96708 -62.19195 -4.80174 -34.05768 -32.88896 -66.35371 -67.87001 -102.75802 -98.15939 -20.03002 -10.97657 -46.68933 -11.9495 -67.13217 -1.76997 -24.96943 15.28343 -43.25857 38.84463 -64.83705 58.24151 -15.69767 15.47397 -31.38505 30.95837 -47.080812 46.43427 -19.111111 0.0184 -38.222222 0.0368 -57.333333 0.0552 20.894745 -20.78055 41.789334 -41.56125 62.684183 -62.34169 z">
                                </Path>
                            </Canvas>

                        </Viewbox>
                    </TabItem.Header>

                    <!--
                    <lvc:CartesianChart x:Name="XrpChartTab" Width="120" Height="80" Series="{Binding ChartSeriesXrpJpy}" Hoverable="False" BorderThickness="0" Padding="0" Margin="0" Visibility="Collapsed">

                        <lvc:CartesianChart.AxisX>
                            <lvc:Axis ShowLabels="False">
                                <lvc:Axis.Separator>
                                    <lvc:Separator IsEnabled="False"></lvc:Separator>
                                </lvc:Axis.Separator>
                            </lvc:Axis>
                        </lvc:CartesianChart.AxisX>

                        <lvc:CartesianChart.AxisY>
                            <lvc:Axis Title="" ShowLabels="False" IsMerged="True" Position="LeftBottom">
                                <lvc:Axis.Separator>
                                    <lvc:Separator IsEnabled="True" StrokeThickness="0.1"></lvc:Separator>
                                </lvc:Axis.Separator>

                                <lvc:Axis.Sections>
                                    <lvc:AxisSection StrokeThickness="0.1" Stroke="#F9D648">
                                        <lvc:AxisSection.Fill>
                                            <SolidColorBrush Color="#A3A3FF" Opacity=".4"></SolidColorBrush>
                                        </lvc:AxisSection.Fill>
                                    </lvc:AxisSection>
                                </lvc:Axis.Sections>

                            </lvc:Axis>
                            <lvc:Axis Title="" ShowLabels="False">
                            </lvc:Axis>
                        </lvc:CartesianChart.AxisY>

                    </lvc:CartesianChart>
                    -->
                    
                </TabItem>

                <TabItem x:Name="ETH_Tab" Width="30" Height="48" ToolTip="イーサリアム" Style="{StaticResource SubNavTabItemStyle}" Visibility="Visible">
                    <TabItem.Header>

                        <Viewbox Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" Width="12" Height="12">

                            <Canvas Width="24" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="0" Y="-8"/>
                                </Canvas.RenderTransform>
                                <Canvas.Resources/>
                                <Path Fill="{Binding ElementName=ETH_Tab,Path=Foreground}" Stroke="Black" StrokeThickness="1" Data="m 127.9611 0 -2.795 9.5 v 275.668 l 2.795 2.79 127.962 -75.638 z">
                                    <Path.LayoutTransform>
                                        <ScaleTransform ScaleX="0.1" ScaleY="0.1"/>
                                    </Path.LayoutTransform>
                                </Path>
                                <Path Fill="{Binding ElementName=ETH_Tab,Path=Foreground}" Stroke="Black" StrokeThickness="1" Data="M 127.962 0 0 212.32 127.962 287.959 V 154.158 Z">
                                    <Path.LayoutTransform>
                                        <ScaleTransform ScaleX="0.1" ScaleY="0.1"/>
                                    </Path.LayoutTransform>
                                </Path>
                                <Path Fill="{Binding ElementName=ETH_Tab,Path=Foreground}" Stroke="Black" StrokeThickness="1" Data="m 127.9611 312.1866 -1.575 1.92 v 98.199 l 1.575 4.601 128.038 -180.32 z">
                                    <Path.LayoutTransform>
                                        <ScaleTransform ScaleX="0.1" ScaleY="0.1"/>
                                    </Path.LayoutTransform>
                                </Path>
                                <Path Fill="{Binding ElementName=ETH_Tab,Path=Foreground}" Stroke="Black" StrokeThickness="1" Data="m 127.962 416.9052 v -104.72 L 0 236.5852 Z">
                                    <Path.LayoutTransform>
                                        <ScaleTransform ScaleX="0.1" ScaleY="0.1"/>
                                    </Path.LayoutTransform>
                                </Path>
                                <Path Fill="{Binding ElementName=ETH_Tab,Path=Foreground}" Stroke="Black" StrokeThickness="1" Data="m 127.9611 287.9577 127.96 -75.637 -127.96 -58.162 z">
                                    <Path.LayoutTransform>
                                        <ScaleTransform ScaleX="0.1" ScaleY="0.1"/>
                                    </Path.LayoutTransform>
                                </Path>
                                <Path Fill="{Binding ElementName=ETH_Tab,Path=Foreground}" Stroke="Black" StrokeThickness="1" Data="m 9e-4 212.3208 127.96 75.637 v -133.799 z">
                                    <Path.LayoutTransform>
                                        <ScaleTransform ScaleX="0.1" ScaleY="0.1"/>
                                    </Path.LayoutTransform>
                                </Path>

                            </Canvas>


                        </Viewbox>

                    </TabItem.Header>
                    <!--
                    <lvc:CartesianChart x:Name="EthChartTab" Width="120" Height="80" Series="{Binding ChartSeriesEthBtc}" Hoverable="False" BorderThickness="0" Padding="0" Margin="0" Visibility="Collapsed">
                        <lvc:CartesianChart.AxisX>
                            <lvc:Axis ShowLabels="False">
                                <lvc:Axis.Separator>
                                    <lvc:Separator IsEnabled="False"></lvc:Separator>
                                </lvc:Axis.Separator>
                            </lvc:Axis>
                        </lvc:CartesianChart.AxisX>

                        <lvc:CartesianChart.AxisY>
                            <lvc:Axis Title="" ShowLabels="False" IsMerged="True" Position="LeftBottom">
                                <lvc:Axis.Separator>
                                    <lvc:Separator IsEnabled="True" StrokeThickness="0.1"></lvc:Separator>
                                </lvc:Axis.Separator>

                                <lvc:Axis.Sections>
                                    <lvc:AxisSection StrokeThickness="0.1" Stroke="#F9D648">
                                        <lvc:AxisSection.Fill>
                                            <SolidColorBrush Color="#A3A3FF" Opacity=".4"></SolidColorBrush>
                                        </lvc:AxisSection.Fill>
                                    </lvc:AxisSection>
                                </lvc:Axis.Sections>

                            </lvc:Axis>
                            <lvc:Axis Title="" ShowLabels="False">
                            </lvc:Axis>
                        </lvc:CartesianChart.AxisY>
                    </lvc:CartesianChart>
                    -->
                </TabItem>

                <TabItem x:Name="LTC_Tab" Width="30" Height="48" ToolTip="ライトコイン" Style="{StaticResource SubNavTabItemStyle}" Visibility="Visible">
                    <TabItem.Header>
                        <Viewbox Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center" Stretch="Uniform" Width="16" Height="16">

                            <Canvas Opacity="1" Width="12" Height="12" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Polygon FillRule="NonZero" Fill="{Binding ElementName=LTC_Tab,Path=Foreground}" Stretch="Uniform" Width="12" Height="12" Points="94.718,184.145 107.496,123.31 172.074,79.039 179.644,42.883 115.053,87.335 133.398,0 83.788,0   57.142,127.189 29.975,145.887 23.667,180.781 49.639,162.975 36.281,226.743 195.198,226.743 204.027,184.145 "/>
                            </Canvas>

                        </Viewbox>
                    </TabItem.Header>
                    <!--
                    <lvc:CartesianChart x:Name="LtcChartTab" Width="120" Height="80" Series="{Binding ChartSeriesLtcBtc}" Hoverable="False" BorderThickness="0" Padding="0" Margin="0" Visibility="Collapsed">

                        <lvc:CartesianChart.AxisX>
                            <lvc:Axis ShowLabels="False">
                                <lvc:Axis.Separator>
                                    <lvc:Separator IsEnabled="False"></lvc:Separator>
                                </lvc:Axis.Separator>
                            </lvc:Axis>
                        </lvc:CartesianChart.AxisX>

                        <lvc:CartesianChart.AxisY>
                            <lvc:Axis Title="" ShowLabels="False" IsMerged="True" Position="LeftBottom">
                                <lvc:Axis.Separator>
                                    <lvc:Separator IsEnabled="True" StrokeThickness="0.1"></lvc:Separator>
                                </lvc:Axis.Separator>

                                <lvc:Axis.Sections>
                                    <lvc:AxisSection StrokeThickness="0.1" Stroke="#F9D648">
                                        <lvc:AxisSection.Fill>
                                            <SolidColorBrush Color="#A3A3FF" Opacity=".4"></SolidColorBrush>
                                        </lvc:AxisSection.Fill>
                                    </lvc:AxisSection>
                                </lvc:Axis.Sections>

                            </lvc:Axis>
                            <lvc:Axis Title="" ShowLabels="False">
                            </lvc:Axis>
                        </lvc:CartesianChart.AxisY>

                    </lvc:CartesianChart>
                    -->
                </TabItem>

                <TabItem x:Name="BCH_Tab" Width="30" Height="48" ToolTip="ビットコイン　キャッシュ" Style="{StaticResource SubNavTabItemStyle}" Visibility="Visible">
                    <TabItem.Header>

                        <Viewbox Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" Width="18" Height="18">

                            <Canvas Width="24" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="0" Y="0"/>
                                </Canvas.RenderTransform>
                                <Path Visibility="Collapsed" Stretch="Uniform" Width="24" Height="24" StrokeThickness="2" Stroke="{Binding ElementName=BCH_Tab,Path=Foreground}" StrokeMiterLimit="4" Data="M 562.08 292.57 C 560.08 426.7 450.17 536.33 313.2 534.5 178.51 532.69 68.64 421 71.49 283.2 74.25 149.87 183.73 42.13 316.91 42.65 450.73 42 564.22 152.32 562.12 292.56 Z"/>
                                <Path Visibility="Visible" Stretch="Uniform" Width="24" Height="24" Fill="{Binding ElementName=BCH_Tab,Path=Foreground}" Data="M 307.01367 129.70703 C 306.62695 129.71016 306.17562 129.78719 305.64062 129.92969 C 298.41062 131.92969 291.13914 133.71977 283.86914 135.50977 C 282.17914 135.92977 281.68086 136.67086 282.13086 138.38086 C 283.30086 142.83086 284.30094 147.37906 285.46094 151.78906 C 287.52094 159.78906 289.76031 167.64906 291.07031 175.78906 C 291.30031 177.15906 292.06992 178.78969 289.66992 179.42969 C 284.13992 180.77969 278.67039 182.24023 273.15039 183.74023 C 271.44039 184.20023 270.90914 183.43922 270.61914 181.94922 C 270.13914 179.46922 269.6207 177.01078 268.9707 174.55078 C 266.4107 164.21745 263.81922 153.88411 261.19922 143.55078 C 260.94922 142.55078 261.04031 141.14016 259.07031 141.66016 C 251.29698 143.72683 243.50589 145.70937 235.69922 147.60938 C 233.78922 148.06938 233.62008 148.88992 234.08008 150.66992 C 237.43008 163.59992 240.62094 176.57953 243.96094 189.51953 C 244.48094 191.51953 244.21906 192.38008 242.03906 192.83008 C 237.16906 193.83008 232.35906 195.05977 227.53906 196.25977 C 215.97239 199.13977 204.41271 202.05023 192.85938 204.99023 C 191.79937 205.26023 190.17953 205.1 190.76953 207.25 C 193.00953 215.34 195.2207 223.43984 197.2207 231.58984 C 197.8907 234.31984 198.99906 234.72969 201.53906 233.92969 C 207.21906 232.13969 212.81 230.04016 218.75 229.16016 C 228.65 227.70016 233.84937 231.00992 236.35938 240.66992 C 238.63938 249.40992 240.68969 258.19922 242.92969 266.94922 C 249.13969 291.25922 254.60961 315.76922 261.34961 339.94922 C 262.96961 345.77922 264.81922 351.53961 265.44922 357.59961 C 266.04922 363.35961 264.34016 366.43016 259.16016 368.91016 C 257.00893 369.85467 254.7476 370.52655 252.42969 370.91016 C 248.42969 371.69016 244.34969 371.91 240.42969 373.25 C 239.01969 373.74 238.16031 374.39016 238.32031 376.16016 C 239.19364 385.78016 239.99094 395.41078 240.71094 405.05078 C 240.89094 407.47078 241.80922 407.71078 243.94922 407.05078 C 260.06922 402.28078 276.47938 398.6607 292.85938 394.9707 C 294.50937 394.6007 295.15047 394.97078 295.48047 396.55078 C 296.13047 399.64078 296.92039 402.6993 297.65039 405.7793 C 300.11039 416.1393 302.53039 426.5207 305.65039 436.7207 C 305.95039 437.7207 305.99039 439.05023 307.65039 438.49023 C 315.29039 435.90023 323.31078 434.9007 331.05078 432.7207 C 332.46078 432.3207 332.94906 431.82953 332.53906 430.26953 C 331.17906 425.02953 330.01922 419.74023 328.69922 414.49023 C 326.69922 406.49023 324.46961 398.61078 322.84961 390.55078 C 322.59961 389.35078 321.98977 388.11039 324.00977 387.65039 C 328.32977 386.65039 332.58062 385.42094 336.89062 384.46094 C 343.19063 383.07094 343.21055 383.14031 344.81055 389.32031 C 347.86055 401.12031 350.92039 412.92023 353.90039 424.74023 C 354.30039 426.32023 354.84 426.74008 356.5 426.33008 C 363.78 424.56008 371.09055 422.95016 378.31055 420.91016 C 381.03055 420.13016 381.54906 419.16992 380.78906 416.41992 C 377.39906 404.14992 373.91086 391.89936 371.63086 379.35938 C 370.96086 375.67937 370.92023 375.69016 374.49023 374.41016 C 382.65023 371.48016 390.79039 368.49078 398.65039 364.80078 C 409.65039 359.65078 419.90914 353.47936 427.11914 343.35938 C 438.99914 326.75937 440.63 308.56039 435 289.40039 C 431.76 278.32039 426.62953 268.40016 416.76953 261.66016 C 408.19953 255.80016 398.41078 253.93062 388.30078 253.14062 C 387.40078 253.07063 386.03969 253.5707 385.67969 252.4707 C 385.39969 251.6307 386.61047 251.0507 387.23047 250.4707 C 395.33109 242.59389 399.98012 231.82672 400.16016 220.5293 C 399.91493 212.96518 398.09978 205.53627 394.83008 198.71094 C 387.83008 183.50094 376.36906 174.35086 359.53906 172.13086 C 347.77906 170.57086 336.10016 171.61922 324.41016 172.69922 C 319.87016 173.11922 319.88094 173.13922 318.71094 168.69922 C 315.46094 156.48922 312.7107 144.13023 309.2207 131.99023 C 308.7482 130.36273 308.17383 129.69766 307.01367 129.70703 z M 321.95508 207.83789 C 328.08992 207.91746 333.9643 208.99023 339.31055 212.49023 C 352.07055 220.76023 353.98936 237.16945 343.35938 247.93945 L 343.39062 247.93945 C 335.70063 255.73945 325.99961 260.00063 315.84961 263.64062 C 309.28872 265.93696 302.5677 267.74536 295.74023 269.05078 C 294.02023 269.39078 293.33086 268.95055 292.88086 267.31055 C 288.37419 251.08388 284.24047 234.75055 280.48047 218.31055 C 280.23047 217.20055 279.99906 216.19977 281.53906 215.75977 C 293.93906 212.19977 306.31055 208.35938 319.31055 207.85938 C 320.1968 207.83437 321.07867 207.82652 321.95508 207.83789 z M 353.38672 286.80273 C 356.36386 286.81671 359.33443 287.16377 362.24023 287.83984 L 362.26953 287.83984 C 381.83953 292.36984 389.18094 312.34023 377.21094 328.49023 C 371.89094 335.69023 364.30039 339.64961 356.40039 343.09961 C 344.58039 348.26961 331.99008 350.77945 319.58008 353.93945 C 314.64008 355.19945 314.62906 355.17961 313.28906 350.09961 C 308.76906 332.91961 305.39078 315.48047 300.05078 298.48047 C 299.58078 297.01047 300.15992 296.59023 301.41992 296.24023 C 315.50992 292.39023 329.55969 288.29039 344.17969 286.90039 C 346.23969 286.73039 348.33016 286.90039 350.41016 286.90039 C 351.40219 286.83082 352.39434 286.79808 353.38672 286.80273 z ">
                                    <Path.RenderTransform>
                                        <TranslateTransform X="0" Y="0"/>
                                    </Path.RenderTransform>
                                </Path>
                                <Path Visibility="Collapsed" Stretch="Uniform" Width="24" Height="24" Name="path45230" StrokeThickness="2" Stroke="{Binding ElementName=BCH_Tab,Path=Foreground}" Data="m 562.08 292.56999 c -2 134.13 -111.91 243.76 -248.88 241.93 -134.69 -1.81 -244.559998 -113.5 -241.71 -251.3 2.76 -133.33 112.24 -241.069994 245.42 -240.549994 133.82 -0.65 247.31 109.669994 245.21 249.909994 z"/>
                            </Canvas>

                        </Viewbox>
                    </TabItem.Header>
                    <!--
                    <lvc:CartesianChart x:Name="BchChartTab" Width="120" Height="80" Series="{Binding ChartSeriesBchJpy}" Hoverable="False" BorderThickness="0" Padding="0" Margin="0" Visibility="Collapsed">
                        <lvc:CartesianChart.AxisX>
                            <lvc:Axis ShowLabels="False">
                                <lvc:Axis.Separator>
                                    <lvc:Separator IsEnabled="False"></lvc:Separator>
                                </lvc:Axis.Separator>
                            </lvc:Axis>
                        </lvc:CartesianChart.AxisX>

                        <lvc:CartesianChart.AxisY>
                            <lvc:Axis Title="" ShowLabels="False" IsMerged="True" Position="LeftBottom">
                                <lvc:Axis.Separator>
                                    <lvc:Separator IsEnabled="True" StrokeThickness="0.1"></lvc:Separator>
                                </lvc:Axis.Separator>

                                <lvc:Axis.Sections>
                                    <lvc:AxisSection StrokeThickness="0.1" Stroke="#F9D648">
                                        <lvc:AxisSection.Fill>
                                            <SolidColorBrush Color="#A3A3FF" Opacity=".4"></SolidColorBrush>
                                        </lvc:AxisSection.Fill>
                                    </lvc:AxisSection>
                                </lvc:Axis.Sections>

                            </lvc:Axis>
                            <lvc:Axis Title="" ShowLabels="False">
                            </lvc:Axis>
                        </lvc:CartesianChart.AxisY>
                    </lvc:CartesianChart>
                    -->
                </TabItem>

                <TabItem x:Name="Mona_Tab" Width="30" Height="48" ToolTip="モナーコイン" Style="{StaticResource SubNavTabItemStyle}" Visibility="Visible">
                    <TabItem.Header>
                        <Viewbox Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" Width="18" Height="18">

                            <Canvas Width="24" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center">

                                <Path Stretch="Uniform" Width="24" Height="24" Fill="{Binding ElementName=Mona_Tab,Path=Foreground}" Data="M114.382 108.248 C 114.163 108.824 113.797 110.939 113.569 112.948 C 113.098 117.091 112.586 121.225 112.001 125.600 C 111.781 127.250 111.420 130.040 111.200 131.800 C 110.980 133.560 110.634 136.260 110.432 137.800 C 110.229 139.340 109.953 141.500 109.817 142.600 C 109.682 143.700 109.403 145.860 109.198 147.400 C 108.993 148.940 108.634 151.730 108.400 153.600 C 108.166 155.470 107.810 158.260 107.608 159.800 C 107.406 161.340 107.044 164.220 106.803 166.200 C 106.562 168.180 106.201 170.970 106.000 172.400 C 105.799 173.830 105.438 176.620 105.197 178.600 C 104.956 180.580 104.581 183.550 104.362 185.200 C 103.692 190.273 103.260 193.646 102.800 197.400 C 102.558 199.380 102.194 202.260 101.992 203.800 C 101.790 205.340 101.428 208.130 101.188 210.000 C 100.948 211.870 100.586 214.660 100.384 216.200 C 100.182 217.740 99.821 220.620 99.582 222.600 C 99.342 224.580 98.958 227.323 98.729 228.696 L 98.311 231.192 80.855 231.296 L 63.400 231.400 63.400 240.600 L 63.400 249.800 79.600 250.000 L 95.800 250.200 95.757 251.400 C 95.662 254.073 95.068 258.643 94.731 259.300 C 94.398 259.949 93.226 260.000 78.786 260.000 L 63.200 260.000 63.200 269.195 L 63.200 278.390 77.500 278.495 L 91.800 278.600 91.779 281.400 C 91.768 282.940 91.519 285.910 91.225 288.000 C 90.932 290.090 90.672 292.250 90.646 292.800 L 90.600 293.800 110.784 293.800 L 130.967 293.800 131.267 292.400 C 131.535 291.144 132.062 287.016 132.669 281.400 C 132.998 278.364 132.865 278.400 143.676 278.400 L 153.200 278.400 153.200 269.200 L 153.200 260.000 144.424 260.000 C 139.597 260.000 135.573 259.865 135.482 259.700 C 135.317 259.401 135.805 254.848 136.328 251.800 L 136.603 250.200 144.801 250.000 L 153.000 249.800 153.000 240.600 L 153.000 231.400 146.022 231.200 L 139.044 231.000 139.155 228.608 C 139.216 227.292 139.341 226.095 139.432 225.948 C 139.524 225.800 139.783 223.996 140.010 221.940 C 140.413 218.274 140.876 214.391 141.623 208.400 C 141.829 206.750 142.178 203.870 142.400 202.000 C 142.622 200.130 142.971 197.250 143.177 195.600 C 143.383 193.950 143.742 191.025 143.976 189.100 C 144.209 187.175 144.594 184.025 144.831 182.100 C 145.068 180.175 145.383 177.430 145.531 176.000 C 145.679 174.570 145.980 173.427 146.200 173.459 C 146.565 173.513 156.625 203.385 178.444 269.200 L 186.600 293.800 200.766 293.800 L 214.931 293.800 215.819 291.200 C 216.308 289.770 218.373 283.470 220.409 277.200 C 222.444 270.930 225.502 261.570 227.203 256.400 C 228.904 251.230 231.961 241.870 233.996 235.600 C 236.031 229.330 238.911 220.510 240.397 216.000 C 241.882 211.490 244.939 202.130 247.189 195.200 C 250.633 184.595 252.935 177.543 253.837 174.833 C 254.231 173.653 254.890 175.168 255.242 178.062 C 255.831 182.900 256.378 187.232 256.775 190.200 C 257.709 197.190 258.236 201.210 259.213 208.800 C 259.454 210.670 259.820 213.460 260.025 215.000 C 260.231 216.540 260.580 219.240 260.800 221.000 C 261.020 222.760 261.380 225.550 261.600 227.200 C 261.820 228.850 262.180 231.640 262.400 233.400 C 262.620 235.160 262.969 237.860 263.175 239.400 C 263.380 240.940 263.753 243.730 264.003 245.600 C 264.253 247.470 264.611 250.260 264.800 251.800 C 264.989 253.340 265.347 256.130 265.597 258.000 C 265.847 259.870 266.220 262.660 266.425 264.200 C 266.631 265.740 266.980 268.440 267.200 270.200 C 267.420 271.960 267.781 274.750 268.001 276.400 C 268.390 279.311 268.671 281.541 269.582 288.944 C 270.282 294.626 267.742 294.024 290.516 293.904 L 310.200 293.800 310.154 292.800 C 310.112 291.894 309.884 290.072 308.800 282.000 C 308.608 280.570 308.248 277.870 308.000 276.000 C 307.752 274.130 307.392 271.430 307.200 270.000 C 307.008 268.570 306.648 265.870 306.400 264.000 C 306.152 262.130 305.792 259.430 305.600 258.000 C 305.408 256.570 305.048 253.870 304.800 252.000 C 304.552 250.130 304.192 247.430 304.000 246.000 C 303.808 244.570 303.448 241.870 303.200 240.000 C 302.952 238.130 302.592 235.430 302.400 234.000 C 302.208 232.570 301.848 229.870 301.600 228.000 C 301.352 226.130 300.992 223.430 300.800 222.000 C 300.608 220.570 300.248 217.870 300.000 216.000 C 299.752 214.130 299.392 211.430 299.200 210.000 C 299.008 208.570 298.648 205.870 298.400 204.000 C 298.152 202.130 297.792 199.430 297.600 198.000 C 297.408 196.570 297.048 193.870 296.800 192.000 C 296.552 190.130 296.192 187.430 296.000 186.000 C 295.808 184.570 295.448 181.870 295.200 180.000 C 294.952 178.130 294.592 175.430 294.400 174.000 C 294.208 172.570 293.848 169.870 293.600 168.000 C 293.352 166.130 292.992 163.430 292.800 162.000 C 292.608 160.570 292.248 157.870 292.000 156.000 C 291.752 154.130 291.392 151.430 291.200 150.000 C 291.008 148.570 290.661 145.960 290.428 144.200 C 290.195 142.440 289.816 139.650 289.586 138.000 C 289.195 135.193 288.921 133.155 287.999 126.200 C 287.795 124.660 287.441 122.050 287.213 120.400 C 286.985 118.750 286.627 116.050 286.417 114.400 C 285.739 109.062 285.488 107.805 285.040 107.506 C 284.213 106.954 238.225 107.141 237.537 107.700 C 236.947 108.179 235.987 110.990 227.601 136.800 C 225.564 143.070 222.683 151.890 221.200 156.400 C 219.716 160.910 216.833 169.730 214.793 176.000 C 212.753 182.270 209.874 191.090 208.394 195.600 C 206.915 200.110 204.750 206.770 203.584 210.400 C 200.511 219.961 200.998 220.027 197.608 209.600 C 196.214 205.310 193.685 197.570 191.988 192.400 C 190.292 187.230 187.239 177.870 185.205 171.600 C 183.170 165.330 180.470 157.050 179.205 153.200 C 177.941 149.350 175.237 141.070 173.197 134.800 C 166.041 112.799 164.334 107.807 163.869 107.511 C 163.611 107.347 152.461 107.209 139.090 107.206 L 114.780 107.200 114.382 108.248 "/>

                            </Canvas>

                        </Viewbox>

                    </TabItem.Header>
                    <!--
                    <lvc:CartesianChart x:Name="MonaChartTab" Width="120" Height="80" Series="{Binding ChartSeriesMonaJpy}" Hoverable="False" BorderThickness="0" Padding="0" Margin="0" Visibility="Collapsed">
                        <lvc:CartesianChart.AxisX>
                            <lvc:Axis ShowLabels="False">
                                <lvc:Axis.Separator>
                                    <lvc:Separator IsEnabled="False"></lvc:Separator>
                                </lvc:Axis.Separator>
                            </lvc:Axis>
                        </lvc:CartesianChart.AxisX>

                        <lvc:CartesianChart.AxisY>
                            <lvc:Axis Title="" ShowLabels="False" IsMerged="True" Position="LeftBottom">
                                <lvc:Axis.Separator>
                                    <lvc:Separator IsEnabled="True" StrokeThickness="0.1"></lvc:Separator>
                                </lvc:Axis.Separator>

                                <lvc:Axis.Sections>
                                    <lvc:AxisSection StrokeThickness="0.1" Stroke="#F9D648">
                                        <lvc:AxisSection.Fill>
                                            <SolidColorBrush Color="#A3A3FF" Opacity=".4"></SolidColorBrush>
                                        </lvc:AxisSection.Fill>
                                    </lvc:AxisSection>
                                </lvc:Axis.Sections>

                            </lvc:Axis>
                            <lvc:Axis Title="" ShowLabels="False">
                            </lvc:Axis>
                        </lvc:CartesianChart.AxisY>
                    </lvc:CartesianChart>
                    -->
                </TabItem>

                <TabItem x:Name="Xlm_Tab" Width="30" Height="48" ToolTip="ステラルーメン" Style="{StaticResource SubNavTabItemStyle}" Visibility="Visible">
                    <TabItem.Header>
                        <Viewbox Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" Width="18" Height="18">

                            <Canvas Width="24" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center">

                                <Path Stretch="Uniform" Width="24" Height="24" Fill="{Binding ElementName=Xlm_Tab,Path=Foreground}" Data="m 622.70085,1185.1493 c -69.48913,-5.747 -132.42304,-22.8698 -192.66666,-52.42 -18.39792,-9.0244 -47.48304,-25.6683 -61.96137,-35.4574 l -5.96135,-4.0305 48.62801,-23.8848 48.62803,-23.8847 7.33333,3.6814 c 46.15824,23.1716 100.15086,38.5378 154.47461,43.9634 17.77676,1.7754 63.9407,1.7754 81.71746,0 61.74208,-6.1665 118.63445,-23.8452 170.92002,-53.1118 126.24427,-70.6646 208.90157,-197.2483 222.29457,-340.42783 1.6098,-17.20966 1.3153,-84.13718 -0.3777,-85.83014 -0.4845,-0.4845 -238.8057,118.28576 -529.60272,263.93393 C 275.33005,1023.329 36.790076,1142.4957 36.038246,1142.4957 c -0.91725,0 -1.25244,-18.0734 -1.01885,-54.9364 l 0.34813,-54.9365 L 668.03418,714.23581 C 1016.0008,539.12295 1301.1508,395.84435 1301.7008,395.83893 c 0.55,-0.005 1,25.3797 1,56.41144 v 56.4213 l -7.6667,3.12467 c -54.0112,22.01304 -89.9815,53.4059 -100.9397,88.09463 -4.0474,12.81218 -4.6658,20.44494 -5.2875,65.2714 -0.6664,48.05007 -4.3559,78.17723 -14.7771,120.66667 -27.2782,111.21842 -92.5119,213.14825 -182.26603,284.79656 -78.28657,62.4941 -169.31139,100.3744 -270.39626,112.5266 -21.0627,2.5321 -78.21156,3.6889 -98.66666,1.9971 z M 34.700856,880.73926 v -55.08978 l 12.96113,-5.23811 c 47.5385,-19.21221 76.811434,-48.85268 85.875614,-86.95381 0.96096,-4.0394 1.58666,-26.36197 1.74612,-62.29519 0.26034,-58.66728 1.08194,-70.20586 7.54769,-105.99999 36.49804,-202.05173 189.4701,-366.3915 387.86943,-416.69293 46.45981,-11.77924 80.32951,-15.87265 131.33334,-15.87265 28.87065,0 43.56468,0.59925 58,2.36536 67.92224,8.31005 128.88969,26.92984 186.28678,56.89299 16.79213,8.76603 46.91055,26.86131 55.93944,33.60867 l 4.22624,3.1583 -47.03145,24.30769 -47.03144,24.30767 -13.86145,-7.10237 C 812.29879,246.43047 757.74742,230.68665 702.89291,225.2081 c -17.77676,-1.77544 -63.9407,-1.77544 -81.71746,0 -32.00217,3.19619 -66.38119,10.25764 -93.78062,19.26255 -143.84155,47.27392 -252.17072,163.55666 -288.70382,309.90059 -8.8678,35.52252 -12.39936,65.70728 -12.33834,105.4578 0.0395,25.72005 2.85868,64.28828 4.84438,66.27399 0.25906,0.25906 241.3034,-120.72891 535.65407,-268.86214 l 535.18298,-269.33317 0.348,56.21267 c 0.1914,30.91695 -0.1214,56.68214 -0.6953,57.25595 -1.1925,1.19256 -1265.021114,634.45269 -1266.208594,634.45269 -0.42754,0 -0.77735,-24.7904 -0.77735,-55.08977 z"/>

                            </Canvas>

                        </Viewbox>

                    </TabItem.Header>
                    <!--
                    <lvc:CartesianChart x:Name="MonaChartTab" Width="120" Height="80" Series="{Binding ChartSeriesMonaJpy}" Hoverable="False" BorderThickness="0" Padding="0" Margin="0" Visibility="Collapsed">
                        <lvc:CartesianChart.AxisX>
                            <lvc:Axis ShowLabels="False">
                                <lvc:Axis.Separator>
                                    <lvc:Separator IsEnabled="False"></lvc:Separator>
                                </lvc:Axis.Separator>
                            </lvc:Axis>
                        </lvc:CartesianChart.AxisX>

                        <lvc:CartesianChart.AxisY>
                            <lvc:Axis Title="" ShowLabels="False" IsMerged="True" Position="LeftBottom">
                                <lvc:Axis.Separator>
                                    <lvc:Separator IsEnabled="True" StrokeThickness="0.1"></lvc:Separator>
                                </lvc:Axis.Separator>

                                <lvc:Axis.Sections>
                                    <lvc:AxisSection StrokeThickness="0.1" Stroke="#F9D648">
                                        <lvc:AxisSection.Fill>
                                            <SolidColorBrush Color="#A3A3FF" Opacity=".4"></SolidColorBrush>
                                        </lvc:AxisSection.Fill>
                                    </lvc:AxisSection>
                                </lvc:Axis.Sections>

                            </lvc:Axis>
                            <lvc:Axis Title="" ShowLabels="False">
                            </lvc:Axis>
                        </lvc:CartesianChart.AxisY>
                    </lvc:CartesianChart>
                    -->
                </TabItem>

            </TabControl>

            <!-- Main Scroller -->
            <ScrollViewer x:Name="MainScroller" Grid.Row="1" Grid.Column="2" Grid.RowSpan="3" Grid.ColumnSpan="1" Background="Transparent" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" HorizontalAlignment="Left" Style="{StaticResource CustomScrollViewerStyle}">

                <!--  MainContentsGrid -->
                <Grid x:Name="MainContentsGrid" VerticalAlignment="Top" HorizontalAlignment="Left">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="377"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="240"/>
                        <ColumnDefinition Width="247"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- Main1Grid -->
                    <Grid x:Name="Main1Grid" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="1" HorizontalAlignment="Left">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="420"/>
                            <RowDefinition Height="420"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="377"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Grid x:Name="Main2Grid" Grid.Row="0" Grid.Column="0" Height="420" HorizontalAlignment="Left">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="377"/>
                            </Grid.ColumnDefinitions>

                            <!-- 最新取引価格 -->
                            <Border Grid.Row="0" Grid.Column="0" Style="{DynamicResource BoardStyle}" Height="127" Margin="3 1 0 3" Width="360" HorizontalAlignment="Left" BorderThickness="0">
                                <StackPanel>

                                    <Border BorderBrush="DimGray" BorderThickness="0 0 0 0.5" Margin="3" Padding="3" >
                                        <StackPanel Orientation="Horizontal" Margin="0">
                                            <Label Padding="0" Content="最新取引価格" Style="{DynamicResource SectionTitle}"/>
                                            <TextBlock FontSize="12" Margin="15 0 0 0" Text="{Binding APIResultTicker, Mode=OneWay}" Foreground="{DynamicResource WarningColorBrush}" Style="{DynamicResource DefaultTextBlockStyle}"></TextBlock>
                                            <TextBlock x:Name="HighLowInfoText" FontSize="12" Text="{Binding Path=ActivePair.HighLowInfoText, Mode=OneWay, NotifyOnTargetUpdated=True}" Margin="15 0 0 0" HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.FontWeight="Bold">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BlinkStyle}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ActivePair.HighLowInfoTextColorFlag}" Value="True">
                                                                <Setter Property="Foreground" Value="{DynamicResource PriceUpColorBrush}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding ActivePair.HighLowInfoTextColorFlag}" Value="False">
                                                                <Setter Property="Foreground" Value="{DynamicResource PriceDownColorBrush}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </StackPanel>
                                    </Border>

                                    <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="6 3 6 3" Height="85">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" MinWidth="0"/>
                                            <ColumnDefinition Width="Auto" MinWidth="0"/>
                                        </Grid.ColumnDefinitions>

                                        <Grid Grid.Row="0" Grid.Column="0">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>

                                            <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" Margin="0">
                                                <Label Content="{Binding Path=ActivePair.TickTimeStampString, Mode=OneWay}" Style="{DynamicResource DarkLabelStyle}"/>
                                            </StackPanel>
                                            <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" Margin="6 0 24 0" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                                                <TextBlock Text="{Binding Path=ActivePair.LtpString, Mode=OneWay}" FontFamily="Yu Gothic" TextOptions.TextRenderingMode="Auto" FontWeight="SemiBold" Typography.NumeralAlignment="Tabular" Typography.NumeralStyle="Normal" FontSize="{Binding Path=ActivePair.LtpFontSize, Mode=OneWay}" VerticalAlignment="Bottom" Margin="0 0 0 0" Padding="0">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ActivePair.LtpUpFlag}" Value="True">
                                                                    <Setter Property="Foreground" Value="{DynamicResource PriceUpColorBrush}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding ActivePair.LtpUpFlag}" Value="False">
                                                                    <Setter Property="Foreground" Value="{DynamicResource PriceDownColorBrush}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                                <Label VerticalAlignment="Bottom" Margin="3 0 0 0" Padding="0" Content="{Binding CurrentPairUnitString,Mode=OneWay}" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                            </StackPanel>
                                        </Grid>

                                        <Grid Grid.Row="0" Grid.Column="1" Margin="0 0 3 0" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto" MinWidth="0"/>
                                                <ColumnDefinition Width="*" MinWidth="0"/>
                                            </Grid.ColumnDefinitions>

                                            <Label Grid.Row="1" Grid.Column="0" Padding="0 0 0 3.5" Content="24時間 H" HorizontalContentAlignment="Left" Style="{DynamicResource DefaultLabelStyle}"/>
                                            <Label Grid.Row="2" Grid.Column="0" Padding="0 0 0 3.5" Content="起動後 H" HorizontalContentAlignment="Left" Style="{DynamicResource DefaultLabelStyle}"/>
                                            <Label Grid.Row="3" Grid.Column="0" Padding="0 0 0 3.5" Content="起動後 L" HorizontalContentAlignment="Left" Style="{DynamicResource DefaultLabelStyle}"/>
                                            <Label Grid.Row="4" Grid.Column="0" Padding="0 0 0 0" Content="24時間 L" HorizontalContentAlignment="Left" Style="{DynamicResource DefaultLabelStyle}"/>

                                            <Label Grid.Row="1" Grid.Column="1" Padding="6 0 0 3.5" Content="{Binding Path=ActivePair.High24String, Mode=OneWay}" HorizontalContentAlignment="Left" Foreground="{DynamicResource Price24HColorBrush}"/>
                                            <Label Grid.Row="2" Grid.Column="1" Padding="6 0 0 3.5" Content="{Binding Path=ActivePair.HighestPriceString, Mode=OneWay}" HorizontalContentAlignment="Left" Foreground="{DynamicResource PriceInitHColorBrush}"/>
                                            <Label Grid.Row="3" Grid.Column="1" Padding="6 0 0 3.5" Content="{Binding Path=ActivePair.LowestPriceString, Mode=OneWay}" HorizontalContentAlignment="Left" Foreground="{DynamicResource PriceInitLColorBrush}"/>
                                            <Label Grid.Row="4" Grid.Column="1" Padding="6 0 0 0" Content="{Binding Path=ActivePair.Low24String, Mode=OneWay}" HorizontalContentAlignment="Left" Foreground="{DynamicResource Price24LColorBrush}"/>
                                        </Grid>

                                    </Grid>

                                </StackPanel>
                            </Border>

                            <!-- アラーム設定 -->
                            <Border Grid.Row="1" Grid.Column="0" Style="{DynamicResource BoardStyle}" Height="88" Margin="3 1 0 3" Width="360" HorizontalAlignment="Left" BorderThickness="0">
                                <StackPanel>

                                    <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" BorderBrush="DimGray" BorderThickness="0 0 0 0.5" Margin="3" Padding="3">
                                        <Label Padding="0" Content="アラーム設定" Style="{DynamicResource SectionTitle}"/>
                                    </Border>
                                    <Border Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="3 3 3 3" Padding="3" >
                                        <Grid Margin="0">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="50*"/>
                                                <ColumnDefinition Width="0"/>
                                                <ColumnDefinition Width="50*"/>
                                            </Grid.ColumnDefinitions>

                                            <Grid Grid.Row="0" Grid.Column="0" Margin="3 0 0 0">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="30*"/>
                                                    <ColumnDefinition Width="70*"/>
                                                </Grid.ColumnDefinitions>

                                                <Label Grid.Row="0" Grid.Column="0" Padding="3" VerticalAlignment="Bottom" Content="安値時：_L" ToolTip="(L)" Target="{Binding ElementName=TextBoxAlarmMinus}" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                                <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="2 3 0 3">
                                                    <TextBox x:Name="TextBoxAlarmMinus" Width="66" Text="{Binding ActivePair.AlarmMinus}" Style="{DynamicResource DefaultTextBoxStyle}"/>

                                                    <Label Margin="3 0 0 0" VerticalAlignment="Bottom" Content="{Binding CurrentPairUnitString,Mode=OneWay}" Style="{DynamicResource DefaultLabelStyle}"/>
                                                    <Label Padding="0" VerticalAlignment="Bottom" Content="以下" Style="{DynamicResource DefaultLabelStyle}"/>
                                                </StackPanel>

                                                <Label Grid.Row="1" Grid.Column="0" Padding="3" VerticalAlignment="Bottom" Content="最安値：_W" ToolTip="(W)" Target="{Binding ElementName=CheckLowest}" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                                <StackPanel Grid.Row="1"  Grid.Column="1" Orientation="Horizontal" Margin="2 3 0 3">
                                                    <CheckBox x:Name="CheckLowest" Content="起動後" IsChecked="{Binding ActivePair.PlaySoundLowest}" Style="{DynamicResource DefaultCheckBoxStyle}"/>
                                                    <CheckBox Content="24H" Margin="9 0 0 0" IsChecked="{Binding ActivePair.PlaySoundLowest24h}" Style="{DynamicResource DefaultCheckBoxStyle}"/>
                                                </StackPanel>
                                            </Grid>

                                            <Border Grid.Column="1" BorderBrush="Gainsboro" BorderThickness="0" Width="0">
                                            </Border>

                                            <Grid Grid.Row="0" Grid.Column="2" Margin="0 0 3 0" HorizontalAlignment="Right">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="30*"/>
                                                    <ColumnDefinition Width="70*"/>
                                                </Grid.ColumnDefinitions>

                                                    <Label Grid.Row="0" Grid.Column="0" Padding="3 3 3 3" VerticalAlignment="Bottom" Content="高値時：_H" ToolTip="(H)" Target="{Binding ElementName=TextBoxAlarmPlus}" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                                    <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" Margin="0 3 0 3">
                                                        <TextBox x:Name="TextBoxAlarmPlus" Width="66" Text="{Binding ActivePair.AlarmPlus}" Style="{DynamicResource DefaultTextBoxStyle}"/>
                                                    
                                                        <Label Margin="3 0 0 0" VerticalAlignment="Bottom" Content="{Binding CurrentPairUnitString,Mode=OneWay}" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                                        <Label Padding="0" VerticalAlignment="Bottom" Content="以上" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                                    </StackPanel>

                                                <Label Grid.Row="1" Grid.Column="0" Padding="3 3 3 3" VerticalAlignment="Bottom" Content="最高値：_E" ToolTip="(E)" Target="{Binding ElementName=CheckHighest}" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                                <StackPanel Grid.Row="1"  Grid.Column="1" Orientation="Horizontal" Margin="0 3 0 3">
                                                    <CheckBox x:Name="CheckHighest" Content="起動後" IsChecked="{Binding ActivePair.PlaySoundHighest}" Style="{DynamicResource DefaultCheckBoxStyle}"/>
                                                    <CheckBox Content="24H" Margin="9 0 0 0" IsChecked="{Binding ActivePair.PlaySoundHighest24h}" Style="{DynamicResource DefaultCheckBoxStyle}"/>
                                                </StackPanel>
                                            </Grid>

                                        </Grid>
                                    </Border>
                                </StackPanel>
                            </Border>

                            <!-- 保有資産 API キー設定画面 -->
                            <Border Grid.Row="2" Grid.Column="0" Style="{DynamicResource BoardStyle}" Height="101" Margin="3 1 0 3" Width="360" HorizontalAlignment="Left" Visibility="{Binding ShowAssetApiSet, Converter={StaticResource BoolToVisibilityCollapsedConverter}}" BorderThickness="0">
                                <StackPanel>
                                    <Border BorderBrush="DimGray" BorderThickness="0 0 0 0.5" Margin="3" Padding="3">
                                        <Label Padding="0" Content="保有資産情報の取得用APIキー設定" Style="{DynamicResource SectionTitle}"/>
                                    </Border>
                                    <Popup IsOpen="{Binding IsChecked, ElementName=AssetsAPIKeyInfoButton}" StaysOpen="False" PlacementTarget="{Binding ElementName=AssetsAPIKeyInfoButton}" AllowsTransparency="True" PopupAnimation="Slide">
                                        <Border Background="WhiteSmoke" CornerRadius="4" Padding="6" Width="330" Height="210">
                                            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                                                <StackPanel>
                                                    <TextBlock Padding="6" TextWrapping="Wrap">
                                このアプリケーションは、Bitbank.cc が公開しているAPIを利用して注文や資産・注文一覧・取引履歴等の情報取得をしています。
                                                    </TextBlock>
                                                    <TextBlock Padding="6" TextWrapping="Wrap">
                                これらの機能を利用するには、Bitbankでアカウントを作成し、それぞれの機能ごとにAPIキーを発行して設定をしてください。設定画面でまとめて設定または変更することもできます。
                                                    </TextBlock>
                                                    <TextBlock Padding="6">
                                <Run Text="Bitbank ログイン:"></Run>
                                <Hyperlink NavigateUri="https://bitbank.cc/" RequestNavigate="Hyperlink_RequestNavigate">https://bitbank.cc/</Hyperlink>
                                                    </TextBlock>
                                                    <TextBlock Padding="6">
                                <Run Text="Bitbank API発行ページ:"></Run>
                                <Hyperlink NavigateUri="https://bitbank.cc/app/account/api" RequestNavigate="Hyperlink_RequestNavigate">https://bitbank.cc/app/account/api</Hyperlink>
                                                    </TextBlock>

                                                    <TextBlock Padding="6">
                                <Run Text="Bitbank FAQページ:"></Run>
                                <Hyperlink NavigateUri="https://bitbankcc.zendesk.com/hc/ja/articles/360005745194-API%E3%82%AD%E3%83%BC%E3%82%92%E7%99%BA%E8%A1%8C%E3%81%97%E3%81%9F%E3%81%84" RequestNavigate="Hyperlink_RequestNavigate">FAQ：APIキーを発行したい</Hyperlink>
                                                    </TextBlock>
                                                </StackPanel>
                                            </ScrollViewer>
                                        </Border>
                                    </Popup>
                                    <Grid Margin="12 6 6 6">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Label Grid.Row="0" Grid.Column="0" Content="APIキー (権限 [参照])：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                        <Label Grid.Row="1" Grid.Column="0" Content="APIシークレット：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                        <TextBox Grid.Row="0" Grid.Column="1" Margin="3" Text="{Binding AssetsApiKey}"></TextBox>

                                        <TextBox Grid.Row="1" Grid.Column="1" Margin="3" Text="{Binding AssetsApiSecret}"></TextBox>

                                        <ToggleButton x:Name="AssetsAPIKeyInfoButton" Grid.Row="0" Grid.Column="2" Content="?" Style="{StaticResource TooltipInfoToggleButtonStyle}"/>

                                        <Button Grid.Row="1" Grid.Column="2" Width="50" Margin="3" Command="{Binding SetAssetsAPIKeyCommand}">設定</Button>

                                    </Grid>

                                </StackPanel>
                            </Border>
                            
                            <!-- 保有資産 未ログイン画面 -->
                            <Border Grid.Row="2" Grid.Column="0" Style="{DynamicResource BoardStyle}" Height="101" Margin="3 1 0 3" Width="360" HorizontalAlignment="Left" Visibility="{Binding PublicApiOnlyMode, Converter={StaticResource BoolToVisibilityCollapsedConverter}}" BorderThickness="0">
                                <StackPanel>
                                    <Border BorderBrush="DimGray" BorderThickness="0 0 0 0.5" Margin="3" Padding="3">
                                        <Label Padding="0" Content="保有資産" Style="{DynamicResource SectionTitle}"/>
                                    </Border>

                                    <!-- アカウント ログイン ロック解除 -->
                                    <Button Command="{Binding ShowLogInCommand}" Foreground="Gray" Background="Transparent" Style="{DynamicResource PathButton}" ToolTip="ロック解除(Ctrl+U)" ToolTipService.ToolTip="ロック解除(Ctrl+U)" Height="36" Width="36" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="6 12 0 0" Visibility="{Binding PublicApiOnlyMode, Mode=OneWay, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                        M18,20V10H6V20H18M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6C4.89,22 4,21.1 4,20V10A2,2 0 0,1 6,8H15V6A3,3 0 0,0 12,3A3,3 0 0,0 9,6H7A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18M12,17A2,2 0 0,1 10,15A2,2 0 0,1 12,13A2,2 0 0,1 14,15A2,2 0 0,1 12,17Z
                                    </Button>

                                </StackPanel>
                            </Border>
                            
                            <!-- 保有資産 -->
                            <Border Grid.Row="2" Grid.Column="0" Style="{DynamicResource BoardStyle}" Height="101" Margin="3 1 0 3" Width="360" HorizontalAlignment="Left" Visibility="{Binding ShowAsset, Converter={StaticResource BoolToVisibilityCollapsedConverter}}" BorderThickness="0">

                                <StackPanel>
                                    <Border Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" BorderBrush="DimGray" BorderThickness="0 0 0 0.5" Margin="3" Padding="3">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>

                                            <Label Content="保有資産" Grid.Column="0" Padding="0" Style="{StaticResource SectionTitle}"/>

                                            <TextBlock Grid.Column="1" Margin="15 0 0 0" Text="{Binding APIResultAssets, Mode=OneWay}" Foreground="Yellow"></TextBlock>

                                            <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="0 0 3 0" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="{Binding ExperimentalMode, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                                <TextBlock Margin="0" Padding="0" Text="{Binding AssetAllShushi, Mode=OneWay}" Style="{DynamicResource DefaultTextBlockStyle}"></TextBlock>
                                                <Label Padding="0" Content=" 円" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                    <Grid Margin="6 6 6 0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <!-- 総資産合計 -->
                                        <Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Padding="6 0 3 3" Content="総資産合計：" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>

                                        <StackPanel Grid.Row="0" Grid.Column="2" Orientation="Horizontal" Margin="3 0 3 3" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                                            <TextBlock Margin="0" Padding="0" VerticalAlignment="Bottom" Text="{Binding AssetAllEstimateAmountString, Mode=OneWay}" Style="{DynamicResource DefaultTextBlockStyle}"></TextBlock>
                                            <Label Padding="0" Content=" 円" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                        </StackPanel>

                                        <!-- JPY -->
                                        <Label Grid.Row="1" Grid.Column="0" Padding="6 1 3 4" Content="JPY：" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}" Visibility="{Binding IsJpyAssetVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"/>

                                        <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" Margin="3 0 3 3" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="{Binding IsJpyAssetVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                            <TextBlock Margin="0" Padding="0" Text="{Binding AssetJPYFreeAmount, Mode=OneWay, StringFormat={}{0:N0}}" VerticalAlignment="Bottom" Style="{DynamicResource DefaultTextBlockStyle}"/>
                                            <Label Padding="0" Content=" 円" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                            <Label Padding="0" Content=" 利用可 /" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                        </StackPanel>

                                        <StackPanel Grid.Row="1" Grid.Column="2" Orientation="Horizontal" Margin="3 0 3 3" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="{Binding IsJpyAssetVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                            <TextBlock Margin="0" Padding="0" Text="{Binding AssetJPYAmount, Mode=OneWay, StringFormat={}{0:N4}}" VerticalAlignment="Bottom" Style="{DynamicResource DefaultTextBlockStyle}"/>
                                            <Label Padding="0" Content=" 円" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                        </StackPanel>

                                        <!-- BTC/Jpy -->
                                        <Label Grid.Row="2" Grid.Column="0" Padding="6 1 3 4" Content="BTC：" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}" Visibility="{Binding IsBtcJpyAssetVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"/>

                                        <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" Margin="3 0 3 3" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="{Binding IsBtcJpyAssetVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">

                                            <TextBlock Margin="0" Padding="0" Text="{Binding AssetBTCFreeAmount, Mode=OneWay, StringFormat={}{0:N4}}" VerticalAlignment="Bottom" Style="{DynamicResource DefaultTextBlockStyle}"/>
                                            <Label Padding="0" Content=" BTC" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                            <Label Padding="0" Content=" 利用可 /" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                        </StackPanel>

                                        <StackPanel Grid.Row="2" Grid.Column="2" Orientation="Horizontal" Margin="3 0 3 3" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="{Binding IsBtcJpyAssetVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                            <Label Margin="0" Padding="0" Content="(" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                            <TextBlock Margin="0" Padding="0" VerticalAlignment="Bottom" Text="{Binding AssetBTCEstimateAmount, Mode=OneWay, StringFormat={}{0:N0}}" Style="{DynamicResource DefaultTextBlockStyle}"></TextBlock>
                                            <Label Margin="0" Padding="0" Content=" 円) " VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                            <TextBlock Margin="0" Padding="0" Text="{Binding AssetBTCAmount, Mode=OneWay, StringFormat={}{0:N5}}" VerticalAlignment="Bottom" Style="{DynamicResource DefaultTextBlockStyle}"/>
                                            <Label Margin="0" Padding="0" Content=" BTC" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                        </StackPanel>

                                        <!-- Xrp/Jpy -->
                                        <Label Grid.Row="2" Grid.Column="0" Padding="6 1 3 0" Content="XRP：" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}" Visibility="{Binding IsXrpJpyAssetVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"/>

                                        <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" Margin="3 0 3 0" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="{Binding IsXrpJpyAssetVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">

                                            <TextBlock Margin="0" Padding="0" Text="{Binding AssetXRPFreeAmount, Mode=OneWay, StringFormat={}{0:N4}}" VerticalAlignment="Bottom" Style="{DynamicResource DefaultTextBlockStyle}"/>
                                            <Label Padding="0" Content=" XRP" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                            <Label Padding="0" Content=" 利用可 /" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                        </StackPanel>

                                        <StackPanel Grid.Row="2" Grid.Column="2" Orientation="Horizontal" Margin="3 0 3 0" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="{Binding IsXrpJpyAssetVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                            <Label Margin="0" Padding="0" Content="(" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                            <TextBlock Margin="0" Padding="0" VerticalAlignment="Bottom" Text="{Binding AssetXRPEstimateAmount, Mode=OneWay, StringFormat={}{0:N0}}" Style="{DynamicResource DefaultTextBlockStyle}"></TextBlock>
                                            <Label Margin="0" Padding="0" Content=" 円) " VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                            <TextBlock Margin="0" Padding="0" Text="{Binding AssetXRPAmount, Mode=OneWay, StringFormat={}{0:N5}}" VerticalAlignment="Bottom" Style="{DynamicResource DefaultTextBlockStyle}"/>
                                            <Label Margin="0" Padding="0" Content=" XRP" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                        </StackPanel>

                                        <!-- Mona/Jpy -->
                                        <Label Grid.Row="2" Grid.Column="0" Padding="6 1 3 0" Content="Mona：" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}" Visibility="{Binding IsMonaJpyAssetVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"/>

                                        <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" Margin="3 0 3 0" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="{Binding IsMonaJpyAssetVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">

                                            <TextBlock Margin="0" Padding="0" Text="{Binding AssetMonaFreeAmount, Mode=OneWay, StringFormat={}{0:N4}}" VerticalAlignment="Bottom" Style="{DynamicResource DefaultTextBlockStyle}"/>
                                            <Label Padding="0" Content=" Mona" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                            <Label Padding="0" Content=" 利用可 /" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                        </StackPanel>

                                        <StackPanel Grid.Row="2" Grid.Column="2" Orientation="Horizontal" Margin="3 0 3 0" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="{Binding IsMonaJpyAssetVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                            <Label Margin="0" Padding="0" Content="(" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                            <TextBlock Margin="0" Padding="0" VerticalAlignment="Bottom" Text="{Binding AssetMonaEstimateAmount, Mode=OneWay, StringFormat={}{0:N0}}" Style="{DynamicResource DefaultTextBlockStyle}"></TextBlock>
                                            <Label Margin="0" Padding="0" Content=" 円) " VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                            <TextBlock Margin="0" Padding="0" Text="{Binding AssetMonaAmount, Mode=OneWay, StringFormat={}{0:N5}}" VerticalAlignment="Bottom" Style="{DynamicResource DefaultTextBlockStyle}"/>
                                            <Label Margin="0" Padding="0" Content=" Mona" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                        </StackPanel>

                                        <!-- Bch/Jpy -->
                                        <Label Grid.Row="2" Grid.Column="0" Padding="6 1 3 0" Content="BCH：" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}" Visibility="{Binding IsBchJpyAssetVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"/>

                                        <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" Margin="3 0 3 0" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="{Binding IsBchJpyAssetVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">

                                            <TextBlock Margin="0" Padding="0" Text="{Binding AssetBchFreeAmount, Mode=OneWay, StringFormat={}{0:N4}}" VerticalAlignment="Bottom" Style="{DynamicResource DefaultTextBlockStyle}"/>
                                            <Label Padding="0" Content=" BCH" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                            <Label Padding="0" Content=" 利用可 /" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                        </StackPanel>

                                        <StackPanel Grid.Row="2" Grid.Column="2" Orientation="Horizontal" Margin="3 0 3 0" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="{Binding IsBchJpyAssetVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                            <Label Margin="0" Padding="0" Content="(" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                            <TextBlock Margin="0" Padding="0" VerticalAlignment="Bottom" Text="{Binding AssetBchEstimateAmount, Mode=OneWay, StringFormat={}{0:N0}}" Style="{DynamicResource DefaultTextBlockStyle}"></TextBlock>
                                            <Label Margin="0" Padding="0" Content=" 円) " VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                            <TextBlock Margin="0" Padding="0" Text="{Binding AssetBchAmount, Mode=OneWay, StringFormat={}{0:N5}}" VerticalAlignment="Bottom" Style="{DynamicResource DefaultTextBlockStyle}"/>
                                            <Label Margin="0" Padding="0" Content=" BCH" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                        </StackPanel>

                                        <!-- Eth/Jpy -->
                                        <Label Grid.Row="3" Grid.Column="0" Padding="6 1 3 0" Content="ETH：" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}" Visibility="{Binding IsEthJpyAssetVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"/>

                                        <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Horizontal" Margin="3 0 3 0" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="{Binding IsEthJpyAssetVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">

                                            <TextBlock Margin="0" Padding="0" Text="{Binding AssetEthFreeAmount, Mode=OneWay, StringFormat={}{0:N4}}" VerticalAlignment="Bottom" Style="{DynamicResource DefaultTextBlockStyle}"/>
                                            <Label Padding="0" Content=" ETH" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                            <Label Padding="0" Content=" 利用可 /" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                        </StackPanel>

                                        <StackPanel Grid.Row="3" Grid.Column="2" Orientation="Horizontal" Margin="3 0 3 0" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="{Binding IsEthJpyAssetVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                            <Label Margin="0" Padding="0" Content="(" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                            <TextBlock Margin="0" Padding="0" VerticalAlignment="Bottom" Text="{Binding AssetEthEstimateAmount, Mode=OneWay, StringFormat={}{0:N0}}" Style="{DynamicResource DefaultTextBlockStyle}"></TextBlock>
                                            <Label Margin="0" Padding="0" Content=" 円) " VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                            <TextBlock Margin="0" Padding="0" Text="{Binding AssetEthAmount, Mode=OneWay, StringFormat={}{0:N5}}" VerticalAlignment="Bottom" Style="{DynamicResource DefaultTextBlockStyle}"/>
                                            <Label Margin="0" Padding="0" Content=" ETH" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                        </StackPanel>

                                        <!-- Ltc/Jpy -->
                                        <Label Grid.Row="3" Grid.Column="0" Padding="6 1 3 0" Content="LTC：" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}" Visibility="{Binding IsLtcJpyAssetVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"/>

                                        <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Horizontal" Margin="3 0 3 0" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="{Binding IsLtcJpyAssetVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">

                                            <TextBlock Margin="0" Padding="0" Text="{Binding AssetLtcFreeAmount, Mode=OneWay, StringFormat={}{0:N4}}" VerticalAlignment="Bottom" Style="{DynamicResource DefaultTextBlockStyle}"/>
                                            <Label Padding="0" Content=" LTC" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                            <Label Padding="0" Content=" 利用可 /" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                        </StackPanel>

                                        <StackPanel Grid.Row="3" Grid.Column="2" Orientation="Horizontal" Margin="3 0 3 0" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="{Binding IsLtcJpyAssetVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                            <Label Margin="0" Padding="0" Content="(" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                            <TextBlock Margin="0" Padding="0" VerticalAlignment="Bottom" Text="{Binding AssetLtcEstimateAmount, Mode=OneWay, StringFormat={}{0:N0}}" Style="{DynamicResource DefaultTextBlockStyle}"></TextBlock>
                                            <Label Margin="0" Padding="0" Content=" 円) " VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                            <TextBlock Margin="0" Padding="0" Text="{Binding AssetLtcAmount, Mode=OneWay, StringFormat={}{0:N5}}" VerticalAlignment="Bottom" Style="{DynamicResource DefaultTextBlockStyle}"/>
                                            <Label Margin="0" Padding="0" Content=" LTC" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                        </StackPanel>

                                        <!-- Xrp/Jpy -->
                                        <Label Grid.Row="2" Grid.Column="0" Padding="6 1 3 0" Content="XLM：" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}" Visibility="{Binding IsXlmJpyAssetVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"/>

                                        <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" Margin="3 0 3 0" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="{Binding IsXlmJpyAssetVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">

                                            <TextBlock Margin="0" Padding="0" Text="{Binding AssetXlmFreeAmount, Mode=OneWay, StringFormat={}{0:N4}}" VerticalAlignment="Bottom" Style="{DynamicResource DefaultTextBlockStyle}"/>
                                            <Label Padding="0" Content=" XLM" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                            <Label Padding="0" Content=" 利用可 /" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                        </StackPanel>

                                        <StackPanel Grid.Row="2" Grid.Column="2" Orientation="Horizontal" Margin="3 0 3 0" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="{Binding IsXlmJpyAssetVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                            <Label Margin="0" Padding="0" Content="(" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                            <TextBlock Margin="0" Padding="0" VerticalAlignment="Bottom" Text="{Binding AssetXlmEstimateAmount, Mode=OneWay, StringFormat={}{0:N0}}" Style="{DynamicResource DefaultTextBlockStyle}"></TextBlock>
                                            <Label Margin="0" Padding="0" Content=" 円) " VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                            <TextBlock Margin="0" Padding="0" Text="{Binding AssetXlmAmount, Mode=OneWay, StringFormat={}{0:N5}}" VerticalAlignment="Bottom" Style="{DynamicResource DefaultTextBlockStyle}"/>
                                            <Label Margin="0" Padding="0" Content=" XLM" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                        </StackPanel>
                                        
                                    </Grid>

                                </StackPanel>
                            </Border>

                            <!-- 統計情報 --> <!-- Height="89" -->
                            <Border Grid.Row="3" Grid.Column="0" Style="{DynamicResource BoardStyle}" Height="88" Margin="3 1 0 3" Width="360" HorizontalAlignment="Left" BorderThickness="0">
                                <StackPanel>
                                    <Border BorderBrush="DimGray" BorderThickness="0 0 0 0.5" Margin="3" Padding="3">
                                        <Label Padding="0" Content="統計" Style="{DynamicResource SectionTitle}"/>
                                    </Border>
                                    <Grid Margin="6">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="50*"/>
                                            <ColumnDefinition Width="0"/>
                                            <ColumnDefinition Width="50*"/>
                                        </Grid.ColumnDefinitions>

                                        <Grid Grid.Row="0" Grid.Column="0" Margin="3 0 0 3">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="50*"/>
                                                <ColumnDefinition Width="50*"/>
                                            </Grid.ColumnDefinitions>

                                            <Label Grid.Row="0" Grid.Column="0" Padding="3" Content="24時間中央値：" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                            <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" Margin="0 3 0 3">
                                                <TextBlock Text="{Binding Path=ActivePair.MiddleLast24PriceString, Mode=OneWay, StringFormat={}{0:N0}}" Style="{DynamicResource DefaultTextBlockStyle}"></TextBlock>
                                                <Label  Margin="3 0 3 0" Content="{Binding CurrentPairUnitString,Mode=OneWay}" Style="{DynamicResource DefaultLabelStyle}" Visibility="Collapsed"/>
                                                <TextBlock Text="{Binding Path=ActivePair.MiddleLast24PriceIcon, Mode=OneWay}" Margin="3 0 0 0">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ActivePair.MiddleLast24PriceUpFlag, Mode=OneWay}" Value="True">
                                                                    <Setter Property="Foreground" Value="{DynamicResource PriceUpColorBrush}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding ActivePair.MiddleLast24PriceUpFlag, Mode=OneWay}" Value="False">
                                                                    <Setter Property="Foreground" Value="{DynamicResource PriceDownColorBrush}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding ActivePair.MiddleLast24PriceIcon, Mode=OneWay}" Value="＝">
                                                                    <Setter Property="Foreground" Value="{DynamicResource PriceNeutralColorBrush}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </StackPanel>

                                            <Label Grid.Row="1" Grid.Column="0" Padding="3" Content="起動後中央値：" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                            <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" Margin="0 3 0 3">
                                                <TextBlock Text="{Binding Path=ActivePair.MiddleInitPriceString, Mode=OneWay, StringFormat={}{0:N0}}" Style="{DynamicResource DefaultTextBlockStyle}"></TextBlock>
                                                <Label  Margin="3 0 3 0" Content="{Binding CurrentPairUnitString,Mode=OneWay}" Style="{DynamicResource DefaultLabelStyle}" Visibility="Collapsed"/>
                                                <TextBlock Text="{Binding Path=ActivePair.MiddleInitPriceIcon, Mode=OneWay}" Margin="3 0 0 0">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ActivePair.MiddleInitPriceUpFlag, Mode=OneWay}" Value="True">
                                                                    <Setter Property="Foreground" Value="{DynamicResource PriceUpColorBrush}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding ActivePair.MiddleInitPriceUpFlag, Mode=OneWay}" Value="False">
                                                                    <Setter Property="Foreground" Value="{DynamicResource PriceDownColorBrush}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding ActivePair.MiddleInitPriceIcon, Mode=OneWay}" Value="＝">
                                                                    <Setter Property="Foreground" Value="{DynamicResource PriceNeutralColorBrush}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </StackPanel>
                                        </Grid>

                                        <Border Grid.Column="1" BorderBrush="Gainsboro" BorderThickness="0.1 0 0 0" Width="0" />

                                        <Grid Grid.Row="0" Grid.Column="2" Margin="0 0 3 0" HorizontalAlignment="Right">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="50*"/>
                                                <ColumnDefinition Width="50*"/>
                                            </Grid.ColumnDefinitions>

                                            <Label Grid.Row="0" Grid.Column="0" Padding="6 3 3 3" Content="起動時の値：" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                            <StackPanel Grid.Row="0"  Grid.Column="1" Orientation="Horizontal" Margin="0 3 0 3">
                                                <TextBlock Text="{Binding Path=ActivePair.BasePriceString, Mode=OneWay, StringFormat={}{0:N0}}" Style="{DynamicResource DefaultTextBlockStyle}"></TextBlock>
                                                <Label Margin="3 0 3 0" Content="{Binding CurrentPairUnitString,Mode=OneWay}" Style="{DynamicResource DefaultLabelStyle}" Visibility="Collapsed"/>
                                                <TextBlock Text="{Binding Path=ActivePair.BasePriceIcon, Mode=OneWay}" Margin="3 0 0 0">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ActivePair.BasePriceUpFlag, Mode=OneWay}" Value="True">
                                                                    <Setter Property="Foreground" Value="{DynamicResource PriceUpColorBrush}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding ActivePair.BasePriceUpFlag, Mode=OneWay}" Value="False">
                                                                    <Setter Property="Foreground" Value="{DynamicResource PriceDownColorBrush}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding ActivePair.BasePriceIcon, Mode=OneWay}" Value="＝">
                                                                    <Setter Property="Foreground" Value="{DynamicResource PriceNeutralColorBrush}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </StackPanel>

                                            <Label Grid.Row="1" Grid.Column="0" Padding="6 3 3 3" Content="1分の平均値：" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                            <StackPanel Grid.Row="1"  Grid.Column="1" Orientation="Horizontal" Margin="0 3 0 3">
                                                <TextBlock Text="{Binding Path=ActivePair.AveragePriceString, Mode=OneWay, StringFormat={}{0:N0}}" Style="{DynamicResource DefaultTextBlockStyle}"/>
                                                <Label Margin="3 0 3 0" Content="{Binding CurrentPairUnitString,Mode=OneWay}" Style="{DynamicResource DefaultLabelStyle}" Visibility="Collapsed"/>
                                                <TextBlock Text="{Binding Path=ActivePair.AveragePriceIcon, Mode=OneWay}" Margin="3 0 0 0">
                                                    <!--
                                                    <TextBlock.Foreground>
                                                        <SolidColorBrush Color="{Binding Path=ActivePair.AveragePriceIconColor, Mode=OneWay}"/>
                                                    </TextBlock.Foreground>
                                                    -->
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ActivePair.AveragePriceUpFlag, Mode=OneWay}" Value="True">
                                                                    <Setter Property="Foreground" Value="{DynamicResource PriceUpColorBrush}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding ActivePair.AveragePriceUpFlag, Mode=OneWay}" Value="False">
                                                                    <Setter Property="Foreground" Value="{DynamicResource PriceDownColorBrush}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding ActivePair.AveragePriceIcon, Mode=OneWay}" Value="＝">
                                                                    <Setter Property="Foreground" Value="{DynamicResource PriceNeutralColorBrush}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </StackPanel>
                                        </Grid>

                                    </Grid>

                                </StackPanel>
                            </Border>

                        </Grid>

                        <Grid x:Name="Main3Grid" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="1" Height="420" HorizontalAlignment="Left">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="420"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Border x:Name="Middle" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="1" Style="{DynamicResource BoardStyle}" HorizontalAlignment="Left" VerticalAlignment="Top">

                                    <TabControl Style="{StaticResource NoChromeTabControl}" Margin="0 0 0 0" BorderThickness="0">

                                        <TabItem Header="チャート(_C)" FontWeight="Normal" Style="{StaticResource NoChromeTabHeader}" BorderThickness="0" Width="100" Padding="4">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>

                                                <Border Grid.Row="0" BorderBrush="DimGray" BorderThickness="0 0 0 0.5" Margin="3 0 0 0" Padding="3" >

                                                    <!-- ロウソク足タイプ -->
                                                    <StackPanel Orientation="Horizontal" Margin="0">
                                                        <Label Content="単位(_U)：" Target="{Binding ElementName=CandleTypesComboBox2}" Padding="0" VerticalAlignment="Center" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                                        <ComboBox Grid.Row="1" Grid.Column="1" x:Name="CandleTypesComboBox2" ItemsSource="{Binding CandleTypesDictionary}" SelectedValue="{Binding SelectedCandleType}" SelectedValuePath="Key" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="0 0 0 0" Padding="0 0 0 0" Background="Transparent" Foreground="Gray" Style="{StaticResource ComboBoxFlatStyle}">
                                                            <ComboBox.ItemTemplate>
                                                                <DataTemplate>
                                                                    <StackPanel Orientation="Horizontal">
                                                                        <TextBlock Text="{Binding Path=Value}" Style="{DynamicResource DefaultTextBlockStyle}"></TextBlock>
                                                                    </StackPanel>
                                                                </DataTemplate>
                                                            </ComboBox.ItemTemplate>
                                                        </ComboBox>

                                                        <Label Padding="0" VerticalAlignment="Center" Content="{Binding ChartLoadingInfo}" Margin="48 0 0 0" Style="{DynamicResource DefaultLabelStyle}"/>

                                                    </StackPanel>
                                                    
                                                </Border>

                                                <Grid x:Name="Chart" Grid.Row="1" Grid.Column="0" Height="300">

                                                    <lvc:CartesianChart x:Name="ChartBTC" Height="300" Series="{Binding ChartSeriesBtcJpy}" AxisY="{Binding ChartAxisYBtcJpy}" AxisX="{Binding ChartAxisXBtcJpy}" Hoverable="False" BorderBrush="Gainsboro" BorderThickness="0 0.1 0 0.1" Padding="3 0 0 0" Margin="6 0 12 0" Visibility="{Binding IsBtcJpyVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"/>
                                                    <lvc:CartesianChart x:Name="ChartXRP" Height="300" Series="{Binding ChartSeriesXrpJpy}" AxisY="{Binding ChartAxisYXrpJpy}" AxisX="{Binding ChartAxisXXrpJpy}" Hoverable="False" Zoom="{Binding ZoomingMode}" BorderBrush="Gainsboro" BorderThickness="0 0.1 0 0.1" Padding="3 0 0 0" Margin="6 0 12 0" Visibility="{Binding IsXrpJpyVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"/>
                                                    <lvc:CartesianChart x:Name="ChartLTC" Height="300" Series="{Binding ChartSeriesLtcJpy}" AxisY="{Binding ChartAxisYLtcJpy}" AxisX="{Binding ChartAxisXLtcJpy}" Hoverable="False" Zoom="{Binding ZoomingMode}" BorderBrush="Gainsboro" BorderThickness="0 0.1 0 0.1" Padding="3 0 0 0" Margin="6 0 12 0" Visibility="{Binding IsLtcJpyVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"/>
                                                    <lvc:CartesianChart x:Name="ChartETH" Height="300" Series="{Binding ChartSeriesEthJpy}" AxisY="{Binding ChartAxisYEthJpy}" AxisX="{Binding ChartAxisXEthJpy}" Hoverable="False" Zoom="{Binding ZoomingMode}" BorderBrush="Gainsboro" BorderThickness="0 0.1 0 0.1" Padding="3 0 0 0" Margin="6 0 12 0" Visibility="{Binding IsEthJpyVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"/>
                                                    <lvc:CartesianChart x:Name="ChartMona" Height="300" Series="{Binding ChartSeriesMonaJpy}" AxisY="{Binding ChartAxisYMonaJpy}" AxisX="{Binding ChartAxisXMonaJpy}" Hoverable="False" Zoom="{Binding ZoomingMode}" BorderBrush="Gainsboro" BorderThickness="0 0.1 0 0.1" Padding="3 0 0 0" Margin="6 0 12 0" Visibility="{Binding IsMonaJpyVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"/>
                                                    <lvc:CartesianChart x:Name="ChartBCH" Height="300" Series="{Binding ChartSeriesBchJpy}" AxisY="{Binding ChartAxisYBchJpy}" AxisX="{Binding ChartAxisXBchJpy}" Hoverable="False" Zoom="{Binding ZoomingMode}" BorderBrush="Gainsboro" BorderThickness="0 0.1 0 0.1" Padding="3 0 0 0" Margin="6 0 12 0" Visibility="{Binding IsBchJpyVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"/>
                                                    <lvc:CartesianChart x:Name="ChartXLM" Height="300" Series="{Binding ChartSeriesXlmJpy}" AxisY="{Binding ChartAxisYXlmJpy}" AxisX="{Binding ChartAxisXXlmJpy}" Hoverable="False" Zoom="{Binding ZoomingMode}" BorderBrush="Gainsboro" BorderThickness="0 0.1 0 0.1" Padding="3 0 0 0" Margin="6 0 12 0" Visibility="{Binding IsXlmJpyVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"/>

                                                </Grid>

                                                <!-- チャート 
                                                <lvc:CartesianChart x:Name="Chart" Grid.Row="1" Grid.Column="0" Height="300" Series="{Binding ChartSeries}" AxisY="{Binding ChartAxisY}" AxisX="{Binding ChartAxisX}" Hoverable="False" BorderBrush="Gainsboro" BorderThickness="0 0.1 0 0.1" Padding="3 0 0 0" Margin="6 0 12 0"/>
                                                -->
                                                <!--
                                                <lvc:CartesianChart x:Name="Chart2" Grid.Row="1" Height="300" Hoverable="False" BorderBrush="Gainsboro" BorderThickness="0 0.1 0 0.1" Padding="3 0 0 0" Margin="6 0 12 0">

                                                    <lvc:CartesianChart.AxisX>
                                                        <lvc:Axis Title="日時" ShowLabels="True" IsMerged="False" MaxValue="0" MinValue="-3">
                                                            <lvc:Axis.Separator>
                                                                <lvc:Separator IsEnabled="False"></lvc:Separator>
                                                            </lvc:Axis.Separator>
                                                        </lvc:Axis>
                                                    </lvc:CartesianChart.AxisX>

                                                    <lvc:CartesianChart.AxisY>
                                                        <lvc:Axis Title="価格" ShowLabels="True" IsMerged="False" Position="RightTop" MaxValue="100" MinValue="1">

                                                            <lvc:Axis.Separator>
                                                                <lvc:Separator IsEnabled="True" StrokeThickness="0.1"></lvc:Separator>
                                                            </lvc:Axis.Separator>

                                                            <lvc:Axis.Sections>
                                                                <lvc:AxisSection StrokeThickness="0.1" Stroke="#F9D648">
                                                                    <lvc:AxisSection.Fill>
                                                                        <SolidColorBrush Color="#A3A3FF" Opacity=".4"></SolidColorBrush>
                                                                    </lvc:AxisSection.Fill>
                                                                </lvc:AxisSection>
                                                            </lvc:Axis.Sections>

                                                        </lvc:Axis>

                                                        <lvc:Axis Title="出来高" ShowLabels="False"></lvc:Axis>

                                                    </lvc:CartesianChart.AxisY>
                                                </lvc:CartesianChart>
                                                -->

                                                <!-- 表示期間 -->
                                                <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="6 0 0 3" VerticalAlignment="Bottom">

                                                    <Label Content="期間(_S)：" Target="{Binding ElementName=ChartSpanThreeDayRadioButton}" Padding="0" VerticalAlignment="Center" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                                    <!--
                                                    <RadioButton x:Name="ChartSpanFiveYearRadioButton" GroupName="ChartSpan" Content="５年" Width="48" Margin="0" IsChecked="{Binding Path=SelectedChartSpan, ConverterParameter={x:Static vms:ChartSpans.FiveYear}, Converter={StaticResource EnumBooleanConverter}}"/>
                                                    -->
                                                    
                                                    <RadioButton x:Name="ChartSpanOneYearRadioButton" GroupName="ChartSpan" Content="１年" Width="48" IsChecked="{Binding Path=SelectedChartSpan, ConverterParameter={x:Static vms:ChartSpans.OneYear}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                    <RadioButton x:Name="ChartSpanTwoMonthRadioButton" GroupName="ChartSpan" Content="２ヵ月" Width="48" IsChecked="{Binding Path=SelectedChartSpan, ConverterParameter={x:Static vms:ChartSpans.TwoMonth}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                    <RadioButton x:Name="ChartSpanOneMonthRadioButton" GroupName="ChartSpan" Content="１ヵ月" Width="48" IsChecked="{Binding Path=SelectedChartSpan, ConverterParameter={x:Static vms:ChartSpans.OneMonth}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                    <RadioButton x:Name="ChartSpanOneWeekRadioButton" GroupName="ChartSpan" Content="１週間" Width="48" IsChecked="{Binding Path=SelectedChartSpan, ConverterParameter={x:Static vms:ChartSpans.OneWeek}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                    <RadioButton x:Name="ChartSpanThreeDayRadioButton" GroupName="ChartSpan" Content="３日" Width="48" IsChecked="{Binding Path=SelectedChartSpan, ConverterParameter={x:Static vms:ChartSpans.ThreeDay}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                    <RadioButton x:Name="ChartSpanOneDayRadioButton" GroupName="ChartSpan" Content="１日" Width="48" IsChecked="{Binding Path=SelectedChartSpan, ConverterParameter={x:Static vms:ChartSpans.OneDay}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                    <RadioButton x:Name="ChartSpanThreeHourRadioButton" GroupName="ChartSpan" Content="３時間" Width="48" IsChecked="{Binding Path=SelectedChartSpan, ConverterParameter={x:Static vms:ChartSpans.ThreeHour}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                    <RadioButton x:Name="ChartSpanOneHourRadioButton" GroupName="ChartSpan" Content="１時間" Width="48" IsChecked="{Binding Path=SelectedChartSpan, ConverterParameter={x:Static vms:ChartSpans.OneHour}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>

                                                </StackPanel>

                                            </Grid>
                                        </TabItem>

                                        <TabItem Header="売買注文(_O)" FontWeight="Normal" Style="{StaticResource NoChromeTabHeader}" Background="Transparent" BorderThickness="0" Width="100" Padding="4">
                                            <Grid>

                                                <!-- 売買注文APIキー設定画面 -->
                                                <Border Width="360" Margin="3 0 0 6" HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="{Binding ShowManualTradeApiSet, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                                    <StackPanel>
                                                        <Border BorderBrush="DimGray" BorderThickness="0 0 0 0.5" Margin="3" Padding="3">
                                                            <Label Padding="0" Content="売買注文用APIキー設定" Style="{DynamicResource SectionTitle}"/>
                                                        </Border>
                                                        <Popup IsOpen="{Binding IsChecked, ElementName=ManualOrderAPIKeyInfoButton}" StaysOpen="False" PlacementTarget="{Binding ElementName=ManualOrderAPIKeyInfoButton}" AllowsTransparency="True" PopupAnimation="Slide">
                                                            <Border Background="WhiteSmoke" CornerRadius="4" Padding="6" Width="330" Height="210">
                                                                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                                                                    <StackPanel>
                                                                        <TextBlock Padding="6" TextWrapping="Wrap">
                                このアプリケーションは、Bitbank.cc が公開しているAPIを利用して注文や資産・注文一覧・取引履歴等の情報取得をしています。
                                                                        </TextBlock>
                                                                        <TextBlock Padding="6" TextWrapping="Wrap">
                                これらの機能を利用するには、Bitbankでアカウントを作成し、それぞれの機能ごとにAPIキーを発行して設定をしてください。設定画面でまとめて設定または変更することもできます。
                                                                        </TextBlock>
                                                                        <TextBlock Padding="6">
                                <Run Text="Bitbank ログイン:"></Run>
                                <Hyperlink NavigateUri="https://bitbank.cc/" RequestNavigate="Hyperlink_RequestNavigate">https://bitbank.cc/</Hyperlink>
                                                                        </TextBlock>
                                                                        <TextBlock Padding="6">
                                <Run Text="Bitbank API発行ページ:"></Run>
                                <Hyperlink NavigateUri="https://bitbank.cc/app/account/api" RequestNavigate="Hyperlink_RequestNavigate">https://bitbank.cc/app/account/api</Hyperlink>
                                                                        </TextBlock>

                                                                        <TextBlock Padding="6">
                                <Run Text="Bitbank FAQページ:"></Run>
                                <Hyperlink NavigateUri="https://bitbankcc.zendesk.com/hc/ja/articles/360005745194-API%E3%82%AD%E3%83%BC%E3%82%92%E7%99%BA%E8%A1%8C%E3%81%97%E3%81%9F%E3%81%84" RequestNavigate="Hyperlink_RequestNavigate">FAQ：APIキーを発行したい</Hyperlink>
                                                                        </TextBlock>
                                                                    </StackPanel>
                                                                </ScrollViewer>
                                                            </Border>
                                                        </Popup>
                                                        <Grid Margin="12 6 6 6">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>

                                                            <Label Grid.Row="0" Grid.Column="0" Content="APIキー (権限 [参照] [取引])：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                                            <Label Grid.Row="1" Grid.Column="0" Content="APIシークレット：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                                            <TextBox Grid.Row="0" Grid.Column="1" Margin="3" Text="{Binding ManualTradeApiKey}"></TextBox>

                                                            <TextBox Grid.Row="1" Grid.Column="1" Margin="3" Text="{Binding ManualTradeSecret}"></TextBox>

                                                            <ToggleButton x:Name="ManualOrderAPIKeyInfoButton" Grid.Row="0" Grid.Column="2" Content="?" Style="{StaticResource TooltipInfoToggleButtonStyle}"/>

                                                            <Button Grid.Row="1" Grid.Column="2" Width="50" Margin="3" Command="{Binding SetManualTradeAPIKeyCommand}">設定</Button>

                                                        </Grid>

                                                    </StackPanel>
                                                </Border>

                                                <!-- 未ログイン画面 -->
                                                <Border Height="96" Margin="3 0 0 6" HorizontalAlignment="Center" VerticalAlignment="Center"  Visibility="{Binding PublicApiOnlyMode, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                                    <StackPanel>

                                                        <!-- アカウント ログイン ロック解除 -->
                                                        <Button Command="{Binding ShowLogInCommand}" Foreground="Gray" Background="Transparent" Style="{DynamicResource PathButton}" ToolTip="ロック解除(Ctrl+U)" ToolTipService.ToolTip="ロック解除(Ctrl+U)" Height="36" Width="36" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="6 24 0 0" Visibility="{Binding PublicApiOnlyMode, Mode=OneWay, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                                            M18,20V10H6V20H18M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6C4.89,22 4,21.1 4,20V10A2,2 0 0,1 6,8H15V6A3,3 0 0,0 12,3A3,3 0 0,0 9,6H7A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18M12,17A2,2 0 0,1 10,15A2,2 0 0,1 12,13A2,2 0 0,1 14,15A2,2 0 0,1 12,17Z
                                                        </Button>

                                                    </StackPanel>
                                                </Border>

                                                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Style="{StaticResource CustomScrollViewerStyle}" VerticalAlignment="Top" Visibility="{Binding ShowManualTrade, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">

                                                    <WrapPanel VerticalAlignment="Top">

                                                        <!-- 買い注文 -->
                                                        <Border Width="339" Margin="3 1 0 6" VerticalAlignment="Top">

                                                            <ScrollViewer MaxHeight="200" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Style="{StaticResource CustomScrollViewerStyle}" VerticalAlignment="Top">
                                                                <StackPanel>

                                                                    <Border BorderBrush="Gainsboro" BorderThickness="0 0 0 0.5" Margin="3 0 3 3" Padding="3">
                                                                        <Label Padding="0" Content="[買い注文]" Style="{DynamicResource SectionTitle}" Foreground="{DynamicResource PriceUpColorBrush}"/>
                                                                    </Border>

                                                                    <Grid Margin="3">
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="*"/>
                                                                        </Grid.RowDefinitions>
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="50*"/>
                                                                            <ColumnDefinition Width="50*"/>
                                                                        </Grid.ColumnDefinitions>

                                                                        <RadioButton x:Name="buyLimitRadioButton" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="buyType" Content="指値" Margin="0" IsChecked="{Binding BuyType, ConverterParameter={x:Static vms:OrderTypes.limit}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                        <RadioButton x:Name="buyMarketRadioButton" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="buyType" Content="成行" Margin="0" IsChecked="{Binding BuyType, ConverterParameter={x:Static vms:OrderTypes.market}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                    </Grid>

                                                                    <StackPanel Margin="6 3 3 0">

                                                                        <StackPanel Orientation="Horizontal" Margin="0 6 0 3" VerticalAlignment="Bottom">
                                                                            <Label Margin="0 0 0 0" Content="数量：" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBox x:Name="buyAmountTextbox" Width="100" Text="{Binding BuyAmount}" GotFocus="Textbox_GotFocus" Style="{DynamicResource DefaultTextBoxStyle}"/>
                                                                            <Label Content="{Binding CurrentCoinString, Mode=OneWay}" Margin="3 0 0 0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                        </StackPanel>

                                                                        <StackPanel Orientation="Horizontal" Margin="0 3 0 3" VerticalAlignment="Bottom">
                                                                            <Label Margin="0 0 0 0" Content="価格：" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBox x:Name="buyPriceTextbox" Width="100" Text="{Binding BuyPrice}" GotFocus="Textbox_GotFocus" IsEnabled="{Binding IsChecked, ElementName=buyLimitRadioButton}" Style="{DynamicResource DefaultTextBoxStyle}"/>
                                                                            <Label Margin="3 0 12 0" Content="{Binding CurrentPairUnitString,Mode=OneWay}" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>

                                                                            <Label Margin="6 0 0 0" Content="予想金額：" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBlock Text="{Binding BuyEstimatePrice}" Style="{DynamicResource DefaultTextBlockStyle}"/>
                                                                            <Label Margin="3 0 12 0" Content="{Binding CurrentPairUnitString, Mode=OneWay}" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>

                                                                        </StackPanel>

                                                                        <StackPanel Orientation="Horizontal" Margin="0 3 12 3" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                                                                            <Button Content="買い注文" Command="{Binding BuyOrderCommand}" Width="90" FontWeight="Bold" Margin="0 0 0 0" Padding="0" VerticalAlignment="Bottom"/>
                                                                        </StackPanel>

                                                                        <StackPanel Orientation="Horizontal" Margin="0 0 0 0" VerticalAlignment="Top">
                                                                            <Label Margin="0 0 0 0" Content="発注結果：" VerticalAlignment="Top" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBlock Text="{Binding APIResultBuyCommandResult, NotifyOnTargetUpdated=True}" Style="{StaticResource BlinkStyle2}" VerticalAlignment="Top"/>
                                                                        </StackPanel>

                                                                        <TextBlock Text="{Binding APIResultBuyCommandErrorString}" Style="{StaticResource ErrorInfoTextBlockStyle}" TextWrapping="Wrap" VerticalAlignment="Top"/>
                                                                        
                                                                    </StackPanel>

                                                                </StackPanel>
                                                            </ScrollViewer>

                                                        </Border>

                                                        <!-- 売り注文 -->
                                                        <Border Width="339" Margin="3 1 0 0" VerticalAlignment="Top">

                                                            <ScrollViewer MaxHeight="200" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Style="{StaticResource CustomScrollViewerStyle}" VerticalAlignment="Top">
                                                                <StackPanel>

                                                                    <Border BorderBrush="Gainsboro" BorderThickness="0 0 0 0.5" Margin="3 0 3 3" Padding="3">
                                                                        <Label Padding="0" Content="[売り注文]" Style="{DynamicResource SectionTitle}" Foreground="{DynamicResource PriceDownColorBrush}"/>
                                                                    </Border>

                                                                    <Grid Margin="3">
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="*"/>
                                                                        </Grid.RowDefinitions>
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="50*"/>
                                                                            <ColumnDefinition Width="50*"/>
                                                                        </Grid.ColumnDefinitions>

                                                                        <RadioButton x:Name="sellLimitRadioButton" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="sellType" Content="指値" Margin="0" IsChecked="{Binding SellType, ConverterParameter={x:Static vms:OrderTypes.limit}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                        <RadioButton x:Name="sellMarketRadioButton" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="sellType" Content="成行" Margin="0" IsChecked="{Binding SellType, ConverterParameter={x:Static vms:OrderTypes.market}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                    </Grid>

                                                                    <StackPanel Margin="6 3 3 0">

                                                                        <StackPanel Orientation="Horizontal" Margin="0 6 0 3" VerticalAlignment="Bottom">
                                                                            <Label Margin="0 0 0 0" Content="数量：" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBox x:Name="sellAmountTextbox" Width="100" Text="{Binding SellAmount}" GotFocus="Textbox_GotFocus" Style="{DynamicResource DefaultTextBoxStyle}"/>
                                                                            <Label Content="{Binding CurrentCoinString, Mode=OneWay}" Margin="3 0 0 0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                        </StackPanel>

                                                                        <StackPanel Orientation="Horizontal" Margin="0 3 0 3" VerticalAlignment="Bottom">
                                                                            <Label Margin="0 0 0 0" Content="価格：" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBox x:Name="sellPriceTextbox" Width="100" Text="{Binding SellPrice}" IsEnabled="{Binding IsChecked, ElementName=sellLimitRadioButton}" GotFocus="Textbox_GotFocus" Style="{DynamicResource DefaultTextBoxStyle}"/>
                                                                            <Label Margin="3 0 12 0" Content="{Binding CurrentPairUnitString,Mode=OneWay}" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>

                                                                            <Label Margin="6 0 0 0" Content="予想金額：" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBlock Text="{Binding SellEstimatePrice}" Style="{DynamicResource DefaultTextBlockStyle}"/>
                                                                            <Label Margin="3 0 12 0" Content="{Binding CurrentPairUnitString,Mode=OneWay}" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>

                                                                        </StackPanel>

                                                                        <StackPanel  Orientation="Horizontal" Margin="0 3 12 3" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                                                                            <Button Content="売り注文" Command="{Binding SellOrderCommand}" Width="90" FontWeight="Bold" Margin="0 0 0 0" Padding="0" VerticalAlignment="Bottom"/>
                                                                        </StackPanel>

                                                                        <StackPanel  Orientation="Horizontal" Margin="0 0 0 0" VerticalAlignment="Top">
                                                                            <Label Margin="0 0 0 0" Content="発注結果：" VerticalAlignment="Top" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBlock Text="{Binding APIResultSellCommandResult, NotifyOnTargetUpdated=True}" Style="{StaticResource BlinkStyle2}" VerticalAlignment="Top"/>
                                                                        </StackPanel>

                                                                        <TextBlock Text="{Binding APIResultSellCommandErrorString}" Style="{StaticResource ErrorInfoTextBlockStyle}" TextWrapping="Wrap" VerticalAlignment="Top"/>

                                                                    </StackPanel>

                                                                </StackPanel>
                                                            </ScrollViewer>

                                                        </Border>

                                                    </WrapPanel>

                                                </ScrollViewer>

                                            </Grid>
                                        </TabItem>

                                        <TabItem Header="特殊注文(_I)" FontWeight="Normal" Style="{StaticResource NoChromeTabHeader}" Background="Transparent" BorderThickness="0" Width="100" Padding="4" Visibility="{Binding BetaMode, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                            <Grid>

                                                <!-- 特殊注文APIキー設定画面 -->
                                                <Border Width="360" Margin="3 0 0 6" HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="{Binding ShowIfdocoTradeApiSet, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                                    <StackPanel>
                                                        <Border BorderBrush="DimGray" BorderThickness="0 0 0 0.5" Margin="3" Padding="3">
                                                            <Label Padding="0" Content="特殊注文用APIキー設定" Style="{DynamicResource SectionTitle}"/>
                                                        </Border>
                                                        <Popup IsOpen="{Binding IsChecked, ElementName=IfdocoTradeAPIKeyInfoButton}" StaysOpen="False" PlacementTarget="{Binding ElementName=IfdocoTradeAPIKeyInfoButton}" AllowsTransparency="True" PopupAnimation="Slide">
                                                            <Border Background="WhiteSmoke" CornerRadius="4" Padding="6" Width="330" Height="210">
                                                                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                                                                    <StackPanel>
                                                                        <TextBlock Padding="6" TextWrapping="Wrap">
                                このアプリケーションは、Bitbank.cc が公開しているAPIを利用して注文や資産・注文一覧・取引履歴等の情報取得をしています。
                                                                        </TextBlock>
                                                                        <TextBlock Padding="6" TextWrapping="Wrap">
                                これらの機能を利用するには、Bitbankでアカウントを作成し、それぞれの機能ごとにAPIキーを発行して設定をしてください。設定画面でまとめて設定または変更することもできます。
                                                                        </TextBlock>
                                                                        <TextBlock Padding="6">
                                <Run Text="Bitbank ログイン:"></Run>
                                <Hyperlink NavigateUri="https://bitbank.cc/" RequestNavigate="Hyperlink_RequestNavigate">https://bitbank.cc/</Hyperlink>
                                                                        </TextBlock>
                                                                        <TextBlock Padding="6">
                                <Run Text="Bitbank API発行ページ:"></Run>
                                <Hyperlink NavigateUri="https://bitbank.cc/app/account/api" RequestNavigate="Hyperlink_RequestNavigate">https://bitbank.cc/app/account/api</Hyperlink>
                                                                        </TextBlock>

                                                                        <TextBlock Padding="6">
                                <Run Text="Bitbank FAQページ:"></Run>
                                <Hyperlink NavigateUri="https://bitbankcc.zendesk.com/hc/ja/articles/360005745194-API%E3%82%AD%E3%83%BC%E3%82%92%E7%99%BA%E8%A1%8C%E3%81%97%E3%81%9F%E3%81%84" RequestNavigate="Hyperlink_RequestNavigate">FAQ：APIキーを発行したい</Hyperlink>
                                                                        </TextBlock>
                                                                    </StackPanel>
                                                                </ScrollViewer>
                                                            </Border>
                                                        </Popup>
                                                        <Grid Margin="12 6 6 6">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>

                                                            <Label Grid.Row="0" Grid.Column="0" Content="APIキー (権限 [参照] [取引])：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                                            <Label Grid.Row="1" Grid.Column="0" Content="APIシークレット：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                                            <TextBox Grid.Row="0" Grid.Column="1" Margin="3" Text="{Binding IfdocoTradeApiKey}"></TextBox>

                                                            <TextBox Grid.Row="1" Grid.Column="1" Margin="3" Text="{Binding IfdocoTradeSecret}"></TextBox>

                                                            <ToggleButton x:Name="IfdocoTradeAPIKeyInfoButton" Grid.Row="0" Grid.Column="2" Content="?" Style="{StaticResource TooltipInfoToggleButtonStyle}"/>

                                                            <Button Grid.Row="1" Grid.Column="2" Width="50" Margin="3" Command="{Binding SetIfdocoTradeAPIKeyCommand}">設定</Button>

                                                        </Grid>

                                                    </StackPanel>
                                                </Border>

                                                <!-- 未ログイン画面 -->
                                                <Border Height="96" Margin="3 0 0 6" HorizontalAlignment="Center" VerticalAlignment="Center"  Visibility="{Binding PublicApiOnlyMode, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                                    <StackPanel>

                                                        <!-- アカウント ログイン ロック解除 -->
                                                        <Button Command="{Binding ShowLogInCommand}" Foreground="Gray" Background="Transparent" Style="{DynamicResource PathButton}" ToolTip="ロック解除(Ctrl+U)" ToolTipService.ToolTip="ロック解除(Ctrl+U)" Height="36" Width="36" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="6 24 0 0" Visibility="{Binding PublicApiOnlyMode, Mode=OneWay, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                                            M18,20V10H6V20H18M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6C4.89,22 4,21.1 4,20V10A2,2 0 0,1 6,8H15V6A3,3 0 0,0 12,3A3,3 0 0,0 9,6H7A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18M12,17A2,2 0 0,1 10,15A2,2 0 0,1 12,13A2,2 0 0,1 14,15A2,2 0 0,1 12,17Z
                                                        </Button>

                                                    </StackPanel>
                                                </Border>

                                                <TabControl x:Name="IFTab" Style="{StaticResource NoChromeTabControl}" MaxHeight="420" Margin="6 0 0 0" BorderThickness="0" Background="Transparent" VerticalAlignment="Top" Visibility="{Binding ShowIfdocoTrade, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">

                                                    <!-- IFD -->
                                                    <TabItem Header="IFD注文" FontWeight="Normal" Style="{StaticResource NoChromeTabHeader}" Background="Transparent" BorderThickness="0" Width="100" Padding="4">
                                                        <ScrollViewer MaxHeight="400" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Style="{StaticResource CustomScrollViewerStyle}">
                                                            <WrapPanel>
                                                                <!-- [IFDone 注文] -->
                                                                <Border Width="320" Height="176" Margin="3 0 0 0">
                                                                    <StackPanel Margin="0 6 0 0">

                                                                        <Label Content="[IFDone 注文]" VerticalAlignment="Bottom" BorderBrush="Gainsboro" BorderThickness="0 0 0 0.5" Padding="0" Margin="3 0 0 3" Style="{DynamicResource LightLabelStyle}"/>

                                                                        <Grid Margin="3">
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="*"/>
                                                                            </Grid.RowDefinitions>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="50*"/>
                                                                                <ColumnDefinition Width="50*"/>
                                                                            </Grid.ColumnDefinitions>

                                                                            <RadioButton x:Name="IfdSideBuyRadioButton" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="IfdSide" Content="買い" Margin="0" IsChecked="{Binding IFD_IfdSide, ConverterParameter={x:Static vms:IfdocoSide.buy}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                            <RadioButton x:Name="IfdSideSellRadioButton" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="IfdSide" Content="売り" Margin="0" IsChecked="{Binding IFD_IfdSide, ConverterParameter={x:Static vms:IfdocoSide.sell}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                        </Grid>

                                                                        <Grid Margin="3">
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="*"/>
                                                                            </Grid.RowDefinitions>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="50*"/>
                                                                                <ColumnDefinition Width="50*"/>
                                                                            </Grid.ColumnDefinitions>

                                                                            <RadioButton x:Name="IfdTypeLimitRadioButton" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="IfdType" Content="指値" Margin="0" IsChecked="{Binding IFD_IfdType, ConverterParameter={x:Static vms:IfdocoTypes.limit}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                            <RadioButton x:Name="IfdTypeMarketRadioButton" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="IfdType" Content="成行" Margin="0" IsChecked="{Binding IFD_IfdType, ConverterParameter={x:Static vms:IfdocoTypes.market}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                        </Grid>

                                                                        <StackPanel Orientation="Horizontal" Margin="0 6 0 3" VerticalAlignment="Bottom">
                                                                            <Label Content="数量：" Margin="0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBox x:Name="IfdAmountTextbox" Width="80" Text="{Binding IFD_IfdAmount}" GotFocus="Textbox_GotFocus" VerticalAlignment="Bottom" Style="{DynamicResource DefaultTextBoxStyle}"/>
                                                                            <Label Content="{Binding CurrentCoinString, Mode=OneWay}" Margin="3 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                        </StackPanel>

                                                                        <StackPanel Orientation="Horizontal" Margin="0 3 0 3" VerticalAlignment="Bottom">
                                                                            <Label Content="価格：" Margin="0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBox x:Name="IfdPriceTextbox" Width="80" VerticalAlignment="Bottom" IsEnabled="{Binding IsChecked, ElementName=IfdTypeLimitRadioButton}" Text="{Binding IFD_IfdPrice,UpdateSourceTrigger=PropertyChanged}" GotFocus="Textbox_GotFocus" Style="{DynamicResource DefaultTextBoxStyle}"/>
                                                                            <Label Content="{Binding CurrentPairUnitString,Mode=OneWay}" Margin="3 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>

                                                                            <Label Content="予想金額：" Margin="12 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBlock Text="{Binding IFD_IfdEstimatePrice, StringFormat={}{0:N0},Mode=OneWay}" Style="{DynamicResource DefaultTextBlockStyle}" VerticalAlignment="Bottom"/>
                                                                            <Label Content="{Binding CurrentPairUnitString,Mode=OneWay}" Margin="3 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>

                                                                        </StackPanel>

                                                                    </StackPanel>
                                                                </Border>
                                                                <!-- [do 注文] -->
                                                                <Border Width="320" Height="176" Margin="3 0 0 0">
                                                                    <StackPanel Margin="0 6 0 0">

                                                                        <Label Content="[do 注文]" VerticalAlignment="Bottom" BorderBrush="Gainsboro" BorderThickness="0 0 0 0.5" Padding="0" Margin="3 0 0 3" Style="{DynamicResource LightLabelStyle}"/>

                                                                        <Grid Margin="3">
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="*"/>
                                                                            </Grid.RowDefinitions>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="50*"/>
                                                                                <ColumnDefinition Width="50*"/>
                                                                            </Grid.ColumnDefinitions>

                                                                            <RadioButton x:Name="IfdDoneSideBuyRadioButton" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="IfdDoneSide" Content="買い" Margin="0" IsChecked="{Binding IFD_DoSide, ConverterParameter={x:Static vms:IfdocoSide.buy}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                            <RadioButton x:Name="IfdDoneSideSellRadioButton" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="IfdDoneSide" Content="売り" Margin="0" IsChecked="{Binding IFD_DoSide, ConverterParameter={x:Static vms:IfdocoSide.sell}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                        </Grid>

                                                                        <Grid Margin="3">
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="*"/>
                                                                            </Grid.RowDefinitions>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="50*"/>
                                                                                <ColumnDefinition Width="50*"/>
                                                                            </Grid.ColumnDefinitions>

                                                                            <RadioButton x:Name="IfdDoneTypeLimitRadioButton" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="IfdDoneType" Content="指値" Margin="0" IsChecked="{Binding IFD_DoType, ConverterParameter={x:Static vms:IfdocoTypes.limit}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                            <RadioButton x:Name="IfdDoneTypeMarketRadioButton" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="IfdDoneType" Content="成行" Margin="0" IsChecked="{Binding IFD_DoType, ConverterParameter={x:Static vms:IfdocoTypes.market}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                        </Grid>

                                                                        <StackPanel Orientation="Horizontal" Margin="0 6 0 3" VerticalAlignment="Bottom">
                                                                            <Label Content="数量：" Margin="0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBox x:Name="IfdDoneAmountTextbox" Width="80" Text="{Binding IFD_DoAmount}" GotFocus="Textbox_GotFocus" VerticalAlignment="Bottom" Style="{DynamicResource DefaultTextBoxStyle}"/>
                                                                            <Label Content="{Binding CurrentCoinString, Mode=OneWay}" Margin="3 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                        </StackPanel>

                                                                        <StackPanel Orientation="Horizontal" Margin="0 3 0 3" VerticalAlignment="Bottom">
                                                                            <Label Content="価格：" Margin="0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBox x:Name="IfdDonePriceTextbox" Width="80" VerticalAlignment="Bottom" IsEnabled="{Binding IsChecked, ElementName=IfdDoneTypeLimitRadioButton}" Text="{Binding IFD_DoPrice,UpdateSourceTrigger=PropertyChanged}" GotFocus="Textbox_GotFocus" Style="{DynamicResource DefaultTextBoxStyle}"/>
                                                                            <Label Content="{Binding CurrentPairUnitString,Mode=OneWay}" Margin="3 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>

                                                                            <Label Content="予想金額：" Margin="12 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBlock Text="{Binding IFD_DoEstimatePrice, StringFormat={}{0:N0},Mode=OneWay}" Style="{DynamicResource DefaultTextBlockStyle}" VerticalAlignment="Bottom"/>
                                                                            <Label Content="{Binding CurrentPairUnitString,Mode=OneWay}" Margin="3 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                        </StackPanel>

                                                                        <StackPanel Orientation="Horizontal" Margin="0 3 0 3" VerticalAlignment="Bottom">
                                                                            <Label Content="トリガー：" Margin="0" Padding="0" VerticalAlignment="Center" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBox Width="80" Text="{Binding IFD_DoTriggerPrice}" GotFocus="Textbox_GotFocus" VerticalAlignment="Center" Style="{DynamicResource DefaultTextBoxStyle}"/>

                                                                            <Label Content="{Binding CurrentPairUnitString,Mode=OneWay}" Margin="3 0 0 0" Padding="0" VerticalAlignment="Center" Style="{DynamicResource DefaultLabelStyle}"/>

                                                                            <ComboBox SelectedIndex="{Binding IFD_DoTriggerUpDown}" VerticalAlignment="Center" Margin="0 0 0 0" Padding="0 0 0 0" Background="Transparent" Style="{DynamicResource ComboBoxFlatStyle}">
                                                                                <ComboBoxItem Content="以上" Foreground="White"></ComboBoxItem>
                                                                                <ComboBoxItem Content="以下" Foreground="White"></ComboBoxItem>
                                                                            </ComboBox>

                                                                        </StackPanel>

                                                                    </StackPanel>
                                                                </Border>
                                                                <!-- 発注 -->
                                                                <Border Width="142" Height="176" Margin="3 0 0 0" VerticalAlignment="Top">
                                                                    <StackPanel Margin="0 6 0 0">

                                                                        <Label Content="発注" VerticalAlignment="Bottom" BorderBrush="Gainsboro" BorderThickness="0 0 0 0.5" Padding="0" Margin="3 0 0 3" Style="{DynamicResource LightLabelStyle}"/>

                                                                        <StackPanel Orientation="Horizontal" Margin="6 6 6 3" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                                                                            <Button Command="{Binding IfdOrderCommand}" Content="IFD 発注" FontWeight="Bold" Margin="0 0 0 0" Padding="3 0 3 0"/>
                                                                        </StackPanel>

                                                                        <StackPanel  Orientation="Horizontal" Margin="6 0 0 3" VerticalAlignment="Top">
                                                                            <TextBlock Text="{Binding IFDOrderCommandResult, NotifyOnTargetUpdated=True}" Style="{StaticResource BlinkStyle2}" TextWrapping="Wrap"/>
                                                                        </StackPanel>

                                                                        <StackPanel Orientation="Horizontal" Margin="6 0 0 0" VerticalAlignment="Top">
                                                                            <TextBlock Text="{Binding IFDOrderCommandErrorString}" Style="{StaticResource ErrorInfoTextBlockStyle}" TextWrapping="Wrap"/>
                                                                        </StackPanel>

                                                                    </StackPanel>
                                                                </Border>
                                                            </WrapPanel>
                                                        </ScrollViewer>
                                                    </TabItem>
                                                    <!-- OCO -->
                                                    <TabItem Header="OCO注文" FontWeight="Normal" Style="{StaticResource NoChromeTabHeader}" Background="Transparent" BorderThickness="0" Width="100" Padding="4">
                                                        <ScrollViewer MaxHeight="400" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Style="{StaticResource CustomScrollViewerStyle}">
                                                            <WrapPanel>
                                                                <!-- [One side 注文] -->
                                                                <Border Width="320" Height="176" Margin="3 0 0 0">
                                                                    <StackPanel Margin="0 6 0 0">

                                                                        <Label Content="[One side 注文]" VerticalAlignment="Bottom" BorderBrush="Gainsboro" BorderThickness="0 0 0 0.5" Padding="0" Margin="3 0 0 3" Style="{DynamicResource LightLabelStyle}"/>

                                                                        <Grid Margin="3">
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="*"/>
                                                                            </Grid.RowDefinitions>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="50*"/>
                                                                                <ColumnDefinition Width="50*"/>
                                                                            </Grid.ColumnDefinitions>

                                                                            <RadioButton x:Name="OcoSideBuyRadioButton" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="OcoSide" Content="買い" Margin="0" IsChecked="{Binding OCO_OneSide, ConverterParameter={x:Static vms:IfdocoSide.buy}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                            <RadioButton x:Name="OcoSideSellRadioButton" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="OcoSide" Content="売り" Margin="0" IsChecked="{Binding OCO_OneSide, ConverterParameter={x:Static vms:IfdocoSide.sell}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                        </Grid>

                                                                        <Grid Margin="3">
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="*"/>
                                                                            </Grid.RowDefinitions>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="50*"/>
                                                                                <ColumnDefinition Width="50*"/>
                                                                            </Grid.ColumnDefinitions>

                                                                            <RadioButton x:Name="OcoTypeLimitRadioButton" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="OcoType" Content="指値" Margin="0" IsChecked="{Binding OCO_OneType, ConverterParameter={x:Static vms:IfdocoTypes.limit}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                            <RadioButton x:Name="OcoTypeMarketRadioButton" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="OcoType" Content="成行" Margin="0" IsChecked="{Binding OCO_OneType, ConverterParameter={x:Static vms:IfdocoTypes.market}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                        </Grid>

                                                                        <StackPanel Orientation="Horizontal" Margin="0 6 0 3" VerticalAlignment="Bottom">
                                                                            <Label Content="数量：" Margin="0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBox x:Name="OcoAmountTextbox" Width="80" Text="{Binding OCO_OneAmount}" GotFocus="Textbox_GotFocus" VerticalAlignment="Bottom" Style="{DynamicResource DefaultTextBoxStyle}"/>
                                                                            <Label Content="{Binding CurrentCoinString, Mode=OneWay}" Margin="3 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                        </StackPanel>

                                                                        <StackPanel Orientation="Horizontal" Margin="0 3 0 3" VerticalAlignment="Bottom">
                                                                            <Label Content="価格：" Margin="0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBox x:Name="OcoPriceTextbox" Width="80" VerticalAlignment="Bottom" IsEnabled="{Binding IsChecked, ElementName=OcoTypeLimitRadioButton}" Text="{Binding OCO_OnePrice,UpdateSourceTrigger=PropertyChanged}" GotFocus="Textbox_GotFocus" Style="{DynamicResource DefaultTextBoxStyle}"/>
                                                                            <Label Content="{Binding CurrentPairUnitString,Mode=OneWay}" Margin="3 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>

                                                                            <Label Content="予想金額：" Margin="12 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBlock Text="{Binding OCO_OneEstimatePrice, StringFormat={}{0:N0},Mode=OneWay}" Style="{DynamicResource DefaultTextBlockStyle}" VerticalAlignment="Bottom"/>
                                                                            <Label Content="{Binding CurrentPairUnitString,Mode=OneWay}" Margin="3 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                        </StackPanel>

                                                                        <StackPanel Orientation="Horizontal" Margin="0 3 0 3" VerticalAlignment="Bottom">
                                                                            <Label Content="トリガー：" Margin="0" Padding="0" VerticalAlignment="Center" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBox Width="80" Text="{Binding OCO_OneTriggerPrice}" GotFocus="Textbox_GotFocus" VerticalAlignment="Center" Style="{DynamicResource DefaultTextBoxStyle}"/>

                                                                            <Label Content="{Binding CurrentPairUnitString,Mode=OneWay}" Margin="3 0 0 0" Padding="0" VerticalAlignment="Center" Style="{DynamicResource DefaultLabelStyle}"/>

                                                                            <ComboBox SelectedIndex="{Binding OCO_OneTriggerUpDown}" VerticalAlignment="Center" Margin="0 0 0 0" Padding="0 0 0 0" Background="Transparent" Style="{DynamicResource ComboBoxFlatStyle}">
                                                                                <ComboBoxItem Content="以上" Foreground="White"></ComboBoxItem>
                                                                                <ComboBoxItem Content="以下" Foreground="White"></ComboBoxItem>
                                                                            </ComboBox>

                                                                        </StackPanel>

                                                                    </StackPanel>
                                                                </Border>
                                                                <!-- [the Other 注文] -->
                                                                <Border Width="320" Height="176" Margin="3 0 0 0">
                                                                    <StackPanel Margin="0 6 0 0">

                                                                        <Label Content="[the Other 注文]" VerticalAlignment="Bottom" BorderBrush="Gainsboro" BorderThickness="0 0 0 0.5" Padding="0" Margin="3 0 0 3" Style="{DynamicResource LightLabelStyle}"/>

                                                                        <Grid Margin="3">
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="*"/>
                                                                            </Grid.RowDefinitions>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="50*"/>
                                                                                <ColumnDefinition Width="50*"/>
                                                                            </Grid.ColumnDefinitions>

                                                                            <RadioButton x:Name="OcoDoneSideBuyRadioButton" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="OcoDoneSide" Content="買い" Margin="0" IsChecked="{Binding OCO_OtherSide, ConverterParameter={x:Static vms:IfdocoSide.buy}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                            <RadioButton x:Name="OcoDoneSideSellRadioButton" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="OcoDoneSide" Content="売り" Margin="0" IsChecked="{Binding OCO_OtherSide, ConverterParameter={x:Static vms:IfdocoSide.sell}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                        </Grid>

                                                                        <Grid Margin="3">
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="*"/>
                                                                            </Grid.RowDefinitions>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="50*"/>
                                                                                <ColumnDefinition Width="50*"/>
                                                                            </Grid.ColumnDefinitions>

                                                                            <RadioButton x:Name="OcoDoneTypeLimitRadioButton" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="OcoDoneType" Content="指値" Margin="0" IsChecked="{Binding OCO_OtherType, ConverterParameter={x:Static vms:IfdocoTypes.limit}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                            <RadioButton x:Name="OcoDoneTypeMarketRadioButton" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="OcoDoneType" Content="成行" Margin="0" IsChecked="{Binding OCO_OtherType, ConverterParameter={x:Static vms:IfdocoTypes.market}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                        </Grid>

                                                                        <StackPanel Orientation="Horizontal" Margin="0 6 0 3" VerticalAlignment="Bottom">
                                                                            <Label Content="数量：" Margin="0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBox x:Name="OcoDoneAmountTextbox" Width="80" Text="{Binding OCO_OtherAmount}" GotFocus="Textbox_GotFocus" VerticalAlignment="Bottom" Style="{DynamicResource DefaultTextBoxStyle}"/>
                                                                            <Label Content="{Binding CurrentCoinString, Mode=OneWay}" Margin="3 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                        </StackPanel>

                                                                        <StackPanel Orientation="Horizontal" Margin="0 3 0 3" VerticalAlignment="Bottom">
                                                                            <Label Content="価格：" Margin="0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBox x:Name="OcoDonePriceTextbox" Width="80" VerticalAlignment="Bottom" IsEnabled="{Binding IsChecked, ElementName=OcoDoneTypeLimitRadioButton}" Text="{Binding OCO_OtherPrice,UpdateSourceTrigger=PropertyChanged}" GotFocus="Textbox_GotFocus" Style="{DynamicResource DefaultTextBoxStyle}"/>
                                                                            <Label Content="{Binding CurrentPairUnitString,Mode=OneWay}" Margin="3 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>

                                                                            <Label Content="予想金額：" Margin="12 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBlock Text="{Binding OCO_OtherEstimatePrice, StringFormat={}{0:N0},Mode=OneWay}" Style="{DynamicResource DefaultTextBlockStyle}" VerticalAlignment="Bottom"/>
                                                                            <Label Content="{Binding CurrentPairUnitString,Mode=OneWay}" Margin="0 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                        </StackPanel>

                                                                        <StackPanel Orientation="Horizontal" Margin="0 3 0 3" VerticalAlignment="Bottom">
                                                                            <Label Content="トリガー：" Margin="0" Padding="0" VerticalAlignment="Center" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBox Width="80" Text="{Binding OCO_OtherTriggerPrice}" GotFocus="Textbox_GotFocus" VerticalAlignment="Center" Style="{DynamicResource DefaultTextBoxStyle}"/>

                                                                            <Label Content="{Binding CurrentPairUnitString,Mode=OneWay}" Margin="0 0 0 0" Padding="0" VerticalAlignment="Center" Style="{DynamicResource DefaultLabelStyle}"/>

                                                                            <ComboBox SelectedIndex="{Binding OCO_OtherTriggerUpDown}" VerticalAlignment="Center" Margin="0 0 0 0" Padding="0 0 0 0" Background="Transparent" Style="{DynamicResource ComboBoxFlatStyle}">
                                                                                <ComboBoxItem Content="以上" Foreground="White"></ComboBoxItem>
                                                                                <ComboBoxItem Content="以下" Foreground="White"></ComboBoxItem>
                                                                            </ComboBox>

                                                                        </StackPanel>

                                                                    </StackPanel>
                                                                </Border>
                                                                <!-- 発注 -->
                                                                <Border Width="142" Height="176" Margin="3 0 0 0" VerticalAlignment="Top">
                                                                    <StackPanel Margin="0 6 0 0">

                                                                        <Label Content="発注" VerticalAlignment="Bottom" BorderBrush="Gainsboro" BorderThickness="0 0 0 0.5" Padding="0" Margin="3 0 0 3" Style="{DynamicResource LightLabelStyle}"/>

                                                                        <StackPanel Orientation="Horizontal" Margin="6 6 6 3" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                                                                            <Button Command="{Binding OcoOrderCommand}" Content="OCO 発注" FontWeight="Bold" Margin="0 0 0 0" Padding="3 0 3 0"/>
                                                                        </StackPanel>

                                                                        <StackPanel  Orientation="Horizontal" Margin="6 0 0 3" VerticalAlignment="Top">
                                                                            <TextBlock Text="{Binding OcoOrderCommandResult, NotifyOnTargetUpdated=True}" Style="{StaticResource BlinkStyle2}" TextWrapping="Wrap"/>
                                                                        </StackPanel>

                                                                        <StackPanel Orientation="Horizontal" Margin="6 0 0 0" VerticalAlignment="Top">
                                                                            <TextBlock Text="{Binding OcoOrderCommandErrorString}" Style="{StaticResource ErrorInfoTextBlockStyle}" TextWrapping="Wrap"/>
                                                                        </StackPanel>

                                                                    </StackPanel>
                                                                </Border>
                                                            </WrapPanel>
                                                        </ScrollViewer>
                                                    </TabItem>
                                                    <!-- IFDOCO -->
                                                    <TabItem Header="IFDOCO注文" FontWeight="Normal" Style="{StaticResource NoChromeTabHeader}" Background="Transparent" BorderThickness="0" Width="100" Padding="4">
                                                        <ScrollViewer MaxHeight="400" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Style="{StaticResource CustomScrollViewerStyle}">
                                                            <WrapPanel>
                                                                <!-- [IFDone 注文] -->
                                                                <Border Width="230" Height="176" Margin="3 0 0 0">
                                                                    <StackPanel Margin="0 6 0 0">

                                                                        <Label Content="[IFDone 注文]" VerticalAlignment="Bottom" BorderBrush="Gainsboro" BorderThickness="0 0 0 0.5" Padding="0" Margin="3 0 0 3" Style="{DynamicResource LightLabelStyle}"/>

                                                                        <Grid Margin="3">
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="*"/>
                                                                            </Grid.RowDefinitions>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="50*"/>
                                                                                <ColumnDefinition Width="50*"/>
                                                                            </Grid.ColumnDefinitions>

                                                                            <RadioButton x:Name="IFDOCOSideBuyRadioButton" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="IFDOCOSide" Content="買い" Margin="0" IsChecked="{Binding IFDOCO_IfdSide, ConverterParameter={x:Static vms:IfdocoSide.buy}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                            <RadioButton x:Name="IFDOCOSideSellRadioButton" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="IFDOCOSide" Content="売り" Margin="0" IsChecked="{Binding IFDOCO_IfdSide, ConverterParameter={x:Static vms:IfdocoSide.sell}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                        </Grid>

                                                                        <Grid Margin="3">
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="*"/>
                                                                            </Grid.RowDefinitions>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="50*"/>
                                                                                <ColumnDefinition Width="50*"/>
                                                                            </Grid.ColumnDefinitions>

                                                                            <RadioButton x:Name="IFDOCOTypeLimitRadioButton" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="IFDOCOType" Content="指値" Margin="0" IsChecked="{Binding IFDOCO_IfdType, ConverterParameter={x:Static vms:IfdocoTypes.limit}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                            <RadioButton x:Name="IFDOCOTypeMarketRadioButton" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="IFDOCOType" Content="成行" Margin="0" IsChecked="{Binding IFDOCO_IfdType, ConverterParameter={x:Static vms:IfdocoTypes.market}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                        </Grid>

                                                                        <StackPanel Orientation="Horizontal" Margin="0 6 0 3" VerticalAlignment="Bottom">
                                                                            <Label Content="数量：" Margin="0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBox x:Name="IFDOCOAmountTextbox" Width="80" Text="{Binding IFDOCO_IfdAmount}" GotFocus="Textbox_GotFocus" VerticalAlignment="Bottom" Style="{DynamicResource DefaultTextBoxStyle}"/>
                                                                            <Label Content="{Binding CurrentCoinString, Mode=OneWay}" Margin="3 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                        </StackPanel>

                                                                        <StackPanel Orientation="Horizontal" Margin="0 3 0 3" VerticalAlignment="Bottom">
                                                                            <Label Content="価格：" Margin="0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBox x:Name="IFDOCOPriceTextbox" Width="80" VerticalAlignment="Bottom" IsEnabled="{Binding IsChecked, ElementName=IFDOCOTypeLimitRadioButton}" Text="{Binding IFDOCO_IfdPrice,UpdateSourceTrigger=PropertyChanged}" GotFocus="Textbox_GotFocus" Style="{DynamicResource DefaultTextBoxStyle}"/>
                                                                            <Label Content="{Binding CurrentPairUnitString,Mode=OneWay}" Margin="3 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>

                                                                            <Label Content="(" Margin="6 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBlock Text="{Binding IFDOCO_IfdEstimatePrice, StringFormat={}{0:N0},Mode=OneWay}" Style="{DynamicResource DefaultTextBlockStyle}" VerticalAlignment="Bottom"/>
                                                                            <Label Content="{Binding CurrentPairUnitString,Mode=OneWay}" Margin="3 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <Label Content=")" Margin="0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                        </StackPanel>
                                                                    </StackPanel>
                                                                </Border>
                                                                <!-- [One side 注文] -->
                                                                <Border Width="230" Height="176" Margin="3 0 0 0">
                                                                    <StackPanel Margin="0 6 0 0">

                                                                        <Label Content="[One side 注文]" VerticalAlignment="Bottom" BorderBrush="Gainsboro" BorderThickness="0 0 0 0.5" Padding="0" Margin="3 0 0 3" Style="{DynamicResource LightLabelStyle}"/>

                                                                        <Grid Margin="3">
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="*"/>
                                                                            </Grid.RowDefinitions>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="50*"/>
                                                                                <ColumnDefinition Width="50*"/>
                                                                            </Grid.ColumnDefinitions>

                                                                            <RadioButton x:Name="IFDOCOOcoSideBuyRadioButton" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="IFDOCOOcoSide" Content="買い" Margin="0" IsChecked="{Binding IFDOCO_OneSide, ConverterParameter={x:Static vms:IfdocoSide.buy}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                            <RadioButton x:Name="IFDOCOOcoSideSellRadioButton" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="IFDOCOOcoSide" Content="売り" Margin="0" IsChecked="{Binding IFDOCO_OneSide, ConverterParameter={x:Static vms:IfdocoSide.sell}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                        </Grid>

                                                                        <Grid Margin="3">
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="*"/>
                                                                            </Grid.RowDefinitions>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="50*"/>
                                                                                <ColumnDefinition Width="50*"/>
                                                                            </Grid.ColumnDefinitions>

                                                                            <RadioButton x:Name="IFDOCOOcoTypeLimitRadioButton" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="IFDOCOOcoType" Content="指値" Margin="0" IsChecked="{Binding IFDOCO_OneType, ConverterParameter={x:Static vms:IfdocoTypes.limit}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                            <RadioButton x:Name="IFDOCOOcoTypeMarketRadioButton" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="IFDOCOOcoType" Content="成行" Margin="0" IsChecked="{Binding IFDOCO_OneType, ConverterParameter={x:Static vms:IfdocoTypes.market}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                        </Grid>

                                                                        <StackPanel Orientation="Horizontal" Margin="0 6 0 3" VerticalAlignment="Bottom">
                                                                            <Label Content="数量：" Margin="0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBox x:Name="IFDOCOOcoAmountTextbox" Width="80" Text="{Binding IFDOCO_OneAmount}" GotFocus="Textbox_GotFocus" VerticalAlignment="Bottom" Style="{DynamicResource DefaultTextBoxStyle}"/>
                                                                            <Label Content="{Binding CurrentCoinString, Mode=OneWay}" Margin="3 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                        </StackPanel>

                                                                        <StackPanel Orientation="Horizontal" Margin="0 3 0 3" VerticalAlignment="Bottom">
                                                                            <Label Content="価格：" Margin="0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBox x:Name="IFDOCOOcoPriceTextbox" Width="80" VerticalAlignment="Bottom" IsEnabled="{Binding IsChecked, ElementName=IFDOCOOcoTypeLimitRadioButton}" Text="{Binding IFDOCO_OnePrice,UpdateSourceTrigger=PropertyChanged}" GotFocus="Textbox_GotFocus" Style="{DynamicResource DefaultTextBoxStyle}"/>
                                                                            <Label Content="{Binding CurrentPairUnitString,Mode=OneWay}" Margin="3 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>

                                                                            <Label Content="(" Margin="6 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBlock Text="{Binding IFDOCO_OneEstimatePrice, StringFormat={}{0:N0},Mode=OneWay}" Style="{DynamicResource DefaultTextBlockStyle}" VerticalAlignment="Bottom"/>
                                                                            <Label Content="{Binding CurrentPairUnitString,Mode=OneWay}" Margin="3 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <Label Content=")" Margin="0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                        </StackPanel>

                                                                        <StackPanel Orientation="Horizontal" Margin="0 3 0 3" VerticalAlignment="Bottom">
                                                                            <Label Content="トリガー：" Margin="0" Padding="0" VerticalAlignment="Center" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBox Width="80" Text="{Binding IFDOCO_OneTriggerPrice}" GotFocus="Textbox_GotFocus" VerticalAlignment="Center" Style="{DynamicResource DefaultTextBoxStyle}"/>
                                                                            <Label Content="{Binding CurrentPairUnitString,Mode=OneWay}" Margin="3 0 0 0" Padding="0" VerticalAlignment="Center" Style="{DynamicResource DefaultLabelStyle}"/>

                                                                            <ComboBox SelectedIndex="{Binding IFDOCO_OneTriggerUpDown}" VerticalAlignment="Center" Margin="0 0 0 0" Padding="0 0 0 0" Background="Transparent" Style="{DynamicResource ComboBoxFlatStyle}">
                                                                                <ComboBoxItem Content="以上" Foreground="White"></ComboBoxItem>
                                                                                <ComboBoxItem Content="以下" Foreground="White"></ComboBoxItem>
                                                                            </ComboBox>
                                                                        </StackPanel>

                                                                    </StackPanel>
                                                                </Border>
                                                                <!-- [the Other 注文] -->
                                                                <Border Width="230" Height="176" Margin="3 0 0 0">
                                                                    <StackPanel Margin="0 6 0 0">

                                                                        <Label Content="[the Other 注文]" VerticalAlignment="Bottom" BorderBrush="Gainsboro" BorderThickness="0 0 0 0.5" Padding="0" Margin="3 0 0 3" Style="{DynamicResource LightLabelStyle}"/>

                                                                        <Grid Margin="3">
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="*"/>
                                                                            </Grid.RowDefinitions>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="50*"/>
                                                                                <ColumnDefinition Width="50*"/>
                                                                            </Grid.ColumnDefinitions>

                                                                            <RadioButton x:Name="IFDOCOOcoDoneSideBuyRadioButton" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="IFDOCOOcoDoneSide" Content="買い" Margin="0" IsChecked="{Binding IFDOCO_OtherSide, ConverterParameter={x:Static vms:IfdocoSide.buy}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                            <RadioButton x:Name="IFDOCOOcoDoneSideSellRadioButton" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="IFDOCOOcoDoneSide" Content="売り" Margin="0" IsChecked="{Binding IFDOCO_OtherSide, ConverterParameter={x:Static vms:IfdocoSide.sell}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                        </Grid>

                                                                        <Grid Margin="3">
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="*"/>
                                                                            </Grid.RowDefinitions>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="50*"/>
                                                                                <ColumnDefinition Width="50*"/>
                                                                            </Grid.ColumnDefinitions>

                                                                            <RadioButton x:Name="IFDOCOOcoDoneTypeLimitRadioButton" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="IFDOCOOcoDoneType" Content="指値" Margin="0" IsChecked="{Binding IFDOCO_OtherType, ConverterParameter={x:Static vms:IfdocoTypes.limit}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                            <RadioButton x:Name="IFDOCOOcoDoneTypeMarketRadioButton" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="IFDOCOOcoDoneType" Content="成行" Margin="0" IsChecked="{Binding IFDOCO_OtherType, ConverterParameter={x:Static vms:IfdocoTypes.market}, Converter={StaticResource EnumBooleanConverter}}" Style="{DynamicResource SelectionRadioButtonStyle}"/>
                                                                        </Grid>

                                                                        <StackPanel Orientation="Horizontal" Margin="0 6 0 3" VerticalAlignment="Bottom">
                                                                            <Label Content="数量：" Margin="0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBox x:Name="IFDOCOOcoDoneAmountTextbox" Width="80" Text="{Binding IFDOCO_OtherAmount}" GotFocus="Textbox_GotFocus" VerticalAlignment="Bottom" Style="{DynamicResource DefaultTextBoxStyle}"/>
                                                                            <Label Content="{Binding CurrentCoinString, Mode=OneWay}" Margin="3 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                        </StackPanel>

                                                                        <StackPanel Orientation="Horizontal" Margin="0 3 0 3" VerticalAlignment="Bottom">
                                                                            <Label Content="価格：" Margin="0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBox x:Name="IFDOCOOcoDonePriceTextbox" Width="80" VerticalAlignment="Bottom" IsEnabled="{Binding IsChecked, ElementName=IFDOCOOcoDoneTypeLimitRadioButton}" Text="{Binding IFDOCO_OtherPrice,UpdateSourceTrigger=PropertyChanged}" GotFocus="Textbox_GotFocus" Style="{DynamicResource DefaultTextBoxStyle}"/>
                                                                            <Label Content="{Binding CurrentPairUnitString,Mode=OneWay}" Margin="0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>

                                                                            <Label Content="(" Margin="6 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBlock Text="{Binding IFDOCO_OtherEstimatePrice, StringFormat={}{0:N0},Mode=OneWay}" Style="{DynamicResource DefaultTextBlockStyle}" VerticalAlignment="Bottom"/>
                                                                            <Label Content="{Binding CurrentPairUnitString,Mode=OneWay}" Margin="3 0 0 0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <Label Content=")" Margin="0" Padding="0" VerticalAlignment="Bottom" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                        </StackPanel>

                                                                        <StackPanel Orientation="Horizontal" Margin="0 3 0 3" VerticalAlignment="Bottom">
                                                                            <Label Content="トリガー：" Margin="0" Padding="0" VerticalAlignment="Center" Style="{DynamicResource DefaultLabelStyle}"/>
                                                                            <TextBox Width="80" Text="{Binding IFDOCO_OtherTriggerPrice}" GotFocus="Textbox_GotFocus" VerticalAlignment="Center" Style="{DynamicResource DefaultTextBoxStyle}"/>
                                                                            <Label Content="{Binding CurrentPairUnitString,Mode=OneWay}" Margin="3 0 0 0" Padding="0" VerticalAlignment="Center" Style="{DynamicResource DefaultLabelStyle}"/>

                                                                            <ComboBox SelectedIndex="{Binding IFDOCO_OtherTriggerUpDown}" VerticalAlignment="Center" Margin="0 0 0 0" Padding="0 0 0 0" Background="Transparent" Style="{DynamicResource ComboBoxFlatStyle}">
                                                                                <ComboBoxItem Content="以上" Foreground="White"></ComboBoxItem>
                                                                                <ComboBoxItem Content="以下" Foreground="White"></ComboBoxItem>
                                                                            </ComboBox>
                                                                        </StackPanel>

                                                                    </StackPanel>
                                                                </Border>
                                                                <!-- 発注 -->
                                                                <Border Width="230" Height="176" Margin="3 0 0 0" VerticalAlignment="Top">
                                                                    <StackPanel Margin="0 6 0 0">

                                                                        <Label Content="発注" VerticalAlignment="Bottom" BorderBrush="Gainsboro" BorderThickness="0 0 0 0.5" Padding="0" Margin="3 0 0 3" Style="{DynamicResource LightLabelStyle}"/>

                                                                        <StackPanel Orientation="Horizontal" Margin="6 6 6 3" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                                                                            <Button Command="{Binding IfdocoOrderCommand}" Content="IFDOCO 発注" FontWeight="Bold" Margin="0 0 0 0" Padding="3 0 3 0"/>
                                                                        </StackPanel>

                                                                        <StackPanel  Orientation="Horizontal" Margin="6 0 0 3" VerticalAlignment="Top">
                                                                            <TextBlock Text="{Binding IfdocoOrderCommandResult, NotifyOnTargetUpdated=True}" Style="{StaticResource BlinkStyle2}" TextWrapping="Wrap"/>
                                                                        </StackPanel>

                                                                        <StackPanel Orientation="Horizontal" Margin="6 0 0 0" VerticalAlignment="Top">
                                                                            <TextBlock Text="{Binding IfdocoOrderCommandErrorString}" Style="{StaticResource ErrorInfoTextBlockStyle}" TextWrapping="Wrap"/>
                                                                        </StackPanel>

                                                                    </StackPanel>
                                                                </Border>
                                                            </WrapPanel>
                                                        </ScrollViewer>
                                                    </TabItem>

                                                </TabControl>

                                            </Grid>
                                        </TabItem>

                                    </TabControl>

                                </Border>
                                
                            </Grid>
                        </Grid>

                    </Grid>

                    <!-- 板情報 | 歩み値 -->
                    <Border x:Name="Transaction" Grid.Row="1" Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="1" Style="{DynamicResource BoardStyle}" Visibility="Collapsed" HorizontalAlignment="Left">

                        <TabControl x:Name="DepthAyumiTab" Style="{StaticResource NoChromeTabControl}" Margin="0" BorderThickness="0" Background="Transparent" MaxHeight="414" VerticalAlignment="Top" SelectionChanged="DepthAyumiTab_SelectionChanged">

                            <TabItem Header="板情報(_D)" FontWeight="Normal" Style="{StaticResource NoChromeTabHeader}" Background="Transparent" BorderThickness="0" Width="100" Padding="4">

                                <ListBox x:Name="DepthListBox" Margin="6 6 0 6" Padding="0 0 0 0" ItemsSource="{Binding Depths}" Style="{StaticResource DepthListBoxStyle}" AlternationCount="2" Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Visible" SizeChanged="DepthListBox_SizeChanged" MouseDoubleClick="DepthListBox_MouseDoubleClick">
                                    <ListBox.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="グルーピング表示">
                                                <MenuItem Header="OFF" Command="{Binding DepthGroupingCommand}" CommandParameter="0" IsChecked="{Binding ActivePair.IsDepthGroupingOff, Mode=OneWay}"/>
                                                <MenuItem Header="{Binding ActivePair.DepthGrouping100, Mode=OneWay}" Command="{Binding DepthGroupingCommand}" CommandParameter="{Binding ActivePair.DepthGrouping100, Mode=OneWay}" IsChecked="{Binding ActivePair.IsDepthGrouping100, Mode=OneWay}"/>
                                                <MenuItem Header="{Binding ActivePair.DepthGrouping1000, Mode=OneWay}" Command="{Binding DepthGroupingCommand}" CommandParameter="{Binding ActivePair.DepthGrouping1000, Mode=OneWay}" IsChecked="{Binding ActivePair.IsDepthGrouping1000, Mode=OneWay}"/>
                                            </MenuItem>
                                            <MenuItem Header="中央に戻る" x:Name="DepthListBoxCenter" Click="DepthListBoxCenter_Click"></MenuItem>
                                        </ContextMenu>
                                    </ListBox.ContextMenu>
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Setter Property="Focusable" Value="true"/>
                                            <Setter Property="IsEnabled" Value="False"/>

                                            <Style.Triggers>
                                                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                                    <Setter Property="Background" Value="{DynamicResource ListviewAlt0ColorBrush}" />
                                                </Trigger>
                                                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                                    <Setter Property="Background" Value="{DynamicResource ListviewAlt1ColorBrush}" />
                                                </Trigger>
                                            </Style.Triggers>

                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0" HorizontalAlignment="Center">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="62" />
                                                    <ColumnDefinition Width="66" />
                                                    <ColumnDefinition Width="62" />
                                                </Grid.ColumnDefinitions>
                                                <!-- 値は左寄せ。小数点以下がはみ出しても問題ないが、逆はまずい -->
                                                <TextBlock Grid.Column="0" x:Name="DepthAskBest" Text="{Binding Path=DepthAsk, Mode=OneWay}" Margin="0" Padding="0 0 0 0" Foreground="{DynamicResource PriceUpColorBrush}" HorizontalAlignment="Left"/>
                                                <TextBlock Grid.Column="1" x:Name="DepthPrice" Text="{Binding Path=DepthPrice, Mode=OneWay}" Margin="0" Padding="0 0 0 0" Foreground="{DynamicResource ControlMediumColorBrush}" HorizontalAlignment="Left"/>
                                                <TextBlock Grid.Column="2" x:Name="DepthBidBest" Text="{Binding Path=DepthBid, Mode=OneWay}" Margin="0" Padding="0 0 0 0" Foreground="{DynamicResource PriceDownColorBrush}"  HorizontalAlignment="Left"/>
                                            </Grid>
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding IsLTP}" Value="true">
                                                    <Setter Property="TextBlock.FontWeight" TargetName="DepthPrice" Value="Bold"/>
                                                    <Setter Property="TextBlock.FontSize" TargetName="DepthPrice" Value="13"/>
                                                    <Setter Property="TextBlock.Foreground" TargetName="DepthPrice" Value="{DynamicResource ControlLightColorBrush}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsAskBest}" Value="true">
                                                    <Setter Property="TextBlock.FontWeight" TargetName="DepthAskBest" Value="Bold"/>
                                                    <Setter Property="TextBlock.Foreground" TargetName="DepthAskBest" Value="{DynamicResource PriceUpColorBrush}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsBidBest}" Value="true">
                                                    <Setter Property="TextBlock.FontWeight" TargetName="DepthBidBest" Value="Bold"/>
                                                    <Setter Property="TextBlock.Foreground" TargetName="DepthBidBest" Value="{DynamicResource PriceDownColorBrush}"/>
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding DepthBid}" Value="0">
                                                    <Setter Property="TextBlock.Text" TargetName="DepthBidBest" Value=""/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding DepthPrice}" Value="0">
                                                    <Setter Property="TextBlock.Text" TargetName="DepthPrice" Value=""/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding DepthAsk}" Value="0">
                                                    <Setter Property="TextBlock.Text" TargetName="DepthAskBest" Value=""/>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>

                            </TabItem>

                            <TabItem Header="歩み値(_T)" FontWeight="Normal" Style="{StaticResource NoChromeTabHeader}" Background="Transparent" BorderThickness="0" Width="100" Padding="4">

                                <ListBox Margin="3 6 3 0" Padding="0 0 0 0" ItemsSource="{Binding Transactions}" Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden" AlternationCount="2" BorderBrush="Gray" BorderThickness="0 0 0 0">
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Setter Property="Focusable" Value="False"/>
                                            <Setter Property="IsEnabled" Value="False" />
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="66" />
                                                    <ColumnDefinition Width="66" />
                                                    <ColumnDefinition Width="66" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" x:Name="TransExecutedAt" Text="{Binding Path=ExecutedAt, Mode=OneWay, StringFormat=HH:mm:ss}" Margin="0" Padding="3 0 3 0" Foreground="{DynamicResource ControlMediumColorBrush}" HorizontalAlignment="Center"/>
                                                <TextBlock Grid.Column="1" x:Name="TransPrice" Text="{Binding Path=Price, Mode=OneWay}" Margin="0" Padding="3 0 3 0" Foreground="{DynamicResource ControlMediumColorBrush}"  HorizontalAlignment="Center"/>
                                                <TextBlock Grid.Column="2" x:Name="TransAmount" Text="{Binding Path=Amount, Mode=OneWay}" Margin="0" Padding="3 0 3 0" Foreground="{DynamicResource ControlMediumColorBrush}"  HorizontalAlignment="Left"/>

                                            </Grid>
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding Side}" Value="buy">
                                                    <Setter Property="TextBlock.Foreground" TargetName="TransPrice" Value="{DynamicResource PriceUpColorBrush}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Side}" Value="sell">
                                                    <Setter Property="TextBlock.Foreground" TargetName="TransPrice" Value="{DynamicResource PriceDownColorBrush}"/>
                                                </DataTrigger>

                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>

                            </TabItem>

                        </TabControl>

                    </Border>

                </Grid>

            </ScrollViewer>

            <!-- 最右コラム 板情報 | 歩み値 | 日本語ニュース | 英語ニュース -->
            <Border x:Name="Depth" Grid.Row="1" Grid.Column="6" Grid.RowSpan="3" Grid.ColumnSpan="1" Style="{DynamicResource BoardStyle}" Visibility="Collapsed" Margin="16 0 0 0">
                <TabControl x:Name="Depth2AyumiTab" Style="{StaticResource NoChromeTabControl}" Margin="0" BorderThickness="0" Background="Transparent" VerticalAlignment="Top" SelectionChanged="Depth2AyumiTab_SelectionChanged">

                    <TabItem Header="板情報" FontWeight="Normal" Style="{StaticResource NoChromeTabHeader}" Background="Transparent" BorderThickness="0" Width="100" Padding="4">

                        <ListBox x:Name="Depth2ListBox" Margin="6 6 0 6" Padding="0 0 0 0" ItemsSource="{Binding Depths}" Style="{StaticResource DepthListBoxStyle}" AlternationCount="2" Background="Transparent" BorderBrush="Gray" BorderThickness="0 0 0 0" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Visible" SizeChanged="Depth2ListBox_SizeChanged" MouseDoubleClick="Depth2ListBox_MouseDoubleClick">
                            <ListBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="グルーピング表示">
                                        <MenuItem Header="OFF" Command="{Binding DepthGroupingCommand}" CommandParameter="0" IsChecked="{Binding ActivePair.IsDepthGroupingOff, Mode=OneWay}"/>
                                        <MenuItem Header="{Binding ActivePair.DepthGrouping100, Mode=OneWay}" Command="{Binding DepthGroupingCommand}" CommandParameter="{Binding ActivePair.DepthGrouping100, Mode=OneWay}" IsChecked="{Binding ActivePair.IsDepthGrouping100, Mode=OneWay}"/>
                                        <MenuItem Header="{Binding ActivePair.DepthGrouping1000, Mode=OneWay}" Command="{Binding DepthGroupingCommand}" CommandParameter="{Binding ActivePair.DepthGrouping1000, Mode=OneWay}" IsChecked="{Binding ActivePair.IsDepthGrouping1000, Mode=OneWay}"/>
                                    </MenuItem>
                                    <MenuItem Header="中央に戻る" x:Name="Depth2ListBoxCenter" Click="Depth2ListBoxCenter_Click"></MenuItem>
                                </ContextMenu>
                            </ListBox.ContextMenu>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="Focusable" Value="true"/>
                                    <Setter Property="IsEnabled" Value="False"/>

                                    <Style.Triggers>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                            <Setter Property="Background" Value="{DynamicResource ListviewAlt0ColorBrush}" />
                                        </Trigger>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                            <Setter Property="Background" Value="{DynamicResource ListviewAlt1ColorBrush}" />
                                        </Trigger>
                                    </Style.Triggers>

                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="0" HorizontalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="62" />
                                            <ColumnDefinition Width="66" />
                                            <ColumnDefinition Width="62" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" x:Name="DepthAskBest" Text="{Binding Path=DepthAsk, Mode=OneWay}" Margin="0" Padding="0" Foreground="{DynamicResource PriceUpColorBrush}" HorizontalAlignment="Left"/>
                                        <TextBlock Grid.Column="1" x:Name="DepthPrice" Text="{Binding Path=DepthPrice, Mode=OneWay}" Margin="0" Padding="0" Foreground="DarkGray" HorizontalAlignment="Left"/>
                                        <TextBlock Grid.Column="2" x:Name="DepthBidBest" Text="{Binding Path=DepthBid, Mode=OneWay}" Margin="0" Padding="0" Foreground="{DynamicResource PriceDownColorBrush}"  HorizontalAlignment="Left"/>
                                    </Grid>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsLTP}" Value="true">
                                            <Setter Property="TextBlock.FontWeight" TargetName="DepthPrice" Value="Bold"/>
                                            <Setter Property="TextBlock.FontSize" TargetName="DepthPrice" Value="13"/>
                                            <Setter Property="TextBlock.Foreground" TargetName="DepthPrice" Value="{DynamicResource ControlLightColorBrush}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsAskBest}" Value="true">
                                            <Setter Property="TextBlock.FontWeight" TargetName="DepthAskBest" Value="Bold"/>
                                            <Setter Property="TextBlock.Foreground" TargetName="DepthAskBest" Value="{DynamicResource PriceUpColorBrush}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsBidBest}" Value="true">
                                            <Setter Property="TextBlock.FontWeight" TargetName="DepthBidBest" Value="Bold"/>
                                            <Setter Property="TextBlock.Foreground" TargetName="DepthBidBest" Value="{DynamicResource PriceDownColorBrush}"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding DepthBid}" Value="0">
                                            <Setter Property="TextBlock.Text" TargetName="DepthBidBest" Value=""/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding DepthPrice}" Value="0">
                                            <Setter Property="TextBlock.Text" TargetName="DepthPrice" Value=""/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding DepthAsk}" Value="0">
                                            <Setter Property="TextBlock.Text" TargetName="DepthAskBest" Value=""/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>

                    </TabItem>

                    <TabItem Header="歩み値" FontWeight="Normal" Style="{StaticResource NoChromeTabHeader}" Background="Transparent" BorderThickness="0" Width="100" Padding="4">

                        <ListBox Margin="3 6 3 0" Padding="0 0 0 0" ItemsSource="{Binding Transactions}" Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden" AlternationCount="2" BorderBrush="Gray" BorderThickness="0 0 0 0">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="IsEnabled" Value="False" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="0" HorizontalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="66" />
                                            <ColumnDefinition Width="66" />
                                            <ColumnDefinition Width="66" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" x:Name="TransExecutedAt" Text="{Binding Path=ExecutedAt, Mode=OneWay, StringFormat=HH:mm:ss}" Margin="0" Padding="3 0 3 0" Foreground="DarkGray"  HorizontalAlignment="Center"/>
                                        <TextBlock Grid.Column="1" x:Name="TransPrice" Text="{Binding Path=Price, Mode=OneWay}" Margin="0" Padding="3 0 3 0" Foreground="DarkGray"  HorizontalAlignment="Center" />
                                        <TextBlock Grid.Column="2" x:Name="TransAmount" Text="{Binding Path=Amount, Mode=OneWay}" Margin="0" Padding="3 0 3 0" Foreground="DarkGray"  HorizontalAlignment="Left" />

                                    </Grid>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Side}" Value="buy">
                                            <Setter Property="TextBlock.Foreground" TargetName="TransPrice" Value="{DynamicResource PriceUpColorBrush}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Side}" Value="sell">
                                            <Setter Property="TextBlock.Foreground" TargetName="TransPrice" Value="{DynamicResource PriceDownColorBrush}"/>
                                        </DataTrigger>


                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>

                    </TabItem>

                    <TabItem Header="日本語ニュース(_N)" FontWeight="Normal" Style="{StaticResource NoChromeTabHeader}" Background="Transparent" BorderThickness="0" Width="100" Padding="4">

                        <ListBox Margin="6 6 3 0" Padding="0 0 24 0" ItemsSource="{Binding BitcoinNewsJa}" SelectedItem="{Binding SelectedFeedItemJa}" Style="{StaticResource NewsListBoxStyle}" Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Auto" AlternationCount="2" BorderBrush="Gray" BorderThickness="0 0 0 0">

                            <ListBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="ブラウザで開く" x:Name="BitcoinNewsJaOpenInBrowser"  Command="{Binding FeedOpenJaCommand}">
                                        <MenuItem.Resources>
                                            <ControlTemplate x:Key="OpenInBrowser">
                                                <Canvas Background="Transparent" >
                                                    <Path Fill="#373737" Width="14.3775" Height="14" Canvas.Left="0.311264" Canvas.Top="0.500005" Stretch="Uniform" Data="M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z" />
                                                </Canvas>
                                            </ControlTemplate>
                                        </MenuItem.Resources>
                                        <MenuItem.Icon>
                                            <ContentControl Template="{StaticResource OpenInBrowser}" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </ListBox.ContextMenu>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="Focusable" Value="True"/>
                                    <Setter Property="IsEnabled" Value="True" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="0 0 0 6" Width="178">
                                        <Grid.InputBindings>
                                            <MouseBinding Gesture="LeftDoubleClick" Command="{Binding Path=DataContext.FeedOpenJaCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}"/>
                                        </Grid.InputBindings>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Grid.Row="0" Grid.Column="0" x:Name="NewsSubject" Text="{Binding Path=Subject, Mode=OneWay}" TextWrapping="Wrap" Margin="0" Padding="3 0 3 0" Foreground="{DynamicResource ControlLightColorBrush}" />
                                        <TextBlock Grid.Row="1" Grid.Column="0" x:Name="NewsDomain" Text="{Binding Path=Domain, Mode=OneWay}" TextWrapping="Wrap" Margin="0" Padding="3 0 3 0" Foreground="{DynamicResource ControlMediumColorBrush}"  HorizontalAlignment="Right"/>
                                        <TextBlock Grid.Row="2" Grid.Column="0" x:Name="NewsTimeStamp" Text="{Binding Path=TimeStamp, Mode=OneWay, StringFormat=dd日 HH:mm:ss}" Margin="0" Padding="3 0 3 0" Foreground="{DynamicResource ControlMediumColorBrush}" HorizontalAlignment="Right"/>
                                    </Grid>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
                                            <Setter TargetName="NewsSubject" Property="TextElement.Foreground" Value="{DynamicResource NormalTextColorBrush}"/>
                                            <Setter TargetName="NewsDomain" Property="TextElement.Foreground" Value="{DynamicResource ControlMediumColorBrush}"/>
                                            <Setter TargetName="NewsTimeStamp" Property="TextElement.Foreground" Value="{DynamicResource ControlMediumColorBrush}"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>

                    </TabItem>

                    <TabItem Header="英語ニュース" FontWeight="Normal" Style="{StaticResource NoChromeTabHeader}" Background="Transparent" BorderThickness="0" Width="100" Padding="4">

                        <ListBox Margin="6 6 3 0" Padding="0 0 0 0" ItemsSource="{Binding BitcoinNewsEn}" SelectedItem="{Binding SelectedFeedItemEn}" Style="{StaticResource NewsListBoxStyle}" Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Auto" AlternationCount="2" BorderBrush="Gray" BorderThickness="0 0 0 0">
                            <ListBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="ブラウザで開く" x:Name="BitcoinNewsEnOpenInBrowser"  Command="{Binding FeedOpenEnCommand}">
                                        <MenuItem.Resources>
                                            <ControlTemplate x:Key="OpenInBrowser">
                                                <Canvas Background="Transparent" >
                                                    <Path Fill="#373737" Width="14.3775" Height="14" Canvas.Left="0.311264" Canvas.Top="0.500005" Stretch="Uniform" Data="M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z" />
                                                </Canvas>
                                            </ControlTemplate>
                                        </MenuItem.Resources>
                                        <MenuItem.Icon>
                                            <ContentControl Template="{StaticResource OpenInBrowser}" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </ListBox.ContextMenu>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="Focusable" Value="True"/>
                                    <Setter Property="IsEnabled" Value="True" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="0 0 0 6" Width="178">
                                        <Grid.InputBindings>
                                            <MouseBinding Gesture="LeftDoubleClick" Command="{Binding Path=DataContext.FeedOpenEnCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}"/>
                                        </Grid.InputBindings>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Grid.Row="0" Grid.Column="0" x:Name="NewsSubject" Text="{Binding Path=Subject, Mode=OneWay}" TextWrapping="Wrap" Margin="0" Padding="3 0 3 0" Foreground="{DynamicResource ControlLightColorBrush}" />
                                        <TextBlock Grid.Row="1" Grid.Column="0" x:Name="NewsDomain" Text="{Binding Path=Domain, Mode=OneWay}" TextWrapping="Wrap" Margin="0" Padding="3 0 3 0" Foreground="{DynamicResource ControlMediumColorBrush}"  HorizontalAlignment="Right"/>
                                        <TextBlock Grid.Row="2" Grid.Column="0" x:Name="NewsTimeStamp" Text="{Binding Path=TimeStamp, Mode=OneWay, StringFormat=dd日 HH:mm:ss}" Margin="0" Padding="3 0 3 0" Foreground="{DynamicResource ControlMediumColorBrush}" HorizontalAlignment="Right"/>
                                    </Grid>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
                                            <Setter TargetName="NewsSubject" Property="TextElement.Foreground" Value="{DynamicResource NormalTextColorBrush}"/>
                                            <Setter TargetName="NewsDomain" Property="TextElement.Foreground" Value="{DynamicResource ControlMediumColorBrush}"/>
                                            <Setter TargetName="NewsTimeStamp" Property="TextElement.Foreground" Value="{DynamicResource ControlMediumColorBrush}"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>

                    </TabItem>

                </TabControl>

            </Border>

            <!-- Spliter -->
            <GridSplitter x:Name="Split" Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="1" ResizeDirection="Rows" Background="Red" Height="8" Style="{StaticResource GridSplitterStyle}" Visibility="Collapsed"/>

            <!-- Bottom Contents -->
            <Border x:Name="BottomContents" Grid.Row="3" Grid.Column="2" Grid.ColumnSpan="1" Style="{DynamicResource BoardStyle}" Margin="6 0 0 0" Visibility="Collapsed">

                <TabControl x:Name="ListviewTab" Style="{StaticResource NoChromeTabControl}" Margin="0 0 0 3" BorderThickness="0" Background="{DynamicResource BoardBackgroundColorBrush}">

                    <!-- 注文一覧 -->
                    <TabItem Header="{Binding ActiveOrdersCountTitle}" Focusable="True" Style="{StaticResource NoChromeTabHeader}" Background="Transparent" BorderThickness="0" Width="120" Padding="4">

                        <Grid>

                            <!-- 注文一覧APIキー設定画面 -->
                            <Border Width="360" Margin="3 0 0 6" HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="{Binding ShowOrdersApiSet, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                <StackPanel>
                                    <Border BorderBrush="DimGray" BorderThickness="0 0 0 0.5" Margin="3" Padding="3">
                                        <Label Padding="0" Content="注文一覧取得用APIキー設定" Style="{DynamicResource SectionTitle}"/>
                                    </Border>
                                    <Popup IsOpen="{Binding IsChecked, ElementName=OrdersAPIKeyInfoButton}" StaysOpen="False" PlacementTarget="{Binding ElementName=OrdersAPIKeyInfoButton}" AllowsTransparency="True" PopupAnimation="Slide">
                                        <Border Background="WhiteSmoke" CornerRadius="4" Padding="6" Width="330" Height="210">
                                            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                                                <StackPanel>
                                                    <TextBlock Padding="6" TextWrapping="Wrap">
                                このアプリケーションは、Bitbank.cc が公開しているAPIを利用して注文や資産・注文一覧・取引履歴等の情報取得をしています。
                                                    </TextBlock>
                                                    <TextBlock Padding="6" TextWrapping="Wrap">
                                これらの機能を利用するには、Bitbankでアカウントを作成し、それぞれの機能ごとにAPIキーを発行して設定をしてください。設定画面でまとめて設定または変更することもできます。
                                                    </TextBlock>
                                                    <TextBlock Padding="6">
                                <Run Text="Bitbank ログイン:"></Run>
                                <Hyperlink NavigateUri="https://bitbank.cc/" RequestNavigate="Hyperlink_RequestNavigate">https://bitbank.cc/</Hyperlink>
                                                    </TextBlock>
                                                    <TextBlock Padding="6">
                                <Run Text="Bitbank API発行ページ:"></Run>
                                <Hyperlink NavigateUri="https://bitbank.cc/app/account/api" RequestNavigate="Hyperlink_RequestNavigate">https://bitbank.cc/app/account/api</Hyperlink>
                                                    </TextBlock>

                                                    <TextBlock Padding="6">
                                <Run Text="Bitbank FAQページ:"></Run>
                                <Hyperlink NavigateUri="https://bitbankcc.zendesk.com/hc/ja/articles/360005745194-API%E3%82%AD%E3%83%BC%E3%82%92%E7%99%BA%E8%A1%8C%E3%81%97%E3%81%9F%E3%81%84" RequestNavigate="Hyperlink_RequestNavigate">FAQ：APIキーを発行したい</Hyperlink>
                                                    </TextBlock>
                                                </StackPanel>
                                            </ScrollViewer>
                                        </Border>
                                    </Popup>
                                    <Grid Margin="12 6 6 6">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Label Grid.Row="0" Grid.Column="0" Content="APIキー (権限 [参照])：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                        <Label Grid.Row="1" Grid.Column="0" Content="APIシークレット：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                        <TextBox Grid.Row="0" Grid.Column="1" Margin="3" Text="{Binding OrdersApiKey}"></TextBox>

                                        <TextBox Grid.Row="1" Grid.Column="1" Margin="3" Text="{Binding OrdersSecret}"></TextBox>

                                        <ToggleButton x:Name="OrdersAPIKeyInfoButton" Grid.Row="0" Grid.Column="2" Content="?" Style="{StaticResource TooltipInfoToggleButtonStyle}"/>

                                        <Button Grid.Row="1" Grid.Column="2" Width="50" Margin="3" Command="{Binding SetOrdersAPIKeyCommand}">設定</Button>

                                    </Grid>

                                </StackPanel>
                            </Border>

                            <!-- ロック中表示 -->
                            <Border Visibility="{Binding PublicApiOnlyMode, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                <StackPanel>

                                    <!-- ロック解除ボタン -->
                                    <Button Command="{Binding ShowLogInCommand}" Foreground="Gray" Background="Transparent" Style="{DynamicResource PathButton}" ToolTip="ロック解除(Ctrl+U)" ToolTipService.ToolTip="ロック解除(Ctrl+U)" Height="36" Width="36" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="6 24 0 0" Visibility="{Binding PublicApiOnlyMode, Mode=OneWay, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                        M18,20V10H6V20H18M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6C4.89,22 4,21.1 4,20V10A2,2 0 0,1 6,8H15V6A3,3 0 0,0 12,3A3,3 0 0,0 9,6H7A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18M12,17A2,2 0 0,1 10,15A2,2 0 0,1 12,13A2,2 0 0,1 14,15A2,2 0 0,1 12,17Z
                                    </Button>

                                </StackPanel>
                            </Border>

                            <Grid Visibility="{Binding ShowOrders, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Grid x:Name="AODummy" Grid.Row="0" Grid.Column="0" Visibility="Hidden" Margin="0 0 27 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="80" />
                                        <ColumnDefinition Width="5*" MinWidth="80"/>
                                        <ColumnDefinition Width="3*" />
                                        <ColumnDefinition Width="3*" />
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="4*"/>
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="8*" MinWidth="45" />
                                        <ColumnDefinition Width="32" MinWidth="24" />

                                    </Grid.ColumnDefinitions>

                                    <!--  This is the hidden helper Field which is used to bind to, using the "Fill" column of the helper grid  -->
                                    <Grid x:Name="AOhwidth0" Grid.Column="0" />
                                    <Grid x:Name="AOhwidth1" Grid.Column="1" />
                                    <Grid x:Name="AOhwidth2" Grid.Column="2" />
                                    <Grid x:Name="AOhwidth3" Grid.Column="3" />
                                    <Grid x:Name="AOhwidth4" Grid.Column="4" />
                                    <Grid x:Name="AOhwidth5" Grid.Column="5" />
                                    <Grid x:Name="AOhwidth6" Grid.Column="6" />
                                    <Grid x:Name="AOhwidth7" Grid.Column="7" />
                                    <Grid x:Name="AOhwidth8" Grid.Column="8" />
                                    <Grid x:Name="AOhwidth9" Grid.Column="9" />
                                    <Grid x:Name="AOhwidth10" Grid.Column="10" />
                                    <Grid x:Name="AOhwidth11" Grid.Column="11" />

                                </Grid>

                                <ListView x:Name="ActiveOrdersListView" Grid.Row="1" Grid.Column="0" ItemsSource="{Binding ActivePair.ActiveOrders}" Background="{DynamicResource BoardBackgroundColorBrush}" IsSynchronizedWithCurrentItem="True" common:GridViewSort.AutoSort="True" common:GridViewSort.ShowSortGlyph="True" AlternationCount="2" MinHeight="80" BorderThickness="0" Padding="0 0 0 0" Margin="0 0 0 0" SelectionMode="Extended" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Visible">
                                    
                                    <ListView.Resources>
                                        <ContextMenu x:Key="ItemContextMenu">
                                            <MenuItem Header="選択アイテム">
                                                <MenuItem Header="発注キャンセル" 
                                                  Command="{Binding Path=DataContext.CancelOrderListviewCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"
                                                  CommandParameter="{Binding Path=SelectedItems, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"
                                                      IsEnabled="{Binding Path=SelectedItem.IsCancelEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}">

                                                    <MenuItem.Resources>
                                                        <ControlTemplate x:Key="CancelIcon">
                                                            <Canvas Background="Transparent" >
                                                                <Path Fill="#373737" Width="14.3775" Height="14" Canvas.Left="0.311264" Canvas.Top="0.500005" Stretch="Uniform" Data="M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12C4,13.85 4.63,15.55 5.68,16.91L16.91,5.68C15.55,4.63 13.85,4 12,4M12,20A8,8 0 0,0 20,12C20,10.15 19.37,8.45 18.32,7.09L7.09,18.32C8.45,19.37 10.15,20 12,20Z" />
                                                            </Canvas>
                                                        </ControlTemplate>
                                                    </MenuItem.Resources>
                                                    <MenuItem.Icon>
                                                        <ContentControl Template="{StaticResource CancelIcon}" />
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                            </MenuItem>
                                            <Separator />

                                            <MenuItem Header="リスト全体">
                                                <MenuItem Header="済みアイテムを全てクリア"
                                                  Command="{Binding Path=DataContext.RemoveDoneOrderListviewCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}">
                                                    <MenuItem.Resources>
                                                        <ControlTemplate x:Key="ClearDoneIcon">
                                                            <Canvas Background="Transparent">
                                                                <Path Fill="#373737" Width="14.3775" Height="14" Canvas.Left="0.311264" Canvas.Top="0.500005" Stretch="Uniform" Data="M15,16H19V18H15V16M15,8H22V10H15V8M15,12H21V14H15V12M3,18A2,2 0 0,0 5,20H11A2,2 0 0,0 13,18V8H3V18M14,5H11L10,4H6L5,5H2V7H14V5Z" />
                                                            </Canvas>
                                                        </ControlTemplate>
                                                    </MenuItem.Resources>
                                                    <MenuItem.Icon>
                                                        <ContentControl Template="{StaticResource ClearDoneIcon}" />
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                            </MenuItem>
                                        </ContextMenu>
                                        <Style TargetType="{x:Type ScrollBar}">
                                            <Setter Property="Margin" Value="0,0,0,0" />
                                            <Setter Property="BorderThickness" Value="0" />
                                            <Style.Triggers>
                                                <Trigger Property="Orientation" Value="Vertical">
                                                    <Setter Property="Width" Value="18"/>
                                                    <Setter Property="Height" Value="Auto" />
                                                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ListView.Resources>
                                    
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem" BasedOn="{StaticResource ListViewItemStyle}">
                                            <Setter Property="Margin" Value="1 0 0 0"/>
                                            <Setter Property="Padding" Value="0 1 0 1"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                            <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                                        </Style>
                                    </ListView.ItemContainerStyle>

                                    <ListView.View>
                                        <GridView>
                                            
                                            <GridView.ColumnHeaderContainerStyle>
                                                <Style TargetType="GridViewColumnHeader" BasedOn="{StaticResource GridViewColumnHeaderStyle}">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </Style>
                                            </GridView.ColumnHeaderContainerStyle>

                                            <GridViewColumn Header="注文ID" Width="{Binding ElementName=AOhwidth0, Path=ActualWidth}" common:GridViewSort.PropertyName="OrderID">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock x:Name="TBOrderID" Text="{Binding OrderID, Mode=OneWay}" Padding="3"/>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding OrderIsDone}" Value="true">
                                                                <Setter TargetName="TBOrderID" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="注文日時" Width="{Binding ElementName=AOhwidth1, Path=ActualWidth}" common:GridViewSort.PropertyName="OrderedAt">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock x:Name="TBOrderedAt" Text="{Binding OrderedAt, Mode=OneWay, StringFormat=M/d H:mm:ss}" Padding="3" />
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding OrderIsDone}" Value="true">
                                                                <Setter TargetName="TBOrderedAt" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="売/買"  Width="{Binding ElementName=AOhwidth2, Path=ActualWidth}" common:GridViewSort.PropertyName="SideText">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock x:Name="TBSideText" Text="{Binding SideText, Mode=OneWay}" Padding="3"/>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding OrderIsDone}" Value="true">
                                                                <Setter TargetName="TBSideText" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Side}" Value="buy">
                                                                <Setter TargetName="TBSideText" Property="TextBlock.Foreground" Value="{DynamicResource PriceUpColorBrush}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Side}" Value="sell">
                                                                <Setter TargetName="TBSideText" Property="TextBlock.Foreground" Value="{DynamicResource PriceDownColorBrush}"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="タイプ"  Width="{Binding ElementName=AOhwidth3, Path=ActualWidth}" common:GridViewSort.PropertyName="TypeText">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock x:Name="TBTypeText" Text="{Binding TypeText, Mode=OneWay}" Padding="3"/>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding OrderIsDone}" Value="true">
                                                                <Setter TargetName="TBTypeText" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="注文数"  Width="{Binding ElementName=AOhwidth4, Path=ActualWidth}" common:GridViewSort.PropertyName="StartAmount">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock x:Name="TBStartAmount" Text="{Binding StartAmount, Mode=OneWay, StringFormat=0.#############################}" Padding="3" />
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding OrderIsDone}" Value="true">
                                                                <Setter TargetName="TBStartAmount" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="注文価格"  Width="{Binding ElementName=AOhwidth5, Path=ActualWidth}" common:GridViewSort.PropertyName="Price">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock x:Name="TBPrice" Text="{Binding Price, Mode=OneWay, StringFormat=0.#############################}" Padding="3" />
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding OrderIsDone}" Value="true">
                                                                <Setter TargetName="TBPrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding Type}" Value="market">
                                                                <Setter TargetName="TBPrice" Property="Visibility" Value="Hidden"/>
                                                            </DataTrigger>

                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="現在値差"  Width="{Binding ElementName=AOhwidth6, Path=ActualWidth}" common:GridViewSort.PropertyName="Shushi">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock x:Name="TBDiff" Text="{Binding Shushi, Mode=OneWay, StringFormat=0.#############################}" Padding="3" />
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding OrderIsDone}" Value="true">
                                                                <Setter TargetName="TBDiff" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding Type}" Value="market">
                                                                <Setter TargetName="TBDiff" Property="Visibility" Value="Hidden"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="平均約定"  Width="{Binding ElementName=AOhwidth7, Path=ActualWidth}" common:GridViewSort.PropertyName="AveragePrice">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock x:Name="TBAveragePrice" Text="{Binding AveragePrice, Mode=OneWay, StringFormat=0.#############################}" Padding="3" />
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding OrderIsDone}" Value="true">
                                                                <Setter TargetName="TBAveragePrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="未約定"  Width="{Binding ElementName=AOhwidth8, Path=ActualWidth}" common:GridViewSort.PropertyName="RemainingAmount">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock x:Name="TBRemainingAmount" Text="{Binding RemainingAmount, Mode=OneWay, StringFormat=0.#############################}" Padding="3" />
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding OrderIsDone}" Value="true">
                                                                <Setter TargetName="TBRemainingAmount" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="注文金額"  Width="{Binding ElementName=AOhwidth9, Path=ActualWidth}" common:GridViewSort.PropertyName="ActualPrice">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock x:Name="TBActualPrice" Text="{Binding ActualPrice, Mode=OneWay, StringFormat=0.#############################}" Padding="3" />
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding OrderIsDone}" Value="true">
                                                                <Setter TargetName="TBActualPrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="ステータス" Width="{Binding ElementName=AOhwidth10, Path=ActualWidth}" common:GridViewSort.PropertyName="StatusText">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock x:Name="TBStatusText" Text="{Binding StatusText, Mode=OneWay}" Padding="3" />
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding OrderIsDone}" Value="true">
                                                                <Setter TargetName="TBStatusText" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="！" Width="{Binding ElementName=AOhwidth11, Path=ActualWidth}">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <ToggleButton x:Name="OrderListInfoButton" Content="!!!" Style="{StaticResource ErrorInfoToggleButtonStyle}" Foreground="{DynamicResource WarningColorBrush}"/>
                                                            <Popup IsOpen="{Binding IsChecked, ElementName=OrderListInfoButton}" StaysOpen="False">
                                                                <Border Background="Red" CornerRadius="4" Padding="6" Width="250">
                                                                    <StackPanel>
                                                                        <TextBlock TextWrapping="Wrap">
                                                                    <Run Text="Error"></Run>
                                                                    <Run Text="{Binding Path=Err.ErrorTitle}"></Run>
                                                                    <Run Text="{Binding Path=Err.ErrorDescription}"></Run>
                                                                        </TextBlock>
                                                                    </StackPanel>
                                                                </Border>
                                                            </Popup>
                                                        </StackPanel>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding HasErrorInfo}" Value="true">
                                                                <Setter TargetName="OrderListInfoButton" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding HasErrorInfo}" Value="false">
                                                                <Setter TargetName="OrderListInfoButton" Property="Visibility" Value="Hidden"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                        </GridView>
                                    </ListView.View>

                                </ListView>

                            </Grid>

                        </Grid>

                    </TabItem>

                    <!-- 特殊注文 -->
                    <TabItem Header="{Binding ActiveIfdocosCountTitle}" Style="{StaticResource NoChromeTabHeader}" Background="Transparent" BorderThickness="0" Width="120" Padding="4" Visibility="{Binding BetaMode, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">

                        <Grid>

                            <!-- 特殊注文APIキー設定画面 -->
                            <Border Width="360" Margin="3 0 0 6" HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="{Binding ShowIfdocoTradeApiSet, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                <StackPanel>
                                    <Border BorderBrush="DimGray" BorderThickness="0 0 0 0.5" Margin="3" Padding="3">
                                        <Label Padding="0" Content="特殊注文用APIキー設定" Style="{DynamicResource SectionTitle}"/>
                                    </Border>
                                    <Popup IsOpen="{Binding IsChecked, ElementName=IfdocoTradeListAPIKeyInfoButton}" StaysOpen="False" PlacementTarget="{Binding ElementName=IfdocoTradeListAPIKeyInfoButton}" AllowsTransparency="True" PopupAnimation="Slide">
                                        <Border Background="WhiteSmoke" CornerRadius="4" Padding="6" Width="330" Height="210">
                                            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                                                <StackPanel>
                                                    <TextBlock Padding="6" TextWrapping="Wrap">
                                このアプリケーションは、Bitbank.cc が公開しているAPIを利用して注文や資産・注文一覧・取引履歴等の情報取得をしています。
                                                    </TextBlock>
                                                    <TextBlock Padding="6" TextWrapping="Wrap">
                                これらの機能を利用するには、Bitbankでアカウントを作成し、それぞれの機能ごとにAPIキーを発行して設定をしてください。設定画面でまとめて設定または変更することもできます。
                                                    </TextBlock>
                                                    <TextBlock Padding="6">
                                <Run Text="Bitbank ログイン:"></Run>
                                <Hyperlink NavigateUri="https://bitbank.cc/" RequestNavigate="Hyperlink_RequestNavigate">https://bitbank.cc/</Hyperlink>
                                                    </TextBlock>
                                                    <TextBlock Padding="6">
                                <Run Text="Bitbank API発行ページ:"></Run>
                                <Hyperlink NavigateUri="https://bitbank.cc/app/account/api" RequestNavigate="Hyperlink_RequestNavigate">https://bitbank.cc/app/account/api</Hyperlink>
                                                    </TextBlock>

                                                    <TextBlock Padding="6">
                                <Run Text="Bitbank FAQページ:"></Run>
                                <Hyperlink NavigateUri="https://bitbankcc.zendesk.com/hc/ja/articles/360005745194-API%E3%82%AD%E3%83%BC%E3%82%92%E7%99%BA%E8%A1%8C%E3%81%97%E3%81%9F%E3%81%84" RequestNavigate="Hyperlink_RequestNavigate">FAQ：APIキーを発行したい</Hyperlink>
                                                    </TextBlock>
                                                </StackPanel>
                                            </ScrollViewer>
                                        </Border>
                                    </Popup>
                                    <Grid Margin="12 6 6 6">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Label Grid.Row="0" Grid.Column="0" Content="APIキー (権限 [参照] [取引])：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                        <Label Grid.Row="1" Grid.Column="0" Content="APIシークレット：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                        <TextBox Grid.Row="0" Grid.Column="1" Margin="3" Text="{Binding IfdocoTradeApiKey}"></TextBox>

                                        <TextBox Grid.Row="1" Grid.Column="1" Margin="3" Text="{Binding IfdocoTradeSecret}"></TextBox>

                                        <ToggleButton x:Name="IfdocoTradeListAPIKeyInfoButton" Grid.Row="0" Grid.Column="2" Content="?" Style="{StaticResource TooltipInfoToggleButtonStyle}"/>

                                        <Button Grid.Row="1" Grid.Column="2" Width="50" Margin="3" Command="{Binding SetIfdocoTradeAPIKeyCommand}">設定</Button>

                                    </Grid>

                                </StackPanel>
                            </Border>

                            <!-- ロック中表示 -->
                            <Border Visibility="{Binding PublicApiOnlyMode, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                <StackPanel>

                                    <!-- ロック解除ボタン -->
                                    <Button Command="{Binding ShowLogInCommand}" Foreground="Gray" Background="Transparent" Style="{DynamicResource PathButton}" ToolTip="ロック解除(Ctrl+U)" ToolTipService.ToolTip="ロック解除(Ctrl+U)" Height="36" Width="36" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="6 24 0 0" Visibility="{Binding PublicApiOnlyMode, Mode=OneWay, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                        M18,20V10H6V20H18M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6C4.89,22 4,21.1 4,20V10A2,2 0 0,1 6,8H15V6A3,3 0 0,0 12,3A3,3 0 0,0 9,6H7A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18M12,17A2,2 0 0,1 10,15A2,2 0 0,1 12,13A2,2 0 0,1 14,15A2,2 0 0,1 12,17Z
                                    </Button>

                                </StackPanel>
                            </Border>

                            <Grid Visibility="{Binding ShowIfdocoTrade, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Grid x:Name="AIfdocoDummy" Grid.Row="0" Grid.Column="0" Visibility="Hidden" Margin="0 0 27 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="4*" />

                                        <ColumnDefinition Width="2*"/>
                                        <ColumnDefinition Width="3*" />
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="4*"/>
                                        <ColumnDefinition Width="7*" MinWidth="50" />
                                        <ColumnDefinition Width="32" MinWidth="24" />

                                        <ColumnDefinition Width="2*" />
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="7*" MinWidth="50" />
                                        <ColumnDefinition Width="32" MinWidth="24"/>
                                    </Grid.ColumnDefinitions>

                                    <!--  This is the hidden helper Field which is used to bind to, using the "Fill" column of the helper grid  -->
                                    <Grid x:Name="AIfdocoWidth0" Grid.Column="0" />
                                    <Grid x:Name="AIfdocoWidth1" Grid.Column="1" />
                                    <Grid x:Name="AIfdocoWidth2" Grid.Column="2" />
                                    <Grid x:Name="AIfdocoWidth3" Grid.Column="3" />
                                    <Grid x:Name="AIfdocoWidth4" Grid.Column="4" />
                                    <Grid x:Name="AIfdocoWidth5" Grid.Column="5" />
                                    <Grid x:Name="AIfdocoWidth6" Grid.Column="6" />
                                    <Grid x:Name="AIfdocoWidth7" Grid.Column="7" />
                                    <Grid x:Name="AIfdocoWidth8" Grid.Column="8" />
                                    <Grid x:Name="AIfdocoWidth9" Grid.Column="9" />
                                    <Grid x:Name="AIfdocoWidth10" Grid.Column="10" />
                                    <Grid x:Name="AIfdocoWidth11" Grid.Column="11" />
                                    <Grid x:Name="AIfdocoWidth12" Grid.Column="12" />
                                    <Grid x:Name="AIfdocoWidth13" Grid.Column="13" />
                                    <Grid x:Name="AIfdocoWidth14" Grid.Column="14" />
                                    <Grid x:Name="AIfdocoWidth15" Grid.Column="15" />
                                    <Grid x:Name="AIfdocoWidth16" Grid.Column="16" />
                                    <Grid x:Name="AIfdocoWidth17" Grid.Column="17" />
                                    <Grid x:Name="AIfdocoWidth18" Grid.Column="18" />
                                </Grid>

                                <ListView x:Name="IFDOCO_ListView" Grid.Row="1" Grid.Column="0" ItemsSource="{Binding ActivePair.Ifdocos}" Background="{DynamicResource BoardBackgroundColorBrush}" IsSynchronizedWithCurrentItem="True" common:GridViewSort.AutoSort="True" common:GridViewSort.ShowSortGlyph="True" AlternationCount="2" MinHeight="80" BorderThickness="0" Padding="0 0 0 0" Margin="0" SelectionMode="Extended" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Visible">
                                    <ListView.Resources>
                                        <ContextMenu x:Key="IFDOCO_ItemContextMenu">
                                            <MenuItem Header="選択アイテム">
                                                <MenuItem Header="発注キャンセル" 
                                                  Command="{Binding Path=DataContext.CancelIfdocoListviewCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"
                                                  CommandParameter="{Binding Path=SelectedItems, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" IsEnabled="{Binding IsCancelEnabled}">
                                                    <MenuItem.Resources>
                                                        <ControlTemplate x:Key="CancelIcon">
                                                            <Canvas Background="Transparent" >
                                                                <Path Fill="#373737" Width="14.3775" Height="14" Canvas.Left="0.311264" Canvas.Top="0.500005" Stretch="Uniform" Data="M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12C4,13.85 4.63,15.55 5.68,16.91L16.91,5.68C15.55,4.63 13.85,4 12,4M12,20A8,8 0 0,0 20,12C20,10.15 19.37,8.45 18.32,7.09L7.09,18.32C8.45,19.37 10.15,20 12,20Z" />
                                                            </Canvas>
                                                        </ControlTemplate>
                                                    </MenuItem.Resources>
                                                    <MenuItem.Icon>
                                                        <ContentControl Template="{StaticResource CancelIcon}" />
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                            </MenuItem>
                                            <Separator />
                                            <MenuItem Header="リスト全体">
                                                <MenuItem Header="済みアイテムを全てクリア"
                                                  Command="{Binding Path=DataContext.RemoveDoneIfdocoListviewCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}">
                                                    <MenuItem.Resources>
                                                        <ControlTemplate x:Key="ClearDoneIcon">
                                                            <Canvas Background="Transparent">
                                                                <Path Fill="#373737" Width="14.3775" Height="14" Canvas.Left="0.311264" Canvas.Top="0.500005" Stretch="Uniform" Data="M15,16H19V18H15V16M15,8H22V10H15V8M15,12H21V14H15V12M3,18A2,2 0 0,0 5,20H11A2,2 0 0,0 13,18V8H3V18M14,5H11L10,4H6L5,5H2V7H14V5Z" />
                                                            </Canvas>
                                                        </ControlTemplate>
                                                    </MenuItem.Resources>
                                                    <MenuItem.Icon>
                                                        <ContentControl Template="{StaticResource ClearDoneIcon}" />
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                            </MenuItem>
                                        </ContextMenu>
                                        <Style TargetType="{x:Type ScrollBar}">
                                            <Setter Property="Margin" Value="0,0,0,0" />
                                            <Setter Property="BorderThickness" Value="0" />
                                            <Style.Triggers>
                                                <Trigger Property="Orientation" Value="Vertical">
                                                    <Setter Property="Width" Value="18"/>
                                                    <Setter Property="Height" Value="Auto" />
                                                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ListView.Resources>
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem" BasedOn="{StaticResource ListViewItemStyle}">
                                            <Setter Property="Margin" Value="0 0 0 0"/>
                                            <Setter Property="Padding" Value="0 1 0 1"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                            <Setter Property="VerticalContentAlignment" Value="Top"/>

                                            <Setter Property="ContextMenu" Value="{StaticResource IFDOCO_ItemContextMenu}" />

                                        </Style>
                                    </ListView.ItemContainerStyle>

                                    <ListView.View>
                                        <GridView>
                                            <GridView.ColumnHeaderContainerStyle>
                                                <Style TargetType="GridViewColumnHeader" BasedOn="{StaticResource GridViewColumnHeaderStyle}">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </Style>
                                            </GridView.ColumnHeaderContainerStyle>
                                            <!--
                                            <GridViewColumn Header="注文ID" Width="80">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding BuyOrderID}" Padding="3"/>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                        -->
                                            <!--
                                    <GridViewColumn Header="ID" Width="30" common:GridViewSort.PropertyName="Id">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Id}" Padding="3"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    -->
                                            <GridViewColumn Header="種別" Width="{Binding ElementName=AIfdocoWidth0, Path=ActualWidth}" common:GridViewSort.PropertyName="Kind">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <TextBlock x:Name="KindString" Text="{Binding KindString, Mode=OneWay}" Padding="3"/>
                                                        </StackPanel>

                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding IfdocoIsDone}" Value="true">
                                                                <Setter TargetName="KindString" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IfdIsDone}" Value="true">
                                                                <Setter TargetName="KindString" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoIsDone}" Value="true">
                                                                <Setter TargetName="KindString" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <!--
                                    <GridViewColumn Header="注文日時" Width="100" common:GridViewSort.PropertyName="IfdoneOrderedAt">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel>
                                                    <TextBlock Text="{Binding IfdoneOrderedAt, StringFormat=MM/dd HH:mm:ss}" Padding="3"/>
                                                    <TextBlock Text="{Binding OcoOneOrderedAt, StringFormat=MM/dd HH:mm:ss}" Padding="3 0 3 3"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    -->
                                            <GridViewColumn Header="売/買" Width="{Binding ElementName=AIfdocoWidth1, Path=ActualWidth}" common:GridViewSort.PropertyName="IfdoneSide">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <TextBlock x:Name="IfdoneSide" Text="{Binding IfdoneSideText, Mode=OneWay}" Padding="3"/>
                                                            <TextBlock x:Name="OcoOneSide" Text="{Binding OcoOneSideText, Mode=OneWay}" Padding="3"/>
                                                        </StackPanel>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFD">
                                                                <Setter TargetName="IfdoneSide" Property="Visibility" Value="Visible"/>
                                                                <Setter TargetName="OcoOneSide" Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="OCO">
                                                                <Setter TargetName="IfdoneSide" Property="Visibility" Value="Collapsed"/>
                                                                <Setter TargetName="OcoOneSide" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFDOCO">
                                                                <Setter TargetName="IfdoneSide" Property="Visibility" Value="Visible"/>
                                                                <Setter TargetName="OcoOneSide" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdoneIsDone}" Value="true">
                                                                <Setter TargetName="IfdoneSide" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOneIsDone}" Value="true">
                                                                <Setter TargetName="OcoOneSide" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdoneSide}" Value="buy">
                                                                <Setter TargetName="IfdoneSide" Property="TextBlock.Foreground" Value="{DynamicResource PriceUpColorBrush}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IfdoneSide}" Value="sell">
                                                                <Setter TargetName="IfdoneSide" Property="TextBlock.Foreground" Value="{DynamicResource PriceDownColorBrush}"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding OcoOneSideText}" Value="buy">
                                                                <Setter TargetName="OcoOneSide" Property="TextBlock.Foreground" Value="{DynamicResource PriceUpColorBrush}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOneSideText}" Value="sell">
                                                                <Setter TargetName="OcoOneSide" Property="TextBlock.Foreground" Value="{DynamicResource PriceDownColorBrush}"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding OcoOneOrderID}" Value="0">
                                                                <Setter TargetName="OcoOneSide" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>

                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="タイプ" Width="{Binding ElementName=AIfdocoWidth2, Path=ActualWidth}" common:GridViewSort.PropertyName="IfdoneType">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <TextBlock x:Name="IfdoneType" Text="{Binding IfdoneTypeText, Mode=OneWay}" Padding="3" />
                                                            <TextBlock x:Name="OcoOneType" Text="{Binding OcoOneTypeText, Mode=OneWay}" Padding="3" />
                                                        </StackPanel>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFD">
                                                                <Setter TargetName="IfdoneType" Property="Visibility" Value="Visible"/>
                                                                <Setter TargetName="OcoOneType" Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="OCO">
                                                                <Setter TargetName="IfdoneType" Property="Visibility" Value="Collapsed"/>
                                                                <Setter TargetName="OcoOneType" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFDOCO">
                                                                <Setter TargetName="IfdoneType" Property="Visibility" Value="Visible"/>
                                                                <Setter TargetName="OcoOneType" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdoneIsDone}" Value="true">
                                                                <Setter TargetName="IfdoneType" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOneIsDone}" Value="true">
                                                                <Setter TargetName="OcoOneType" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding OcoOneOrderID}" Value="0">
                                                                <Setter TargetName="OcoOneType" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="注文数" Width="{Binding ElementName=AIfdocoWidth3, Path=ActualWidth}" common:GridViewSort.PropertyName="IfdoneStartAmount">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <TextBlock x:Name="IfdoneStartAmount" Text="{Binding IfdoneStartAmount, Mode=OneWay, StringFormat=0.#############################}" Padding="3" />
                                                            <TextBlock x:Name="OcoOneStartAmount" Text="{Binding OcoOneStartAmount, Mode=OneWay, StringFormat=0.#############################}" Padding="3" />
                                                        </StackPanel>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFD">
                                                                <Setter TargetName="IfdoneStartAmount" Property="Visibility" Value="Visible"/>
                                                                <Setter TargetName="OcoOneStartAmount" Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="OCO">
                                                                <Setter TargetName="IfdoneStartAmount" Property="Visibility" Value="Collapsed"/>
                                                                <Setter TargetName="OcoOneStartAmount" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFDOCO">
                                                                <Setter TargetName="IfdoneStartAmount" Property="Visibility" Value="Visible"/>
                                                                <Setter TargetName="OcoOneStartAmount" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdoneIsDone}" Value="true">
                                                                <Setter TargetName="IfdoneStartAmount" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOneIsDone}" Value="true">
                                                                <Setter TargetName="OcoOneStartAmount" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOneOrderID}" Value="0">
                                                                <Setter TargetName="OcoOneStartAmount" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>

                                            <GridViewColumn Header="トリガー" Width="{Binding ElementName=AIfdocoWidth4, Path=ActualWidth}" common:GridViewSort.PropertyName="OcoOneTriggerPrice">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <TextBlock x:Name="IfdoneTriggerPrice" Text="-" Padding="3" />
                                                            <TextBlock x:Name="OcoOneTriggerPrice" Text="{Binding OcoOneTriggerPriceString, Mode=OneWay}" Padding="3" />
                                                        </StackPanel>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFD">
                                                                <Setter TargetName="IfdoneTriggerPrice" Property="Visibility" Value="Hidden"/>
                                                                <Setter TargetName="OcoOneTriggerPrice" Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="OCO">
                                                                <Setter TargetName="IfdoneTriggerPrice" Property="Visibility" Value="Collapsed"/>
                                                                <Setter TargetName="OcoOneTriggerPrice" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFDOCO">
                                                                <Setter TargetName="IfdoneTriggerPrice" Property="Visibility" Value="Hidden"/>
                                                                <Setter TargetName="OcoOneTriggerPrice" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdoneIsDone}" Value="true">
                                                                <Setter TargetName="IfdoneTriggerPrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOneIsDone}" Value="true">
                                                                <Setter TargetName="OcoOneTriggerPrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding OcoOneOrderID}" Value="0">
                                                                <Setter TargetName="OcoOneTriggerPrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOneOrderID}" Value="0">
                                                                <Setter TargetName="OcoOneTriggerPrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="価格" Width="{Binding ElementName=AIfdocoWidth5, Path=ActualWidth}" common:GridViewSort.PropertyName="IfdonePrice">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <TextBlock x:Name="IfdonePrice" Text="{Binding IfdonePrice, Mode=OneWay, StringFormat=0.#############################}" Padding="3" />
                                                            <TextBlock x:Name="OcoOnePrice" Text="{Binding OcoOnePrice, Mode=OneWay, StringFormat=0.#############################}" Padding="3" />
                                                        </StackPanel>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFD">
                                                                <Setter TargetName="IfdonePrice" Property="Visibility" Value="Visible"/>
                                                                <Setter TargetName="OcoOnePrice" Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="OCO">
                                                                <Setter TargetName="IfdonePrice" Property="Visibility" Value="Collapsed"/>
                                                                <Setter TargetName="OcoOnePrice" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFDOCO">
                                                                <Setter TargetName="IfdonePrice" Property="Visibility" Value="Visible"/>
                                                                <Setter TargetName="OcoOnePrice" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdoneIsDone}" Value="true">
                                                                <Setter TargetName="IfdonePrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOneIsDone}" Value="true">
                                                                <Setter TargetName="OcoOnePrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOneOrderID}" Value="0">
                                                                <Setter TargetName="OcoOnePrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="平均約定" Width="{Binding ElementName=AIfdocoWidth6, Path=ActualWidth}" common:GridViewSort.PropertyName="IfdoneAveragePrice">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <TextBlock x:Name="IfdoneAveragePrice" Text="{Binding IfdoneAveragePrice, Mode=OneWay, StringFormat=0.#############################}" Padding="3" />
                                                            <TextBlock x:Name="OcoOneAveragePrice" Text="{Binding OcoOneAveragePrice, Mode=OneWay, StringFormat=0.#############################}" Padding="3" />
                                                        </StackPanel>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFD">
                                                                <Setter TargetName="IfdoneAveragePrice" Property="Visibility" Value="Visible"/>
                                                                <Setter TargetName="OcoOneAveragePrice" Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="OCO">
                                                                <Setter TargetName="IfdoneAveragePrice" Property="Visibility" Value="Collapsed"/>
                                                                <Setter TargetName="OcoOneAveragePrice" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFDOCO">
                                                                <Setter TargetName="IfdoneAveragePrice" Property="Visibility" Value="Visible"/>
                                                                <Setter TargetName="OcoOneAveragePrice" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdoneIsDone}" Value="true">
                                                                <Setter TargetName="IfdoneAveragePrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOneIsDone}" Value="true">
                                                                <Setter TargetName="OcoOneAveragePrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOneOrderID}" Value="0">
                                                                <Setter TargetName="OcoOneAveragePrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="未約定" Width="{Binding ElementName=AIfdocoWidth7, Path=ActualWidth}" common:GridViewSort.PropertyName="IfdoneRemainingAmount">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <TextBlock x:Name="IfdoneRemainingAmount" Text="{Binding IfdoneRemainingAmount, Mode=OneWay, StringFormat=0.#############################}" Padding="3" />
                                                            <TextBlock x:Name="OcoOneRemainingAmount" Text="{Binding OcoOneRemainingAmount, Mode=OneWay, StringFormat=0.#############################}" Padding="3" />
                                                        </StackPanel>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFD">
                                                                <Setter TargetName="IfdoneRemainingAmount" Property="Visibility" Value="Visible"/>
                                                                <Setter TargetName="OcoOneRemainingAmount" Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="OCO">
                                                                <Setter TargetName="IfdoneRemainingAmount" Property="Visibility" Value="Collapsed"/>
                                                                <Setter TargetName="OcoOneRemainingAmount" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFDOCO">
                                                                <Setter TargetName="IfdoneRemainingAmount" Property="Visibility" Value="Visible"/>
                                                                <Setter TargetName="OcoOneRemainingAmount" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdoneIsDone}" Value="true">
                                                                <Setter TargetName="IfdoneRemainingAmount" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOneIsDone}" Value="true">
                                                                <Setter TargetName="OcoOneRemainingAmount" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOneOrderID}" Value="0">
                                                                <Setter TargetName="OcoOneRemainingAmount" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="ステータス" Width="{Binding ElementName=AIfdocoWidth8, Path=ActualWidth}" common:GridViewSort.PropertyName="IfdoneStatus">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <TextBlock x:Name="IfdoneStatus" Text="{Binding IfdoneStatusText, Mode=OneWay}" Padding="3" />
                                                            <TextBlock x:Name="OcoOneStatus" Text="{Binding OcoOneStatusText, Mode=OneWay}" Padding="3" />
                                                        </StackPanel>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFD">
                                                                <Setter TargetName="IfdoneStatus" Property="Visibility" Value="Visible"/>
                                                                <Setter TargetName="OcoOneStatus" Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="OCO">
                                                                <Setter TargetName="IfdoneStatus" Property="Visibility" Value="Collapsed"/>
                                                                <Setter TargetName="OcoOneStatus" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFDOCO">
                                                                <Setter TargetName="IfdoneStatus" Property="Visibility" Value="Visible"/>
                                                                <Setter TargetName="OcoOneStatus" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdoneIsDone}" Value="true">
                                                                <Setter TargetName="IfdoneStatus" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOneIsDone}" Value="true">
                                                                <Setter TargetName="OcoOneStatus" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOneOrderID}" Value="0">
                                                                <Setter TargetName="OcoOneStatus" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="！" Width="{Binding ElementName=AIfdocoWidth9, Path=ActualWidth}">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <ToggleButton x:Name="IfdOrderListInfoButton" Content="!!!" Style="{StaticResource ErrorInfoToggleButtonStyle}" Foreground="{DynamicResource WarningColorBrush}"/>
                                                            <Popup IsOpen="{Binding IsChecked, ElementName=IfdOrderListInfoButton}" StaysOpen="False">
                                                                <Border Background="Red" CornerRadius="4" Padding="6" Width="250">
                                                                    <StackPanel>
                                                                        <TextBlock TextWrapping="Wrap">
                                                                    <Run Text="Error"></Run>
                                                                    <Run Text="{Binding Path=IfdoneErrorInfo.ErrorTitle}"></Run>
                                                                    <Run Text="{Binding Path=IfdoneErrorInfo.ErrorDescription}"></Run>
                                                                        </TextBlock>
                                                                    </StackPanel>
                                                                </Border>
                                                            </Popup>

                                                            <ToggleButton x:Name="OcoOneOrderListInfoButton" Content="!!!" Style="{StaticResource ErrorInfoToggleButtonStyle}" Foreground="{DynamicResource WarningColorBrush}"/>
                                                            <Popup IsOpen="{Binding IsChecked, ElementName=OcoOneOrderListInfoButton}" StaysOpen="False">
                                                                <Border Background="Red" CornerRadius="4" Padding="6" Width="250">
                                                                    <StackPanel>
                                                                        <TextBlock TextWrapping="Wrap">
                                                                            <Run Text="Error"></Run>
                                                                    <Run Text="{Binding Path=OcoOneErrorInfo.ErrorTitle}"></Run>
                                                                    <Run Text="{Binding Path=OcoOneErrorInfo.ErrorDescription}"></Run>
                                                                        </TextBlock>
                                                                    </StackPanel>
                                                                </Border>
                                                            </Popup>
                                                        </StackPanel>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding IfdoneHasError}" Value="true">
                                                                <Setter TargetName="IfdOrderListInfoButton" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IfdoneHasError}" Value="false">
                                                                <Setter TargetName="IfdOrderListInfoButton" Property="Visibility" Value="Hidden"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="OCO">
                                                                <Setter TargetName="IfdOrderListInfoButton" Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOneHasError}" Value="true">
                                                                <Setter TargetName="OcoOneOrderListInfoButton" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOneHasError}" Value="false">
                                                                <Setter TargetName="OcoOneOrderListInfoButton" Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <!--
                                        <GridViewColumn Header="キャンセル" Width="100">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button Content="キャンセル" Padding="6 0 6 0" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}, Path=DataContext.CancelOrderListviewCommand}" CommandParameter="{Binding}" IsEnabled="{Binding IsBuyCanceEnabled}"></Button>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        -->
                                            <!--
                                            <GridViewColumn Header="注文ID" Width="80">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding IfdDoOrderID}" Padding="3"/>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                        -->
                                            <!--
                                    <GridViewColumn Header="注文日時" Width="100" common:GridViewSort.PropertyName="IfdDoOrderedAt">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel>
                                                    <TextBlock Text="{Binding IfdDoOrderedAt, StringFormat=MM/dd HH:mm:ss}" Padding="3"/>
                                                    <TextBlock Text="{Binding OcoOtherOrderedAt, StringFormat=MM/dd HH:mm:ss}" Padding="3"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    -->
                                            <GridViewColumn Header="売/買" Width="{Binding ElementName=AIfdocoWidth10, Path=ActualWidth}" common:GridViewSort.PropertyName="IfdDoSide">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <TextBlock x:Name="IfdDoSide" Text="{Binding IfdDoSideText, Mode=OneWay}" Padding="3"/>
                                                            <TextBlock x:Name="OcoOtherSide" Text="{Binding OcoOtherSideText, Mode=OneWay}" Padding="3"/>
                                                        </StackPanel>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFD">
                                                                <Setter TargetName="IfdDoSide" Property="Visibility" Value="Visible"/>
                                                                <Setter TargetName="OcoOtherSide" Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="OCO">
                                                                <Setter TargetName="IfdDoSide" Property="Visibility" Value="Collapsed"/>
                                                                <Setter TargetName="OcoOtherSide" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFDOCO">
                                                                <Setter TargetName="IfdDoSide" Property="Visibility" Value="Hidden"/>
                                                                <Setter TargetName="OcoOtherSide" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdDoIsDone}" Value="true">
                                                                <Setter TargetName="IfdDoSide" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOtherIsDone}" Value="true">
                                                                <Setter TargetName="OcoOtherSide" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdDoSide}" Value="buy">
                                                                <Setter TargetName="IfdDoSide" Property="TextBlock.Foreground" Value="{DynamicResource PriceUpColorBrush}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IfdDoSide}" Value="sell">
                                                                <Setter TargetName="IfdDoSide" Property="TextBlock.Foreground" Value="{DynamicResource PriceDownColorBrush}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOtherSideText}" Value="buy">
                                                                <Setter TargetName="OcoOtherSide" Property="TextBlock.Foreground" Value="{DynamicResource PriceUpColorBrush}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOtherSideText}" Value="sell">
                                                                <Setter TargetName="OcoOtherSide" Property="TextBlock.Foreground" Value="{DynamicResource PriceDownColorBrush}"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdDoOrderID}" Value="0">
                                                                <Setter TargetName="IfdDoSide" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOtherOrderID}" Value="0">
                                                                <Setter TargetName="OcoOtherSide" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>

                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="タイプ" Width="{Binding ElementName=AIfdocoWidth11, Path=ActualWidth}" common:GridViewSort.PropertyName="IfdDoType">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <TextBlock x:Name="IfdDoTypeString" Text="{Binding IfdDoTypeText, Mode=OneWay}" Padding="3"/>
                                                            <TextBlock x:Name="OcoOtherTypeString" Text="{Binding OcoOtherTypeText, Mode=OneWay}" Padding="3"/>
                                                        </StackPanel>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFD">
                                                                <Setter TargetName="IfdDoTypeString" Property="Visibility" Value="Visible"/>
                                                                <Setter TargetName="OcoOtherTypeString" Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="OCO">
                                                                <Setter TargetName="IfdDoTypeString" Property="Visibility" Value="Collapsed"/>
                                                                <Setter TargetName="OcoOtherTypeString" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFDOCO">
                                                                <Setter TargetName="IfdDoTypeString" Property="Visibility" Value="Hidden"/>
                                                                <Setter TargetName="OcoOtherTypeString" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdDoIsDone}" Value="true">
                                                                <Setter TargetName="IfdDoTypeString" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOtherIsDone}" Value="true">
                                                                <Setter TargetName="OcoOtherTypeString" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdDoOrderID}" Value="0">
                                                                <Setter TargetName="IfdDoTypeString" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOtherOrderID}" Value="0">
                                                                <Setter TargetName="OcoOtherTypeString" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="注文数" Width="{Binding ElementName=AIfdocoWidth12, Path=ActualWidth}" common:GridViewSort.PropertyName="IfdDoStartAmount">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <TextBlock x:Name="IfdDoStartAmount" Text="{Binding IfdDoStartAmount, Mode=OneWay, StringFormat=0.#############################}" Padding="3"/>
                                                            <TextBlock x:Name="OcoOtherStartAmount" Text="{Binding OcoOtherStartAmount, Mode=OneWay, StringFormat=0.#############################}" Padding="3"/>
                                                        </StackPanel>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFD">
                                                                <Setter TargetName="IfdDoStartAmount" Property="Visibility" Value="Visible"/>
                                                                <Setter TargetName="OcoOtherStartAmount" Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="OCO">
                                                                <Setter TargetName="IfdDoStartAmount" Property="Visibility" Value="Collapsed"/>
                                                                <Setter TargetName="OcoOtherStartAmount" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFDOCO">
                                                                <Setter TargetName="IfdDoStartAmount" Property="Visibility" Value="Hidden"/>
                                                                <Setter TargetName="OcoOtherStartAmount" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdDoIsDone}" Value="true">
                                                                <Setter TargetName="IfdDoStartAmount" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOtherIsDone}" Value="true">
                                                                <Setter TargetName="OcoOtherStartAmount" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdDoOrderID}" Value="0">
                                                                <Setter TargetName="IfdDoStartAmount" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding OcoOtherOrderID}" Value="0">
                                                                <Setter TargetName="OcoOtherStartAmount" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>

                                            <GridViewColumn Header="トリガー" Width="{Binding ElementName=AIfdocoWidth13, Path=ActualWidth}" common:GridViewSort.PropertyName="OcoOtherTriggerPrice">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <TextBlock x:Name="IfdDoTriggerPrice" Text="{Binding IfdDoTriggerPriceString, Mode=OneWay}" Padding="3" />
                                                            <TextBlock x:Name="OcoOtherTriggerPrice" Text="{Binding OcoOtherTriggerPriceString, Mode=OneWay}" Padding="3" />
                                                        </StackPanel>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFD">
                                                                <Setter TargetName="IfdDoTriggerPrice" Property="Visibility" Value="Visible"/>
                                                                <Setter TargetName="OcoOtherTriggerPrice" Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="OCO">
                                                                <Setter TargetName="IfdDoTriggerPrice" Property="Visibility" Value="Collapsed"/>
                                                                <Setter TargetName="OcoOtherTriggerPrice" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFDOCO">
                                                                <Setter TargetName="IfdDoTriggerPrice" Property="Visibility" Value="Hidden"/>
                                                                <Setter TargetName="OcoOtherTriggerPrice" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdoneIsDone}" Value="true">
                                                                <Setter TargetName="IfdDoTriggerPrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOneIsDone}" Value="true">
                                                                <Setter TargetName="OcoOtherTriggerPrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdDoOrderID}" Value="0">
                                                                <Setter TargetName="IfdDoTriggerPrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOtherOrderID}" Value="0">
                                                                <Setter TargetName="OcoOtherTriggerPrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>

                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="価格" Width="{Binding ElementName=AIfdocoWidth14, Path=ActualWidth}" common:GridViewSort.PropertyName="IfdDoPrice">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <TextBlock x:Name="IfdDoPrice" Text="{Binding IfdDoPrice, Mode=OneWay, StringFormat=0.#############################}" Padding="3"/>
                                                            <TextBlock x:Name="OcoOtherPrice" Text="{Binding OcoOtherPrice, Mode=OneWay, StringFormat=0.#############################}" Padding="3"/>
                                                        </StackPanel>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFD">
                                                                <Setter TargetName="IfdDoPrice" Property="Visibility" Value="Visible"/>
                                                                <Setter TargetName="OcoOtherPrice" Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="OCO">
                                                                <Setter TargetName="IfdDoPrice" Property="Visibility" Value="Collapsed"/>
                                                                <Setter TargetName="OcoOtherPrice" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFDOCO">
                                                                <Setter TargetName="IfdDoPrice" Property="Visibility" Value="Hidden"/>
                                                                <Setter TargetName="OcoOtherPrice" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdDoIsDone}" Value="true">
                                                                <Setter TargetName="IfdDoPrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOtherIsDone}" Value="true">
                                                                <Setter TargetName="OcoOtherPrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdDoOrderID}" Value="0">
                                                                <Setter TargetName="IfdDoPrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOtherOrderID}" Value="0">
                                                                <Setter TargetName="OcoOtherPrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="平均約定" Width="{Binding ElementName=AIfdocoWidth15, Path=ActualWidth}" common:GridViewSort.PropertyName="IfdDoAveragePrice">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <TextBlock x:Name="IfdDoAveragePrice" Text="{Binding IfdDoAveragePrice, Mode=OneWay, StringFormat=0.#############################}" Padding="3"/>
                                                            <TextBlock x:Name="OcoOtherAveragePrice" Text="{Binding OcoOtherAveragePrice, Mode=OneWay, StringFormat=0.#############################}" Padding="3"/>
                                                        </StackPanel>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFD">
                                                                <Setter TargetName="IfdDoAveragePrice" Property="Visibility" Value="Visible"/>
                                                                <Setter TargetName="OcoOtherAveragePrice" Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="OCO">
                                                                <Setter TargetName="IfdDoAveragePrice" Property="Visibility" Value="Collapsed"/>
                                                                <Setter TargetName="OcoOtherAveragePrice" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFDOCO">
                                                                <Setter TargetName="IfdDoAveragePrice" Property="Visibility" Value="Hidden"/>
                                                                <Setter TargetName="OcoOtherAveragePrice" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdDoIsDone}" Value="true">
                                                                <Setter TargetName="IfdDoAveragePrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOtherIsDone}" Value="true">
                                                                <Setter TargetName="OcoOtherAveragePrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdDoOrderID}" Value="0">
                                                                <Setter TargetName="IfdDoAveragePrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOtherOrderID}" Value="0">
                                                                <Setter TargetName="OcoOtherAveragePrice" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="未約定" Width="{Binding ElementName=AIfdocoWidth16, Path=ActualWidth}" common:GridViewSort.PropertyName="IfdDoRemainingAmount">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <TextBlock x:Name="IfdDoRemainingAmount" Text="{Binding IfdDoRemainingAmount, Mode=OneWay, StringFormat=0.#############################}" Padding="3"/>
                                                            <TextBlock x:Name="OcoOtherRemainingAmount" Text="{Binding OcoOtherRemainingAmount, Mode=OneWay, StringFormat=0.#############################}" Padding="3"/>
                                                        </StackPanel>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFD">
                                                                <Setter TargetName="IfdDoRemainingAmount" Property="Visibility" Value="Visible"/>
                                                                <Setter TargetName="OcoOtherRemainingAmount" Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="OCO">
                                                                <Setter TargetName="IfdDoRemainingAmount" Property="Visibility" Value="Collapsed"/>
                                                                <Setter TargetName="OcoOtherRemainingAmount" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFDOCO">
                                                                <Setter TargetName="IfdDoRemainingAmount" Property="Visibility" Value="Hidden"/>
                                                                <Setter TargetName="OcoOtherRemainingAmount" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdDoIsDone}" Value="true">
                                                                <Setter TargetName="IfdDoRemainingAmount" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOtherIsDone}" Value="true">
                                                                <Setter TargetName="OcoOtherRemainingAmount" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdDoOrderID}" Value="0">
                                                                <Setter TargetName="IfdDoRemainingAmount" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOtherOrderID}" Value="0">
                                                                <Setter TargetName="OcoOtherRemainingAmount" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="ステータス" Width="{Binding ElementName=AIfdocoWidth17, Path=ActualWidth}" common:GridViewSort.PropertyName="IfdDoStatus">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <TextBlock x:Name="IfdDoStatus" Text="{Binding IfdDoStatusText, Mode=OneWay}" Padding="3"/>
                                                            <TextBlock x:Name="OcoOtherStatus" Text="{Binding OcoOtherStatusText, Mode=OneWay}" Padding="3"/>
                                                        </StackPanel>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFD">
                                                                <Setter TargetName="IfdDoStatus" Property="Visibility" Value="Visible"/>
                                                                <Setter TargetName="OcoOtherStatus" Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="OCO">
                                                                <Setter TargetName="IfdDoStatus" Property="Visibility" Value="Collapsed"/>
                                                                <Setter TargetName="OcoOtherStatus" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="IFDOCO">
                                                                <Setter TargetName="IfdDoStatus" Property="Visibility" Value="Hidden"/>
                                                                <Setter TargetName="OcoOtherStatus" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdDoIsDone}" Value="true">
                                                                <Setter TargetName="IfdDoStatus" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOtherIsDone}" Value="true">
                                                                <Setter TargetName="OcoOtherStatus" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IfdDoOrderID}" Value="0">
                                                                <Setter TargetName="IfdDoStatus" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOtherOrderID}" Value="0">
                                                                <Setter TargetName="OcoOtherStatus" Property="TextBlock.Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="！" Width="{Binding ElementName=AIfdocoWidth18, Path=ActualWidth}">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <ToggleButton x:Name="IfdDoOrderListInfoButton" Content="!!!" Style="{StaticResource ErrorInfoToggleButtonStyle}" Foreground="{DynamicResource WarningColorBrush}"/>
                                                            <Popup IsOpen="{Binding IsChecked, ElementName=IfdDoOrderListInfoButton}" StaysOpen="False">
                                                                <Border Background="Red" CornerRadius="4" Padding="6" Width="250">
                                                                    <StackPanel>
                                                                        <TextBlock TextWrapping="Wrap">
                                                                    <Run Text="Error"></Run>
                                                                    <Run Text="{Binding Path=IfdDoErrorInfo.ErrorTitle}"></Run>
                                                                    <Run Text="{Binding Path=IfdDoErrorInfo.ErrorDescription}"></Run>
                                                                        </TextBlock>
                                                                    </StackPanel>
                                                                </Border>
                                                            </Popup>

                                                            <ToggleButton x:Name="OcoOtherOrderListInfoButton" Content="!!!" Style="{StaticResource ErrorInfoToggleButtonStyle}" Foreground="{DynamicResource WarningColorBrush}"/>
                                                            <Popup IsOpen="{Binding IsChecked, ElementName=OcoOtherOrderListInfoButton}" StaysOpen="False">
                                                                <Border Background="Red" CornerRadius="4" Padding="6" Width="250">
                                                                    <StackPanel>
                                                                        <TextBlock TextWrapping="Wrap">
                                                                            <Run Text="Error"></Run>
                                                                    <Run Text="{Binding Path=OcoOtherErrorInfo.ErrorTitle}"></Run>
                                                                    <Run Text="{Binding Path=OcoOtherErrorInfo.ErrorDescription}"></Run>
                                                                        </TextBlock>
                                                                    </StackPanel>
                                                                </Border>
                                                            </Popup>
                                                        </StackPanel>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding IfdDoHasError}" Value="true">
                                                                <Setter TargetName="IfdDoOrderListInfoButton" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IfdDoHasError}" Value="false">
                                                                <Setter TargetName="IfdDoOrderListInfoButton" Property="Visibility" Value="Hidden"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KindString}" Value="OCO">
                                                                <Setter TargetName="IfdDoOrderListInfoButton" Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOtherHasError}" Value="true">
                                                                <Setter TargetName="OcoOtherOrderListInfoButton" Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding OcoOtherHasError}" Value="false">
                                                                <Setter TargetName="OcoOtherOrderListInfoButton" Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>


                                        </GridView>
                                    </ListView.View>

                                </ListView>
                            
                            </Grid>

                        </Grid>

                    </TabItem>

                    <!-- 取引履歴 -->
                    <TabItem Header="{Binding TradeHistoryTitle}" Style="{StaticResource NoChromeTabHeader}" Background="Transparent" BorderThickness="0" Width="120" Padding="4">

                        <Grid>

                            <!-- 取引履歴APIキー設定画面 -->
                            <Border Width="360" Margin="3 0 0 6" HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="{Binding ShowTradeHistoryApiSet, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                <StackPanel>
                                    <Border BorderBrush="DimGray" BorderThickness="0 0 0 0.5" Margin="3" Padding="3">
                                        <Label Padding="0" Content="取引履歴取得用APIキー設定" Style="{DynamicResource SectionTitle}"/>
                                    </Border>
                                    <Popup IsOpen="{Binding IsChecked, ElementName=TradeHistoryAPIKeyInfoButton}" StaysOpen="False" PlacementTarget="{Binding ElementName=TradeHistoryAPIKeyInfoButton}" AllowsTransparency="True" PopupAnimation="Slide">
                                        <Border Background="WhiteSmoke" CornerRadius="4" Padding="6" Width="330" Height="210">
                                            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                                                <StackPanel>
                                                    <TextBlock Padding="6" TextWrapping="Wrap">
                                このアプリケーションは、Bitbank.cc が公開しているAPIを利用して注文や資産・注文一覧・取引履歴等の情報取得をしています。
                                                    </TextBlock>
                                                    <TextBlock Padding="6" TextWrapping="Wrap">
                                これらの機能を利用するには、Bitbankでアカウントを作成し、それぞれの機能ごとにAPIキーを発行して設定をしてください。設定画面でまとめて設定または変更することもできます。
                                                    </TextBlock>
                                                    <TextBlock Padding="6">
                                <Run Text="Bitbank ログイン:"></Run>
                                <Hyperlink NavigateUri="https://bitbank.cc/" RequestNavigate="Hyperlink_RequestNavigate">https://bitbank.cc/</Hyperlink>
                                                    </TextBlock>
                                                    <TextBlock Padding="6">
                                <Run Text="Bitbank API発行ページ:"></Run>
                                <Hyperlink NavigateUri="https://bitbank.cc/app/account/api" RequestNavigate="Hyperlink_RequestNavigate">https://bitbank.cc/app/account/api</Hyperlink>
                                                    </TextBlock>

                                                    <TextBlock Padding="6">
                                <Run Text="Bitbank FAQページ:"></Run>
                                <Hyperlink NavigateUri="https://bitbankcc.zendesk.com/hc/ja/articles/360005745194-API%E3%82%AD%E3%83%BC%E3%82%92%E7%99%BA%E8%A1%8C%E3%81%97%E3%81%9F%E3%81%84" RequestNavigate="Hyperlink_RequestNavigate">FAQ：APIキーを発行したい</Hyperlink>
                                                    </TextBlock>
                                                </StackPanel>
                                            </ScrollViewer>
                                        </Border>
                                    </Popup>
                                    <Grid Margin="12 6 6 6">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Label Grid.Row="0" Grid.Column="0" Content="APIキー (権限 [参照])：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                        <Label Grid.Row="1" Grid.Column="0" Content="APIシークレット：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                        <TextBox Grid.Row="0" Grid.Column="1" Margin="3" Text="{Binding TradeHistoryApiKey}"></TextBox>

                                        <TextBox Grid.Row="1" Grid.Column="1" Margin="3" Text="{Binding TradeHistorySecret}"></TextBox>

                                        <ToggleButton x:Name="TradeHistoryAPIKeyInfoButton" Grid.Row="0" Grid.Column="2" Content="?" Style="{StaticResource TooltipInfoToggleButtonStyle}"/>

                                        <Button Grid.Row="1" Grid.Column="2" Width="50" Margin="3" Command="{Binding SetTradeHistoryAPIKeyCommand}">設定</Button>

                                    </Grid>

                                </StackPanel>
                            </Border>

                            <!-- ロック中表示 -->
                            <Border Visibility="{Binding PublicApiOnlyMode, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                <StackPanel>

                                    <!-- ロック解除ボタン -->
                                    <Button Command="{Binding ShowLogInCommand}" Foreground="Gray" Background="Transparent" Style="{DynamicResource PathButton}" ToolTip="ロック解除(Ctrl+U)" ToolTipService.ToolTip="ロック解除(Ctrl+U)" Height="36" Width="36" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="6 24 0 0" Visibility="{Binding PublicApiOnlyMode, Mode=OneWay, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                        M18,20V10H6V20H18M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6C4.89,22 4,21.1 4,20V10A2,2 0 0,1 6,8H15V6A3,3 0 0,0 12,3A3,3 0 0,0 9,6H7A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18M12,17A2,2 0 0,1 10,15A2,2 0 0,1 12,13A2,2 0 0,1 14,15A2,2 0 0,1 12,17Z
                                    </Button>

                                </StackPanel>
                            </Border>

                            <Grid Visibility="{Binding ShowTradeHistory, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Grid x:Name="TDDummy" Grid.Row="0" Grid.Column="0" Visibility="Hidden" Margin="0 0 27 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="4*"/>
                                        <ColumnDefinition Width="4*"/>
                                        <ColumnDefinition Width="5*" MinWidth="80"/>
                                        <ColumnDefinition Width="3*" />
                                        <ColumnDefinition Width="3*" />
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="4*"/>
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="3*" />
                                    </Grid.ColumnDefinitions>

                                    <!--  This is the hidden helper Field which is used to bind to, using the "Fill" column of the helper grid  -->
                                    <Grid x:Name="TDwidth0" Grid.Column="0" />
                                    <Grid x:Name="TDwidth1" Grid.Column="1" />
                                    <Grid x:Name="TDwidth2" Grid.Column="2" />
                                    <Grid x:Name="TDwidth3" Grid.Column="3" />
                                    <Grid x:Name="TDwidth4" Grid.Column="4" />
                                    <Grid x:Name="TDwidth5" Grid.Column="5" />
                                    <Grid x:Name="TDwidth6" Grid.Column="6" />
                                    <Grid x:Name="TDwidth7" Grid.Column="7" />
                                    <Grid x:Name="TDwidth8" Grid.Column="8" />
                                    <Grid x:Name="TDwidth9" Grid.Column="9" />
                                </Grid>

                                <ListView x:Name="TradeHistoryListView" Grid.Row="1" Grid.Column="0" ItemsSource="{Binding ActivePair.Trades}" Background="{DynamicResource BoardBackgroundColorBrush}" IsSynchronizedWithCurrentItem="True" common:GridViewSort.AutoSort="True" common:GridViewSort.ShowSortGlyph="True" AlternationCount="2" MinHeight="80" BorderThickness="0" Padding="0 0 0 0" Margin="0 0 0 0" SelectionMode="Extended" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Visible">
                                    
                                    <ListView.Resources>
                                        <Style TargetType="{x:Type ScrollBar}">
                                            <Setter Property="Margin" Value="0,0,0,0" />
                                            <Setter Property="BorderThickness" Value="0" />
                                            <Style.Triggers>
                                                <Trigger Property="Orientation" Value="Vertical">
                                                    <Setter Property="Width" Value="18"/>
                                                    <Setter Property="Height" Value="Auto" />
                                                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ListView.Resources>
                                    
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem" BasedOn="{StaticResource ListViewItemStyle}">
                                            <Setter Property="Margin" Value="1 0 0 0"/>
                                            <Setter Property="Padding" Value="0 1 0 1"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                        </Style>
                                    </ListView.ItemContainerStyle>

                                    <ListView.View>
                                        <GridView>
                                            <GridView.ColumnHeaderContainerStyle>
                                                <Style TargetType="GridViewColumnHeader" BasedOn="{StaticResource GridViewColumnHeaderStyle}">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </Style>
                                            </GridView.ColumnHeaderContainerStyle>

                                            <GridViewColumn Header="取引ID" Width="{Binding ElementName=TDwidth0, Path=ActualWidth}" common:GridViewSort.PropertyName="TradeID">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding TradeID, Mode=OneWay}" Padding="3"/>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>

                                            <GridViewColumn Header="通貨ペア" Width="{Binding ElementName=TDwidth1, Path=ActualWidth}" common:GridViewSort.PropertyName="Pair">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Pair}" Padding="3" />
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>

                                            <GridViewColumn Header="注文ID" Width="{Binding ElementName=TDwidth2, Path=ActualWidth}" common:GridViewSort.PropertyName="OrderID">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding OrderID, Mode=OneWay}" Padding="3"/>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="注文日時" Width="{Binding ElementName=TDwidth3, Path=ActualWidth}" common:GridViewSort.PropertyName="ExecutedAt">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding ExecutedAt, Mode=OneWay, StringFormat=M/d HH:mm:ss}" Padding="3"/>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="売/買" Width="{Binding ElementName=TDwidth4, Path=ActualWidth}" common:GridViewSort.PropertyName="Side">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock x:Name="HistorySideText" Text="{Binding SideText, Mode=OneWay}" Padding="3"/>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding Side}" Value="buy">
                                                                <Setter TargetName="HistorySideText" Property="TextBlock.Foreground" Value="{DynamicResource PriceUpColorBrush}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Side}" Value="sell">
                                                                <Setter TargetName="HistorySideText" Property="TextBlock.Foreground" Value="{DynamicResource PriceDownColorBrush}"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="タイプ" Width="{Binding ElementName=TDwidth5, Path=ActualWidth}" common:GridViewSort.PropertyName="Type">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding TypeText, Mode=OneWay}" Padding="3"/>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="数量" Width="{Binding ElementName=TDwidth6, Path=ActualWidth}" common:GridViewSort.PropertyName="Amount">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Amount, Mode=OneWay, StringFormat=0.#############################}" Padding="3" />
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="価格" Width="{Binding ElementName=TDwidth7, Path=ActualWidth}" common:GridViewSort.PropertyName="Price">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Price, Mode=OneWay, StringFormat=0.#############################}" Padding="3" />
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="手数料" Width="{Binding ElementName=TDwidth8, Path=ActualWidth}" common:GridViewSort.PropertyName="FeeAmountQuote">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding FeeAmountQuote, Mode=OneWay}" Padding="3"/>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="M/T" Width="{Binding ElementName=TDwidth9, Path=ActualWidth}" common:GridViewSort.PropertyName="MakerTaker">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding MakerTaker, Mode=OneWay}" Padding="3"/>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>

                                        </GridView>
                                    </ListView.View>

                                </ListView>
                            
                            </Grid>

                        </Grid>

                    </TabItem>

                    <!-- エラー-->
                    <TabItem Header="{Binding ErrorsCountTitle}" Style="{StaticResource NoChromeTabHeader}" Background="Transparent" BorderThickness="0" Width="120" Padding="4">

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid x:Name="ErDummy" Grid.Row="0" Grid.Column="0" Visibility="Hidden" Margin="0 0 27 0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="96" MinWidth="96"/>
                                    <ColumnDefinition Width="80"/>
                                    <ColumnDefinition Width="80" />
                                    <ColumnDefinition Width="8*" />
                                    <ColumnDefinition Width="4*" />
                                    <ColumnDefinition Width="4*" />
                                    <ColumnDefinition Width="5*" />
                                </Grid.ColumnDefinitions>

                                <!--  This is the hidden helper Field which is used to bind to, using the "Fill" column of the helper grid  -->
                                <Grid x:Name="ERwidth0" Grid.Column="0" />
                                <Grid x:Name="ERwidth1" Grid.Column="1" />
                                <Grid x:Name="ERwidth2" Grid.Column="2" />
                                <Grid x:Name="ERwidth3" Grid.Column="3" />
                                <Grid x:Name="ERwidth4" Grid.Column="4" />
                                <Grid x:Name="ERwidth5" Grid.Column="5" />
                                <Grid x:Name="ERwidth6" Grid.Column="6" />
                            </Grid>

                            <ListView x:Name="ErrorsListView" Grid.Row="1" Grid.Column="0" ItemsSource="{Binding Errors}" Background="{DynamicResource BoardBackgroundColorBrush}" IsSynchronizedWithCurrentItem="True" common:GridViewSort.AutoSort="True" common:GridViewSort.ShowSortGlyph="True" AlternationCount="2" MinHeight="80" BorderThickness="0" Padding="0 0 0 0" Margin="0 0 0 0" SelectionMode="Extended" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Visible">
                                <ListView.Resources>
                                    <Style TargetType="{x:Type ScrollBar}">
                                        <Setter Property="Margin" Value="0,0,0,0" />
                                        <Setter Property="BorderThickness" Value="0" />
                                        <Style.Triggers>
                                            <Trigger Property="Orientation" Value="Vertical">
                                                <Setter Property="Width" Value="18"/>
                                                <Setter Property="Height" Value="Auto" />
                                                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListView.Resources>
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem" BasedOn="{StaticResource ListViewItemStyle}">
                                        <Setter Property="Margin" Value="1 0 0 0"/>
                                        <Setter Property="Padding" Value="0 1 0 1"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    </Style>
                                </ListView.ItemContainerStyle>

                                <ListView.View>
                                    <GridView>
                                        <GridView.ColumnHeaderContainerStyle>
                                            <Style TargetType="GridViewColumnHeader" BasedOn="{StaticResource GridViewColumnHeaderStyle}">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </Style>
                                        </GridView.ColumnHeaderContainerStyle>

                                        <GridViewColumn Header="発生日時" Width="{Binding ElementName=ERwidth0, Path=ActualWidth}" common:GridViewSort.PropertyName="ErrDatetime">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding ErrDatetime, Mode=OneWay, StringFormat=MM/dd HH:mm:ss}" Padding="3"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="タイプ" Width="{Binding ElementName=ERwidth1, Path=ActualWidth}" common:GridViewSort.PropertyName="ErrType">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding ErrType, Mode=OneWay}" Padding="3"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="エラーコード" Width="{Binding ElementName=ERwidth2, Path=ActualWidth}" common:GridViewSort.PropertyName="ErrCode">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding ErrCode, Mode=OneWay}" Padding="3"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="エラー内容" Width="{Binding ElementName=ERwidth3, Path=ActualWidth}" common:GridViewSort.PropertyName="ErrText">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding ErrText, Mode=OneWay}" Padding="3"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="処理名" Width="{Binding ElementName=ERwidth4, Path=ActualWidth}" common:GridViewSort.PropertyName="ErrPlaceParent">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding ErrPlaceParent, Mode=OneWay}" Padding="3"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="発生場所" Width="{Binding ElementName=ERwidth5, Path=ActualWidth}" common:GridViewSort.PropertyName="ErrPlace">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding ErrPlace, Mode=OneWay}" Padding="3"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="補足" Width="{Binding ElementName=ERwidth6, Path=ActualWidth}" common:GridViewSort.PropertyName="ErrEx">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding ErrEx, Mode=OneWay}" Padding="3" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>

                            </ListView>
                        
                        </Grid>

                    </TabItem>

                </TabControl>

            </Border>

            <!-- ログイン画面 -->
            <Grid Grid.Row="1" Grid.Column="0" Grid.RowSpan="3" Grid.ColumnSpan="9" Visibility="{Binding ShowLogIn, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">

                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="#121212" Opacity="0.8"></Rectangle>

                <!-- 通常ログイン -->
                <Border HorizontalAlignment="Center" VerticalAlignment="Center" CornerRadius="4" BorderBrush="{DynamicResource BorderDarkColorBrush}" BorderThickness="2" Background="{DynamicResource BoardBackgroundColorBrush}" Visibility="{Binding IsPasswordSet, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                    <Grid Margin="6 6 9 6">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Margin="0 0 0 12" BorderBrush="Gray" BorderThickness="0 0 0 0.5">
                            <Label Style="{DynamicResource SectionTitle}" Content="ロックの解除" />
                        </Border>

                        <Label Grid.Row="1" Grid.Column="0" Padding="3" VerticalAlignment="Center" Content="パスワード：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                        <PasswordBox x:Name="PasswordBox" Grid.Row="1" Grid.Column="1" Width="124" Padding="1.5" Margin="0 0 6 0" VerticalAlignment="Center" PasswordChar="*" Tag="{Binding Password}" PasswordChanged="PasswordBox_PasswordChanged" IsVisibleChanged="PasswordBox_IsVisibleChanged" Style="{DynamicResource DefaultPasswordBoxStyle}">
                        </PasswordBox>

                        <TextBlock Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Margin="0 3 0 6" Width="194" Text="{Binding LogInErrorInfo}" Style="{StaticResource ErrorInfoTextBlockStyle}" HorizontalAlignment="Center"></TextBlock>

                        <Button Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="1" Content="ロック解除" Command="{Binding LogInCommand}" CommandParameter="{Binding ElementName=PasswordBox}" Padding="3 1 3 1" Margin="0 6 6 6" IsDefault="True" VerticalAlignment="Center" HorizontalAlignment="Right"/>

                    </Grid>
                </Border>

                <!-- パスワード設定、初回ログイン画面 -->
                <Border HorizontalAlignment="Center" VerticalAlignment="Center" CornerRadius="4" Background="#212121" Visibility="{Binding ShowPasswordSet, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">

                    <Grid Margin="6 6 9 0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="24"/>
                            <RowDefinition Height="12"/>
                            <RowDefinition Height="24"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="48"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Margin="0 0 0 12" BorderBrush="Gray" BorderThickness="0 0 0 0.5">
                            <Label Style="{StaticResource SectionTitle}" Content="パスワードロックの設定" />
                        </Border>

                        <Label Grid.Row="1" Grid.Column="0" Padding="3" VerticalAlignment="Center" Content="新規パスワード："></Label>
                        <PasswordBox x:Name="PasswordBoxNew" Grid.Row="1" Grid.Column="1" Width="124" Padding="1.5" VerticalAlignment="Center" PasswordChar="*" IsVisibleChanged="PasswordBoxNew_IsVisibleChanged" Style="{DynamicResource DefaultPasswordBoxStyle}"></PasswordBox>

                        <Label Grid.Row="3" Grid.Column="0" Padding="3 6 3 3" VerticalAlignment="Center" Content="パスワード確認："></Label>
                        <PasswordBox x:Name="PasswordBoxComfirm" Grid.Row="3" Grid.Column="1" Width="124" Padding="1.5" VerticalAlignment="Center" PasswordChar="*" Style="{DynamicResource DefaultPasswordBoxStyle}"></PasswordBox>

                        <TextBlock Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" Margin="0 12 0 6" TextWrapping="Wrap" Height="100" Width="194">
                        <Run Foreground="LightGray">
                            取引や資産情報取得をするために、まずパスワードによるロックを設定してください。
                        </Run>
                        <LineBreak />
                        <LineBreak />
                        <Run Foreground="LightGray">
                            設定するパスワードは任意ですが、半角英数文字でお願いします。大文字・小文字は区別されます。
                        </Run>
                        </TextBlock>

                        <TextBlock Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3" Margin="0 3 0 6" Width="194" Text="{Binding LogInErrorInfo}" Style="{StaticResource ErrorInfoTextBlockStyle}" HorizontalAlignment="Center"></TextBlock>

                        <Button Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="1" Command="{Binding NewLogInPasswordCommand}" Content="パスワードのセット" Padding="3 1 3 1" Margin="0 6 12 6" IsDefault="True" VerticalAlignment="Center" HorizontalAlignment="Right">
                            <Button.CommandParameter>
                                <MultiBinding Converter="{StaticResource MultipleCommandParameterConverter}">
                                    <Binding ElementName="PasswordBoxNew" />
                                    <Binding ElementName="PasswordBoxComfirm" />
                                </MultiBinding>
                            </Button.CommandParameter>
                        </Button>

                    </Grid>

                </Border>

            </Grid>

        </Grid>

        <!-- 設定画面 -->
        <Grid x:Name="settings" Grid.Row="1" Grid.Column="0" Grid.RowSpan="3" Grid.ColumnSpan="9" Visibility="{Binding ShowSettings, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TabControl Grid.Row="1" TabStripPlacement="Left" BorderThickness="0" Margin="0" Style="{DynamicResource SettingsTabControlStyle}" Background="{DynamicResource WindowBackgroundColorBrush}" >

                <!-- 全般 -->
                <TabItem Width="100" Height="48" Style="{DynamicResource SettingsTabItemStyle}" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TabItem.Header>
                        <Label Content="全般" Foreground="{Binding RelativeSource={RelativeSource AncestorType=TabItem}, Path=Foreground}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></Label>
                    </TabItem.Header>

                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" VerticalAlignment="Top" Padding="12" Style="{DynamicResource CustomScrollViewerStyle}">

                        <StackPanel>

                            <Border BorderBrush="DimGray" BorderThickness="0 0 0 0.5" Margin="3" Padding="3">
                                <Label Padding="0" Content="このアプリケーションについて" Style="{DynamicResource SectionTitle}"/>
                            </Border>

                            <TextBlock Padding="6" TextWrapping="Wrap" Style="{DynamicResource DefaultTextBlockStyle}">
                                このアプリケーションは、ビットバンク（https://bitbank.cc/） が公開しているAPIとデータを利用しています。取引をするには、Bitbankでアカウントを作成し、APIキーの設定をする必要があります。開発者はビットバンク株式会社とは無関係のいちビットバンク利用者です。
                            </TextBlock>

                            <TextBlock Padding="6" Style="{DynamicResource DefaultTextBlockStyle}">
                                <Run Text="Bitbank :"></Run>
                                <Hyperlink NavigateUri="https://bitbank.cc/" RequestNavigate="Hyperlink_RequestNavigate">https://bitbank.cc/</Hyperlink>
                            </TextBlock>

                            <TextBlock Padding="6" Style="{DynamicResource DefaultTextBlockStyle}">
                                <Run Text="Bitbank API発行ページ:"></Run>
                                <Hyperlink NavigateUri="https://bitbank.cc/app/account/api" RequestNavigate="Hyperlink_RequestNavigate">https://bitbank.cc/app/account/api</Hyperlink>
                            </TextBlock>

                            <Border BorderBrush="DimGray" BorderThickness="0 0 0 0.5" Margin="3" Padding="3">
                                <Label Padding="0" Content="プライバシーについて" Style="{DynamicResource SectionTitle}"/>
                            </Border>
                            <TextBlock Padding="6" TextWrapping="Wrap" Style="{DynamicResource DefaultTextBlockStyle}">
                                本アプリケーションは、アプリケーション状態を保存しチャート関係のデータを取得する以外、個人情報を含む一切の情報を収集・保存及び送信することはありません。登録したBitbankのAPIキー等の情報は、暗号化してBitbankのサーバーへのみ送信され、それ以外へは一切送信されません。
                            </TextBlock>

                            <Border BorderBrush="DimGray" BorderThickness="0 0 0 0.5" Margin="3" Padding="3">
                                <Label Padding="0" Content="免責" Style="{DynamicResource SectionTitle}"/>
                            </Border>
                            <TextBlock Padding="6" TextWrapping="Wrap" Style="{DynamicResource DefaultTextBlockStyle}">
                                開発する上で、間違いのないように作っていますが、万が一不具合等で損害が発生しても、開発者はいかなる責任もとれませんので、ご承知おきください。もし不具合や改善点などありましたら、ご連絡いただければと思います。
                            </TextBlock>

                            <Border BorderBrush="DimGray" BorderThickness="0 0 0 0.5" Margin="3" Padding="3">
                                <Label Padding="0" Content="ウェブサイト" Style="{DynamicResource SectionTitle}"/>
                            </Border>
                            <TextBlock Padding="6" Style="{DynamicResource DefaultTextBlockStyle}">
                                <Run Text=""></Run>
                                <Hyperlink NavigateUri="https://torum.github.io/BitDesk/" RequestNavigate="Hyperlink_RequestNavigate">https://torum.github.io/BitDesk/</Hyperlink>
                            </TextBlock>
                            
                            <Border BorderBrush="DimGray" BorderThickness="0 0 0 0.5" Margin="3" Padding="3">
                                <Label Padding="0" Content="バージョン" Style="{DynamicResource SectionTitle}"/>
                            </Border>

                            <TextBlock Padding="6" TextWrapping="Wrap" Style="{DynamicResource DefaultTextBlockStyle}" Text="{Binding AppVer}">
                            </TextBlock>
                            <!--
                            <Border BorderBrush="DimGray" BorderThickness="0 0 0 0.5" Margin="3" Padding="3">
                                <Label Padding="0" Content="更新情報（Twitter）" Style="{DynamicResource SectionTitle}"/>
                            </Border>
                            <TextBlock Padding="6" Style="{DynamicResource DefaultTextBlockStyle}">
                                <Run Text=""></Run>
                                <Hyperlink NavigateUri="https://twitter.com/torum_apps" RequestNavigate="Hyperlink_RequestNavigate">https://twitter.com/torum_apps</Hyperlink>
                            </TextBlock>
-->
                        </StackPanel>

                    </ScrollViewer>

                </TabItem>

                <!-- アラーム -->
                <TabItem Width="100" Height="48" Style="{StaticResource SettingsTabItemStyle}">
                    <TabItem.Header>
                        <Label Content="アラーム" Foreground="{Binding RelativeSource={RelativeSource AncestorType=TabItem}, Path=Foreground}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></Label>
                    </TabItem.Header>

                    <Grid Margin="12">
                        <StackPanel>
                            <Border BorderBrush="DimGray" BorderThickness="0 0 0 0.5" Margin="3" Padding="3">
                                <Label Padding="0" Content="アラーム音の設定" Style="{DynamicResource SectionTitle}"/>
                            </Border>

                            <Grid Margin="12">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <CheckBox Grid.Row="1" Grid.Column="0" Margin="3" Content="アラーム音を鳴らす" IsChecked="{Binding PlaySound}" Style="{DynamicResource DefaultCheckBoxStyle}"></CheckBox>

                            </Grid>
                        </StackPanel>
                    </Grid>
                </TabItem>

                <!-- ロック -->
                <TabItem Width="100" Height="48" Style="{StaticResource SettingsTabItemStyle}">
                    <TabItem.Header>
                        <Label Content="ロック" Foreground="{Binding RelativeSource={RelativeSource AncestorType=TabItem}, Path=Foreground}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></Label>
                    </TabItem.Header>

                    <Grid Margin="12">
                        <!-- ロック中の場合 -->
                        <Border Grid.Row="0" Grid.Column="0" Margin="3 0 0 6" Visibility="{Binding PublicApiOnlyMode, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                            <StackPanel>
                                <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" BorderBrush="DimGray" BorderThickness="0 0 0 0.5" Margin="3" Padding="3">
                                    <Label Padding="0" Content="パスワードロックの変更" Style="{DynamicResource SectionTitle}"/>
                                </Border>

                                <TextBlock Padding="6" TextWrapping="Wrap" Style="{DynamicResource DefaultTextBlockStyle}">
                                現在ロックされています。
                                </TextBlock>
                                <TextBlock Padding="6" TextWrapping="Wrap" Style="{DynamicResource DefaultTextBlockStyle}">
                                下記の鍵ボタンを押し、ロックを解除してから再度お試しください。
                                </TextBlock>
                                <Button Command="{Binding ShowLogInCommand}" Foreground="Gray" Background="Transparent" Style="{DynamicResource PathButton}" ToolTip="ロック解除(Ctrl+U)" ToolTipService.ToolTip="ロック解除(Ctrl+U)" Height="48" Width="48" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="6 24 0 0" Visibility="{Binding PublicApiOnlyMode, Mode=OneWay, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                    M18,20V10H6V20H18M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6C4.89,22 4,21.1 4,20V10A2,2 0 0,1 6,8H15V6A3,3 0 0,0 12,3A3,3 0 0,0 9,6H7A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18M12,17A2,2 0 0,1 10,15A2,2 0 0,1 12,13A2,2 0 0,1 14,15A2,2 0 0,1 12,17Z
                                </Button>

                            </StackPanel>
                        </Border>

                        <Border Grid.Row="0" Grid.Column="0" Margin="3 0 0 6" Visibility="{Binding LoggedInMode, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                            <StackPanel>
                                <Border BorderBrush="DimGray" BorderThickness="0 0 0 0.5" Margin="3" Padding="3">
                                    <Label Padding="0" Content="パスワードロックの変更" Style="{DynamicResource SectionTitle}"/>
                                </Border>

                                <Grid Margin="6 6 9 0" Width="240" HorizontalAlignment="Left">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="24"/>
                                        <RowDefinition Height="12"/>
                                        <RowDefinition Height="24"/>
                                        <RowDefinition Height="12"/>
                                        <RowDefinition Height="24"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="48"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Row="0" Grid.Column="0" Padding="3" VerticalAlignment="Center" Content="現在のパスワード：" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                    <PasswordBox x:Name="PasswordBoxChangeOld" Grid.Row="0" Grid.Column="1" Width="124" Padding="1.5" VerticalAlignment="Center" PasswordChar="*" Style="{DynamicResource DefaultPasswordBoxStyle}"></PasswordBox>


                                    <Label Grid.Row="2" Grid.Column="0" Padding="3" VerticalAlignment="Center" Content="新規パスワード：" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                    <PasswordBox x:Name="PasswordBoxChangeNew" Grid.Row="2" Grid.Column="1" Width="124" Padding="1.5" VerticalAlignment="Center" PasswordChar="*" Style="{DynamicResource DefaultPasswordBoxStyle}"></PasswordBox>

                                    <Label Grid.Row="4" Grid.Column="0" Padding="3 6 3 3" VerticalAlignment="Center" Content="パスワード確認：" Style="{DynamicResource DefaultLabelStyle}"></Label>
                                    <PasswordBox x:Name="PasswordBoxChangeComfirm" Grid.Row="4" Grid.Column="1" Width="124" Padding="1.5" VerticalAlignment="Center" PasswordChar="*" Style="{DynamicResource DefaultPasswordBoxStyle}"></PasswordBox>

                                    <TextBlock Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3" Margin="0 12 0 6" TextWrapping="Wrap" Height="55" Width="194" Style="{DynamicResource DefaultTextBlockStyle}">

                        <Run Style="{DynamicResource DefaultRunStyle}">
                            設定するパスワードは任意ですが、半角英数文字でお願いします。大文字・小文字は区別されます。
                        </Run>
                                    </TextBlock>

                                    <TextBlock Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="3" Margin="0 3 0 6" Width="194" Text="{Binding LogInErrorInfo}" Style="{StaticResource ErrorInfoTextBlockStyle}" HorizontalAlignment="Center"></TextBlock>

                                    <TextBlock Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="3" Margin="0 3 0 6" Width="194" Text="{Binding ChangePasswordResultInfo}" Style="{StaticResource DefaultTextBlockStyle}" HorizontalAlignment="Center"></TextBlock>

                                    <Button Grid.Row="8" Grid.Column="1" Grid.ColumnSpan="1" Command="{Binding ChangeLogInPasswordCommand}" Content="パスワードの変更" Padding="3 1 3 1" Margin="0 6 0 6" IsDefault="True" VerticalAlignment="Center" HorizontalAlignment="Right">
                                        <Button.CommandParameter>
                                            <MultiBinding Converter="{StaticResource MultipleCommandParameterConverter}">
                                                <Binding ElementName="PasswordBoxChangeOld" />
                                                <Binding ElementName="PasswordBoxChangeNew" />
                                                <Binding ElementName="PasswordBoxChangeComfirm" />
                                            </MultiBinding>
                                        </Button.CommandParameter>
                                    </Button>

                                </Grid>


                            </StackPanel>
                        </Border>

                    </Grid>
                </TabItem>

                <!-- APIキー -->
                <TabItem Width="100" Height="48" Style="{StaticResource SettingsTabItemStyle}">
                    <TabItem.Header>
                        <Label Content="APIキー" Foreground="{Binding RelativeSource={RelativeSource AncestorType=TabItem}, Path=Foreground}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></Label>
                    </TabItem.Header>
                    <Grid Margin="12">

                        <!-- ロック中の場合 -->
                        <Border Grid.Row="0" Grid.Column="0" Margin="3 0 0 6" Visibility="{Binding PublicApiOnlyMode, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                            <StackPanel>
                                <Border BorderBrush="DimGray" BorderThickness="0 0 0 0.5" Margin="3" Padding="3">
                                    <Label Padding="0" Content="APIキーの設定・変更" Style="{DynamicResource SectionTitle}"/>
                                </Border>

                                <TextBlock Padding="6" TextWrapping="Wrap">
                                現在ロックされています。
                                </TextBlock>
                                <TextBlock Padding="6" TextWrapping="Wrap">
                                下記の鍵ボタンを押し、ロックを解除してから再度お試しください。
                                </TextBlock>
                                <Button Command="{Binding ShowLogInCommand}" Foreground="Gray" Background="Transparent" Style="{DynamicResource PathButton}" ToolTip="ロック解除(Ctrl+U)" ToolTipService.ToolTip="ロック解除(Ctrl+U)" Height="48" Width="48" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="6 24 0 0" Visibility="{Binding PublicApiOnlyMode, Mode=OneWay, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                    M18,20V10H6V20H18M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6C4.89,22 4,21.1 4,20V10A2,2 0 0,1 6,8H15V6A3,3 0 0,0 12,3A3,3 0 0,0 9,6H7A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18M12,17A2,2 0 0,1 10,15A2,2 0 0,1 12,13A2,2 0 0,1 14,15A2,2 0 0,1 12,17Z
                                </Button>

                            </StackPanel>
                        </Border>

                        <!-- APIロック中の場合 -->
                        <Border Grid.Row="0" Grid.Column="0" Margin="3 0 0 6" Visibility="{Binding ShowApiKeyLock, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                            <StackPanel>
                                <Border BorderBrush="DimGray" BorderThickness="0 0 0 0.5" Margin="3" Padding="3">
                                    <Label Padding="0" Content="APIキーの設定・変更" Style="{DynamicResource SectionTitle}"/>
                                </Border>

                                <TextBlock Padding="6" TextWrapping="Wrap" Style="{DynamicResource DefaultTextBlockStyle}">
                                APIキーを表示するにはロック解除用のパスワードを入力してください。
                                </TextBlock>

                                <Grid Margin="6 6 9 6">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Row="1" Grid.Column="0" Padding="3" VerticalAlignment="Center" Content="パスワード：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                    <PasswordBox x:Name="PasswordBoxForApiKey" Grid.Row="1" Grid.Column="1" Width="124" Padding="1.5" Margin="0 0 6 0" VerticalAlignment="Center" PasswordChar="*" Tag="{Binding Password}" Style="{DynamicResource DefaultPasswordBoxStyle}">
                                    </PasswordBox>

                                    <TextBlock Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Margin="0 3 0 6" Width="194" Text="{Binding LogInErrorInfo}" Style="{StaticResource ErrorInfoTextBlockStyle}" HorizontalAlignment="Left"></TextBlock>

                                    <Button Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="1" Content="ロック解除" Command="{Binding ShowApiKeyCommand}" CommandParameter="{Binding ElementName=PasswordBoxForApiKey}" Padding="3 1 3 1" Margin="0 6 6 6" IsDefault="True" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                                </Grid>

                            </StackPanel>
                        </Border>

                        <Border Grid.Row="0" Grid.Column="0" Margin="3 0 0 6" Visibility="{Binding ShowApiKey, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">

                            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Style="{StaticResource CustomScrollViewerStyle}" VerticalAlignment="Top">

                                <StackPanel>
                                    <Border BorderBrush="DimGray" BorderThickness="0 0 0 0.5" Margin="3" Padding="3">
                                        <Label Padding="0" Content="APIキーの設定・変更" Style="{DynamicResource SectionTitle}"/>
                                    </Border>

                                    <TextBlock Padding="6" TextWrapping="Wrap" Style="{DynamicResource DefaultTextBlockStyle}">
                                このアプリケーションは、Bitbank.cc が公開しているAPIを利用して注文や資産・注文一覧・取引履歴等の情報取得をしています。これらの機能を利用するには、Bitbankでアカウントを作成し、それぞれの機能ごとにAPIキーを発行して、ここで設定をしてください。
                                    </TextBlock>

                                    <TextBlock Padding="6" Style="{DynamicResource DefaultTextBlockStyle}">
                                <Run Text="Bitbank ログイン:" Style="{DynamicResource DefaultRunStyle}"></Run>
                                <Hyperlink NavigateUri="https://bitbank.cc/" RequestNavigate="Hyperlink_RequestNavigate">https://bitbank.cc/</Hyperlink>
                                    </TextBlock>
                                    <TextBlock Padding="6" Style="{DynamicResource DefaultTextBlockStyle}">
                                <Run Text="Bitbank API発行ページ:" Style="{DynamicResource DefaultRunStyle}"></Run>
                                <Hyperlink NavigateUri="https://bitbank.cc/app/account/api" RequestNavigate="Hyperlink_RequestNavigate">https://bitbank.cc/app/account/api</Hyperlink>
                                    </TextBlock>

                                    <TextBlock Padding="6" Style="{DynamicResource DefaultTextBlockStyle}">
                                <Run Text="Bitbank FAQページ:" Style="{DynamicResource DefaultRunStyle}"></Run>
                                <Hyperlink NavigateUri="https://bitbankcc.zendesk.com/hc/ja/articles/360005745194-API%E3%82%AD%E3%83%BC%E3%82%92%E7%99%BA%E8%A1%8C%E3%81%97%E3%81%9F%E3%81%84" RequestNavigate="Hyperlink_RequestNavigate">FAQ：APIキーを発行したい</Hyperlink>
                                    </TextBlock>

                                    <Border BorderBrush="Gainsboro" BorderThickness="0 0 0 0.5" Margin="3"></Border>

                                    <Grid Margin="6 6 9 12" HorizontalAlignment="Stretch">

                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal">
                                            <Label Content="保有資産情報の取得用：" Style="{DynamicResource SectionTitle}"></Label>
                                            <Label Content="権限" Style="{DynamicResource SectionTitle}"></Label>
                                            <TextBlock Style="{DynamicResource DefaultTextBlockStyle}" VerticalAlignment="Center"><Run Foreground="Orange" FontWeight="Bold" Style="{DynamicResource DefaultRunStyle}">[参照]</Run></TextBlock>
                                        </StackPanel>


                                        <Label Grid.Row="1" Grid.Column="0" Content="APIキー：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                        <Label Grid.Row="2" Grid.Column="0" Content="APIシークレット：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                        <TextBox Grid.Row="1" Grid.Column="1" Margin="3" Text="{Binding AssetsApiKey}"></TextBox>

                                        <TextBox Grid.Row="2" Grid.Column="1" Margin="3" Text="{Binding AssetsApiSecret}"></TextBox>

                                    </Grid>

                                    <Grid Margin="6 6 9 12" HorizontalAlignment="Stretch">

                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal">
                                            <Label Content="注文用：" Style="{DynamicResource SectionTitle}"></Label>
                                            <Label Content="権限" Style="{DynamicResource SectionTitle}"></Label>
                                            <TextBlock Style="{DynamicResource DefaultTextBlockStyle}" VerticalAlignment="Center"><Run Foreground="Orange" FontWeight="Bold" Style="{DynamicResource DefaultRunStyle}">[参照] [取引]</Run></TextBlock>
                                        </StackPanel>

                                        <Label Grid.Row="1" Grid.Column="0" Content="APIキー：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                        <Label Grid.Row="2" Grid.Column="0" Content="APIシークレット：" Style="{DynamicResource DefaultLabelStyle}"/>

                                        <TextBox Grid.Row="1" Grid.Column="1" Margin="3" Text="{Binding ManualTradeApiKey}"></TextBox>

                                        <TextBox Grid.Row="2" Grid.Column="1" Margin="3" Text="{Binding ManualTradeSecret}"></TextBox>

                                    </Grid>

                                    <Grid Margin="6 6 9 12" HorizontalAlignment="Stretch">

                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal">
                                            <Label Content="注文一覧取得用：" Style="{DynamicResource SectionTitle}"></Label>
                                            <Label Content="権限" Style="{DynamicResource SectionTitle}"></Label>
                                            <TextBlock Style="{DynamicResource DefaultTextBlockStyle}" VerticalAlignment="Center"><Run Foreground="Orange" FontWeight="Bold" Style="{DynamicResource DefaultRunStyle}">[参照]</Run></TextBlock>
                                        </StackPanel>

                                        <Label Grid.Row="1" Grid.Column="0" Content="APIキー：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                        <Label Grid.Row="2" Grid.Column="0" Content="APIシークレット：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                        <TextBox Grid.Row="1" Grid.Column="1" Margin="3" Text="{Binding OrdersApiKey}"></TextBox>

                                        <TextBox Grid.Row="2" Grid.Column="1" Margin="3" Text="{Binding OrdersSecret}"></TextBox>

                                    </Grid>

                                    <Grid Margin="6 6 9 12" HorizontalAlignment="Stretch" Visibility="{Binding BetaMode, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">

                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal">
                                            <Label Content="特殊注文用：" Style="{DynamicResource SectionTitle}"></Label>
                                            <Label Content="権限" Style="{DynamicResource SectionTitle}"></Label>
                                            <TextBlock Style="{DynamicResource DefaultTextBlockStyle}" VerticalAlignment="Center"><Run Foreground="Orange" FontWeight="Bold" Style="{DynamicResource DefaultRunStyle}">[参照] [取引]</Run></TextBlock>
                                        </StackPanel>

                                        <Label Grid.Row="1" Grid.Column="0" Content="APIキー：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                        <Label Grid.Row="2" Grid.Column="0" Content="APIシークレット：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                        <TextBox Grid.Row="1" Grid.Column="1" Margin="3" Text="{Binding IfdocoTradeApiKey}"></TextBox>

                                        <TextBox Grid.Row="2" Grid.Column="1" Margin="3" Text="{Binding IfdocoTradeSecret}"></TextBox>

                                    </Grid>

                                    <Grid Margin="6 6 9 12" HorizontalAlignment="Stretch">

                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal">
                                            <Label Content="取引履歴取得用：" Style="{DynamicResource SectionTitle}"></Label>
                                            <Label Content="権限" Style="{DynamicResource SectionTitle}"></Label>
                                            <TextBlock Style="{DynamicResource DefaultTextBlockStyle}" VerticalAlignment="Center"><Run Foreground="Orange" FontWeight="Bold" Style="{DynamicResource DefaultRunStyle}">[参照]</Run></TextBlock>
                                        </StackPanel>

                                        <Label Grid.Row="1" Grid.Column="0" Content="APIキー：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                        <Label Grid.Row="2" Grid.Column="0" Content="APIシークレット：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                        <TextBox Grid.Row="1" Grid.Column="1" Margin="3" Text="{Binding TradeHistoryApiKey}"></TextBox>

                                        <TextBox Grid.Row="2" Grid.Column="1" Margin="3" Text="{Binding TradeHistorySecret}"></TextBox>

                                    </Grid>
<!--
                                    <Grid Margin="6 6 9 12" HorizontalAlignment="Stretch" Visibility="{Binding ExperimentalMode, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">

                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal">
                                            
                                        </StackPanel>

                                        <Label Grid.Row="1" Grid.Column="0" Content="APIキー：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                        <Label Grid.Row="2" Grid.Column="0" Content="APIシークレット：" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                        <TextBox Grid.Row="1" Grid.Column="1" Margin="3" Text="{Binding AutoTradeApiKey}"></TextBox>

                                        <TextBox Grid.Row="2" Grid.Column="1" Margin="3" Text="{Binding AutoTradeSecret}"></TextBox>

                                    </Grid>
-->

                                </StackPanel>

                            </ScrollViewer>
                        </Border>

                    </Grid>

                </TabItem>

                <!-- ライセンス -->
                <TabItem Width="100" Height="48" Style="{DynamicResource SettingsTabItemStyle}" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TabItem.Header>
                        <Label Content="ライセンス" Foreground="{Binding RelativeSource={RelativeSource AncestorType=TabItem}, Path=Foreground}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></Label>
                    </TabItem.Header>

                    <TabControl Margin="12">
                        <TabControl.Resources>
                            <Style x:Key="LicenseTabFocusVisualStyle">
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="1" StrokeThickness="1" StrokeDashArray="1 2" Stroke="{DynamicResource ControlMediumColorBrush}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            
                            <Style TargetType="{x:Type TabControl}">
                                <Setter Property="OverridesDefaultStyle" Value="False" />
                                <Setter Property="Foreground" Value="{DynamicResource NormalTextColorBrush}" />
                                <Setter Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}"/>
                                <Setter Property="BorderThickness" Value="0"/>
                            </Style>
                            <Style x:Key="LicenseTabItemStyle" TargetType="{x:Type TabItem}">
                                <Setter Property="OverridesDefaultStyle" Value="False" />
                                <Setter Property="FocusVisualStyle" Value="{StaticResource LicenseTabFocusVisualStyle}"/>
                                <Setter Property="Foreground" Value="{DynamicResource ControlDarkColorBrush}" />
                                <Setter Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}"/>
                                <Setter Property="BorderThickness" Value="0 0 0 2"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TabItem}">

                                            <Border Name="HeaderBorder" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Padding="{TemplateBinding Padding}" HorizontalAlignment="Center" CornerRadius="0">
                                                <ContentPresenter x:Name="ContentSite" HorizontalAlignment="Center" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" />
                                            </Border>

                                            <ControlTemplate.Triggers>

                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Foreground" Value="{DynamicResource TitleTextColorBrush}" />
                                                    <Setter TargetName="HeaderBorder" Property="BorderBrush" Value="{DynamicResource ControlLightColorBrush}" />
                                                    <Setter TargetName="HeaderBorder" Property="BorderThickness" Value="0 0 0 2"/>
                                                </Trigger>

                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="{DynamicResource TitleTextColorBrush}" />
                                                    <Setter TargetName="HeaderBorder" Property="BorderBrush" Value="{DynamicResource ControlDarkColorBrush}" />
                                                    <Setter TargetName="HeaderBorder" Property="BorderThickness" Value="0 0 0 2"/>
                                                </Trigger>

                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Background" Value="gray" />
                                                    <Setter Property="BorderBrush" Value="#FFC9C7BA" />
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TabControl.Resources>

                        <TabItem Style="{DynamicResource LicenseTabItemStyle}">
                            <TabItem.Header>
                                <Label Content="使用許諾契約書 (EULA)" Style="{DynamicResource SectionTitle}" Padding="6" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></Label>
                            </TabItem.Header>

                            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" VerticalAlignment="Top" Padding="6" Style="{DynamicResource CustomScrollViewerStyle}">

                                <TextBlock TextWrapping="Wrap" Padding="6" Style="{DynamicResource DefaultTextBlockStyle}">
ソフトウェアの使用許諾書
    <LineBreak/>
    <LineBreak/>                            
第１条 （本契約の成立）<LineBreak/>
ご利用者（甲）が、本ソフトウェアの使用もしくはインストールを行った時点で、本契約書記載の内容に同意いただいたものとみなし、本ソフトウェアの開発者（以下開発者、乙）もしくは開発者が再使用許諾権を付与した者（以下あわせて「開発者」といいます）
との間で、本契約が有効に成立するものといたします。
                                <LineBreak/><LineBreak/>
第２条 （使用許諾）<LineBreak/>
1. ご利用者は、無償で本ソフトウェアを、日本国内において、個人としての使用に限定して、無料で使用することができま
す。
                                <LineBreak/>
2. ご利用者は、本ソフトウェアを改変したり、再発布することはできません。
                                <LineBreak/>
3. ご利用者は、本条項に基づき本ソフトウェアの使用権のみを取得し、本ソフトウェアの著作権、所有権その他のいかなる権利も取得しません。
                                <LineBreak/>
4. 本契約はご利用者に対し、本ソフトウェアの改訂版(アドオンパック)、変更、機能強化、サービスパック、またはその他のサポートサービスを受ける権利を付与するものではありません。
                                <LineBreak/>
5. ご利用者は、本ソフトウェアを、直接的、間接的を問わず、日本国、米国およびその他の国の全ての法律・規則に違反して輸出してはいけません。
                                <LineBreak/><LineBreak/>
第３条 （保証責任）<LineBreak/>
1. 開発者は、別途記載するライブラリを除き、本ソフトウェアの著作権を有し、または著作権者から再使用許諾する権利を受けていることを保証します。
                                    <LineBreak/>
2. 開発者は、本ソフトウェアのご利用者の使用目的への適合性および法律上の瑕疵担保責任を含め一切の保証を行いません。
                                <LineBreak/><LineBreak/>
第４条 （責任の範囲）<LineBreak/>
1. 前条に関わらず、ご利用者が本ソフトウェアを使用したことによりご利用者に直接的結果として発生した損害に対し開発者は責任を負いません。
                                <LineBreak/>
3. 開発者は、開発者の判断により第三者に本契約記載の業務を委託することができるものとします。ただし、委託にあたっての責任は、全て開発者の責任においてなされるものとします。
                                <LineBreak/><LineBreak/>
第５条 （権利の譲渡）<LineBreak/>
ご利用者は、当社の書面による事前の承諾なく下記の行為を行ってはいけません。<LineBreak/>
①． 本ソフトウェアの複製物を第三者に譲渡、貸与、占有移転すること<LineBreak/>
②． 本契約上の地位または本契約に基づく権利義務を第三者に移転、譲渡、担保の用に供すること
                                <LineBreak/><LineBreak/>
第６条 （本契約の終了）<LineBreak/>
ご利用者が本契約の条項に違反し、開発者が違反の是正を催告した後、２週間以内に是正されなかった場合、当社は本契約を解約し、ご利用者の本ソフトウェアの使用を終了させることができます。
                                <LineBreak/><LineBreak/>
第７条 （契約の変更）<LineBreak/>
本契約の変更は、開発者の判断で、変更できるものとします。
                                <LineBreak/><LineBreak/>
第８条 （協議）<LineBreak/>
本契約に規定されていない事項または本契約の解釈に疑義が生じた場合は、甲および乙は、誠意をもって協議するものとします。
                                <LineBreak/><LineBreak/>
以上
                                
                                <LineBreak/>


                                </TextBlock>

                            </ScrollViewer>

                        </TabItem>

                        <TabItem Style="{DynamicResource LicenseTabItemStyle}">
                            <TabItem.Header>
                                <Label Content="使用ライブラリ等" Style="{DynamicResource SectionTitle}" Padding="6" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></Label>
                            </TabItem.Header>

                            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" VerticalAlignment="Top" Padding="6" Style="{DynamicResource CustomScrollViewerStyle}">

                                <StackPanel Margin="6 6 50 6">

                                    <StackPanel Margin="0 0 0 0">

                                        <TextBlock TextWrapping="Wrap" Style="{DynamicResource DefaultTextBlockStyle}">
                                        本ソフトウェアは下記のライブラリを使用しています。
                                        <LineBreak/>
                                        </TextBlock>

                                        <TextBlock TextWrapping="Wrap" FontWeight="Bold" Style="{DynamicResource DefaultTextBlockStyle}">
                                    Live Chart for WPF<LineBreak/>
                                        </TextBlock>

                                        <TextBlock TextWrapping="Wrap" Padding="6" Style="{DynamicResource DefaultTextBlockStyle}">
The MIT License (MIT)<LineBreak/>
<LineBreak/>
Copyright (c) 2016 Alberto Rodriguez and LiveCharts contributors<LineBreak/>
<LineBreak/>
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
<LineBreak/><LineBreak/>
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
<LineBreak/><LineBreak/>
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
                                        </TextBlock>
                                    </StackPanel>

                                    <StackPanel Margin="0 24 0 0">
                                        <TextBlock TextWrapping="Wrap" FontWeight="Bold" Style="{DynamicResource DefaultTextBlockStyle}">
                                    FluentWPF<LineBreak/>
                                        </TextBlock>

                                        <TextBlock TextWrapping="Wrap" Padding="6" Style="{DynamicResource DefaultTextBlockStyle}">
                                        MIT License
<LineBreak/><LineBreak/>
Copyright (c) 2016 minami_SC
<LineBreak/><LineBreak/>
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
<LineBreak/><LineBreak/>
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
<LineBreak/><LineBreak/>
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

                                        </TextBlock>

                                    </StackPanel>

                                    <StackPanel Margin="0 24 0 0">
                                        <TextBlock TextWrapping="Wrap" FontWeight="Bold" Style="{DynamicResource DefaultTextBlockStyle}">
                                    Json.NET<LineBreak/>
                                        </TextBlock>
                                    </StackPanel>

                                    <TextBlock TextWrapping="Wrap" Padding="6" Style="{DynamicResource DefaultTextBlockStyle}">
                                        MIT License
<LineBreak/><LineBreak/>
Copyright (c) 2007 James Newton-King
<LineBreak/><LineBreak/>
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
<LineBreak/><LineBreak/>
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
<LineBreak/><LineBreak/>
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

                                    </TextBlock>

                                </StackPanel>

                            </ScrollViewer>

                        </TabItem>

                    </TabControl>

                </TabItem>

            </TabControl>

            <Border Grid.Row="2" Height="62" Margin="0" Background="{DynamicResource WindowBackgroundColorBrush}">

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0 12 0 0">
                    <Button Width="80" Content="キャンセル(_C)" Margin="0 0 24 0" Padding="3" IsCancel="True" Command="{Binding SettingsCancelCommand}" Visibility="Hidden"></Button>
                    <Button Width="80" Content="_OK" Margin="0 0 32 0" Padding="3" IsDefault="True" Command="{Binding SettingsOKCommand}"></Button>
                </StackPanel>

            </Border>

        </Grid>

    </Grid>

</fw:AcrylicWindow>
